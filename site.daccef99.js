parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"J4Nk":[function(require,module,exports) {
"use strict";var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable;function n(r){if(null==r)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(r)}function o(){try{if(!Object.assign)return!1;var r=new String("abc");if(r[5]="de","5"===Object.getOwnPropertyNames(r)[0])return!1;for(var t={},e=0;e<10;e++)t["_"+String.fromCharCode(e)]=e;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(r){return t[r]}).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach(function(r){n[r]=r}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(o){return!1}}module.exports=o()?Object.assign:function(o,c){for(var a,i,s=n(o),f=1;f<arguments.length;f++){for(var u in a=Object(arguments[f]))t.call(a,u)&&(s[u]=a[u]);if(r){i=r(a);for(var b=0;b<i.length;b++)e.call(a,i[b])&&(s[i[b]]=a[i[b]])}}return s};
},{}],"awqi":[function(require,module,exports) {
"use strict";var e=require("object-assign"),r="function"==typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,n=r?Symbol.for("react.portal"):60106,o=r?Symbol.for("react.fragment"):60107,u=r?Symbol.for("react.strict_mode"):60108,f=r?Symbol.for("react.profiler"):60114,l=r?Symbol.for("react.provider"):60109,c=r?Symbol.for("react.context"):60110,i=r?Symbol.for("react.forward_ref"):60112,a=r?Symbol.for("react.suspense"):60113;r&&Symbol.for("react.suspense_list");var s=r?Symbol.for("react.memo"):60115,p=r?Symbol.for("react.lazy"):60116;r&&Symbol.for("react.fundamental"),r&&Symbol.for("react.responder"),r&&Symbol.for("react.scope");var y="function"==typeof Symbol&&Symbol.iterator;function d(e){for(var r="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)r+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function h(e,r,t){this.props=e,this.context=r,this.refs=v,this.updater=t||m}function b(){}function S(e,r,t){this.props=e,this.context=r,this.refs=v,this.updater=t||m}h.prototype.isReactComponent={},h.prototype.setState=function(e,r){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(d(85));this.updater.enqueueSetState(this,e,r,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=h.prototype;var _=S.prototype=new b;_.constructor=S,e(_,h.prototype),_.isPureReactComponent=!0;var k={current:null},$={current:null},g=Object.prototype.hasOwnProperty,w={key:!0,ref:!0,__self:!0,__source:!0};function C(e,r,n){var o,u={},f=null,l=null;if(null!=r)for(o in void 0!==r.ref&&(l=r.ref),void 0!==r.key&&(f=""+r.key),r)g.call(r,o)&&!w.hasOwnProperty(o)&&(u[o]=r[o]);var c=arguments.length-2;if(1===c)u.children=n;else if(1<c){for(var i=Array(c),a=0;a<c;a++)i[a]=arguments[a+2];u.children=i}if(e&&e.defaultProps)for(o in c=e.defaultProps)void 0===u[o]&&(u[o]=c[o]);return{$$typeof:t,type:e,key:f,ref:l,props:u,_owner:$.current}}function E(e,r){return{$$typeof:t,type:e.type,key:r,ref:e.ref,props:e.props,_owner:e._owner}}function R(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}function x(e){var r={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return r[e]})}var P=/\/+/g,j=[];function O(e,r,t,n){if(j.length){var o=j.pop();return o.result=e,o.keyPrefix=r,o.func=t,o.context=n,o.count=0,o}return{result:e,keyPrefix:r,func:t,context:n,count:0}}function A(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>j.length&&j.push(e)}function I(e,r,o,u){var f=typeof e;"undefined"!==f&&"boolean"!==f||(e=null);var l=!1;if(null===e)l=!0;else switch(f){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case t:case n:l=!0}}if(l)return o(u,e,""===r?"."+q(e,0):r),1;if(l=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var i=r+q(f=e[c],c);l+=I(f,i,o,u)}else if(null===e||"object"!=typeof e?i=null:i="function"==typeof(i=y&&e[y]||e["@@iterator"])?i:null,"function"==typeof i)for(e=i.call(e),c=0;!(f=e.next()).done;)l+=I(f=f.value,i=r+q(f,c++),o,u);else if("object"===f)throw o=""+e,Error(d(31,"[object Object]"===o?"object with keys {"+Object.keys(e).join(", ")+"}":o,""));return l}function U(e,r,t){return null==e?0:I(e,"",r,t)}function q(e,r){return"object"==typeof e&&null!==e&&null!=e.key?x(e.key):r.toString(36)}function F(e,r){e.func.call(e.context,r,e.count++)}function L(e,r,t){var n=e.result,o=e.keyPrefix;e=e.func.call(e.context,r,e.count++),Array.isArray(e)?M(e,n,t,function(e){return e}):null!=e&&(R(e)&&(e=E(e,o+(!e.key||r&&r.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+t)),n.push(e))}function M(e,r,t,n,o){var u="";null!=t&&(u=(""+t).replace(P,"$&/")+"/"),U(e,L,r=O(r,u,n,o)),A(r)}function D(){var e=k.current;if(null===e)throw Error(d(321));return e}var V={Children:{map:function(e,r,t){if(null==e)return e;var n=[];return M(e,n,null,r,t),n},forEach:function(e,r,t){if(null==e)return e;U(e,F,r=O(null,null,r,t)),A(r)},count:function(e){return U(e,function(){return null},null)},toArray:function(e){var r=[];return M(e,r,null,function(e){return e}),r},only:function(e){if(!R(e))throw Error(d(143));return e}},createRef:function(){return{current:null}},Component:h,PureComponent:S,createContext:function(e,r){return void 0===r&&(r=null),(e={$$typeof:c,_calculateChangedBits:r,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:i,render:e}},lazy:function(e){return{$$typeof:p,_ctor:e,_status:-1,_result:null}},memo:function(e,r){return{$$typeof:s,type:e,compare:void 0===r?null:r}},useCallback:function(e,r){return D().useCallback(e,r)},useContext:function(e,r){return D().useContext(e,r)},useEffect:function(e,r){return D().useEffect(e,r)},useImperativeHandle:function(e,r,t){return D().useImperativeHandle(e,r,t)},useDebugValue:function(){},useLayoutEffect:function(e,r){return D().useLayoutEffect(e,r)},useMemo:function(e,r){return D().useMemo(e,r)},useReducer:function(e,r,t){return D().useReducer(e,r,t)},useRef:function(e){return D().useRef(e)},useState:function(e){return D().useState(e)},Fragment:o,Profiler:f,StrictMode:u,Suspense:a,createElement:C,cloneElement:function(r,n,o){if(null==r)throw Error(d(267,r));var u=e({},r.props),f=r.key,l=r.ref,c=r._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,c=$.current),void 0!==n.key&&(f=""+n.key),r.type&&r.type.defaultProps)var i=r.type.defaultProps;for(a in n)g.call(n,a)&&!w.hasOwnProperty(a)&&(u[a]=void 0===n[a]&&void 0!==i?i[a]:n[a])}var a=arguments.length-2;if(1===a)u.children=o;else if(1<a){i=Array(a);for(var s=0;s<a;s++)i[s]=arguments[s+2];u.children=i}return{$$typeof:t,type:r.type,key:f,ref:l,props:u,_owner:c}},createFactory:function(e){var r=C.bind(null,e);return r.type=e,r},isValidElement:R,version:"16.12.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:k,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:$,IsSomeRendererActing:{current:!1},assign:e}},B={default:V},N=B&&V||B;module.exports=N.default||N;
},{"object-assign":"J4Nk"}],"n8MK":[function(require,module,exports) {
"use strict";module.exports=require("./cjs/react.production.min.js");
},{"./cjs/react.production.min.js":"awqi"}],"IvPb":[function(require,module,exports) {
var global = arguments[3];
var e=arguments[3];Object.defineProperty(exports,"__esModule",{value:!0});var n=null,t=!1,o=3,r=-1,i=-1,l=!1,u=!1;function a(){if(!l){var e=n.expirationTime;u?k():u=!0,h(p,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var l=o,u=i;o=e,i=t;try{var s=r()}finally{o=l,i=u}if("function"==typeof s)if(s={callback:s,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=s.next=s.previous=s;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=s,a()),(t=r.previous).next=r.previous=s,s.next=r,s.previous=t}}function f(){if(-1===r&&null!==n&&1===n.priorityLevel){l=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{l=!1,null!==n?a():u=!1}}}function p(e){l=!0;var o=t;t=e;try{if(e)for(;null!==n;){var r=exports.unstable_now();if(!(n.expirationTime<=r))break;do{s()}while(null!==n&&n.expirationTime<=r)}else if(null!==n)do{s()}while(null!==n&&!T())}finally{l=!1,t=o,null!==n?a():u=!1,f()}}var c,v,x=Date,b="function"==typeof setTimeout?setTimeout:void 0,y="function"==typeof clearTimeout?clearTimeout:void 0,d="function"==typeof requestAnimationFrame?requestAnimationFrame:void 0,m="function"==typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function w(e){c=d(function(n){y(v),e(n)}),v=b(function(){m(c),e(exports.unstable_now())},100)}if("object"==typeof performance&&"function"==typeof performance.now){var _=performance;exports.unstable_now=function(){return _.now()}}else exports.unstable_now=function(){return x.now()};var h,k,T,g=null;if("undefined"!=typeof window?g=window:void 0!==e&&(g=e),g&&g._schedMock){var M=g._schedMock;h=M[0],k=M[1],T=M[2],exports.unstable_now=M[3]}else if("undefined"==typeof window||"function"!=typeof MessageChannel){var P=null,C=function(e){if(null!==P)try{P(e)}finally{P=null}};h=function(e){null!==P?setTimeout(h,0,e):(P=e,setTimeout(C,0,!1))},k=function(){P=null},T=function(){return!1}}else{"undefined"!=typeof console&&("function"!=typeof d&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var F=null,L=!1,A=-1,j=!1,q=!1,E=0,I=33,N=33;T=function(){return E<=exports.unstable_now()};var B=new MessageChannel,D=B.port2;B.port1.onmessage=function(){L=!1;var e=F,n=A;F=null,A=-1;var t=exports.unstable_now(),o=!1;if(0>=E-t){if(!(-1!==n&&n<=t))return j||(j=!0,w(O)),F=e,void(A=n);o=!0}if(null!==e){q=!0;try{e(o)}finally{q=!1}}};var O=function(e){if(null!==F){w(O);var n=e-E+N;n<N&&I<N?(8>n&&(n=8),N=n<I?I:n):I=n,E=e+N,L||(L=!0,D.postMessage(void 0))}else j=!1};h=function(e,n){F=e,A=n,q||0>n?D.postMessage(void 0):j||(j=!0,w(O))},k=function(){F=null,L=!1,A=-1}}exports.unstable_ImmediatePriority=1,exports.unstable_UserBlockingPriority=2,exports.unstable_NormalPriority=3,exports.unstable_IdlePriority=5,exports.unstable_LowPriority=4,exports.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=o,i=r;o=e,r=exports.unstable_now();try{return n()}finally{o=t,r=i,f()}},exports.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var t=o,i=r;o=n,r=exports.unstable_now();try{return e()}finally{o=t,r=i,f()}},exports.unstable_scheduleCallback=function(e,t){var i=-1!==r?r:exports.unstable_now();if("object"==typeof t&&null!==t&&"number"==typeof t.timeout)t=i+t.timeout;else switch(o){case 1:t=i+-1;break;case 2:t=i+250;break;case 5:t=i+1073741823;break;case 4:t=i+1e4;break;default:t=i+5e3}if(e={callback:e,priorityLevel:o,expirationTime:t,next:null,previous:null},null===n)n=e.next=e.previous=e,a();else{i=null;var l=n;do{if(l.expirationTime>t){i=l;break}l=l.next}while(l!==n);null===i?i=n:i===n&&(n=e,a()),(t=i.previous).next=i.previous=e,e.next=i,e.previous=t}return e},exports.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var o=e.previous;o.next=t,t.previous=o}e.next=e.previous=null}},exports.unstable_wrapCallback=function(e){var n=o;return function(){var t=o,i=r;o=n,r=exports.unstable_now();try{return e.apply(this,arguments)}finally{o=t,r=i,f()}}},exports.unstable_getCurrentPriorityLevel=function(){return o},exports.unstable_shouldYield=function(){return!t&&(null!==n&&n.expirationTime<i||T())},exports.unstable_continueExecution=function(){null!==n&&a()},exports.unstable_pauseExecution=function(){},exports.unstable_getFirstCallbackNode=function(){return n};
},{}],"MDSO":[function(require,module,exports) {
"use strict";module.exports=require("./cjs/scheduler.production.min.js");
},{"./cjs/scheduler.production.min.js":"IvPb"}],"i17t":[function(require,module,exports) {
"use strict";var e=require("react"),t=require("object-assign"),n=require("scheduler");function r(e,t,n,r,l,a,i,o){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[n,r,l,a,i,o],c=0;(e=Error(t.replace(/%s/g,function(){return u[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}function l(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,l=0;l<t;l++)n+="&args[]="+encodeURIComponent(arguments[l+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}function a(e,t,n,r,l,a,i,o,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(s){this.onError(s)}}e||l("227");var i=!1,o=null,u=!1,c=null,s={onError:function(e){i=!0,o=e}};function f(e,t,n,r,l,u,c,f,d){i=!1,o=null,a.apply(s,arguments)}function d(e,t,n,r,a,s,d,p,m){if(f.apply(this,arguments),i){if(i){var h=o;i=!1,o=null}else l("198"),h=void 0;u||(u=!0,c=h)}}var p=null,m={};function h(){if(p)for(var e in m){var t=m[e],n=p.indexOf(e);if(-1<n||l("96",e),!g[n])for(var r in t.extractEvents||l("97",e),g[n]=t,n=t.eventTypes){var a=void 0,i=n[r],o=t,u=r;y.hasOwnProperty(u)&&l("99",u),y[u]=i;var c=i.phasedRegistrationNames;if(c){for(a in c)c.hasOwnProperty(a)&&v(c[a],o,u);a=!0}else i.registrationName?(v(i.registrationName,o,u),a=!0):a=!1;a||l("98",r,e)}}}function v(e,t,n){b[e]&&l("100",e),b[e]=t,k[e]=t.eventTypes[n].dependencies}var g=[],y={},b={},k={},x=null,T=null,w=null;function S(e,t,n){var r=e.type||"unknown-event";e.currentTarget=w(n),d(r,t,void 0,e),e.currentTarget=null}function E(e,t){return null==t&&l("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function C(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var _=null;function P(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)S(e,t[r],n[r]);else t&&S(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var N={injectEventPluginOrder:function(e){p&&l("101"),p=Array.prototype.slice.call(e),h()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&l("102",t),m[t]=r,n=!0)}n&&h()}};function z(e,t){var n=e.stateNode;if(!n)return null;var r=x(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&l("231",t,typeof n),n)}function R(e){if(null!==e&&(_=E(_,e)),e=_,_=null,e&&(C(e,P),_&&l("95"),u))throw e=c,u=!1,c=null,e}var U=Math.random().toString(36).slice(2),I="__reactInternalInstance$"+U,M="__reactEventHandlers$"+U;function D(e){if(e[I])return e[I];for(;!e[I];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[I]).tag||6===e.tag?e:null}function O(e){return!(e=e[I])||5!==e.tag&&6!==e.tag?null:e}function F(e){if(5===e.tag||6===e.tag)return e.stateNode;l("33")}function L(e){return e[M]||null}function A(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function W(e,t,n){(t=z(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=E(n._dispatchListeners,t),n._dispatchInstances=E(n._dispatchInstances,e))}function V(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=A(t);for(t=n.length;0<t--;)W(n[t],"captured",e);for(t=0;t<n.length;t++)W(n[t],"bubbled",e)}}function j(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=z(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=E(n._dispatchListeners,t),n._dispatchInstances=E(n._dispatchInstances,e))}function B(e){e&&e.dispatchConfig.registrationName&&j(e._targetInst,null,e)}function H(e){C(e,V)}var Q=!("undefined"==typeof window||!window.document||!window.document.createElement);function K(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $={animationend:K("Animation","AnimationEnd"),animationiteration:K("Animation","AnimationIteration"),animationstart:K("Animation","AnimationStart"),transitionend:K("Transition","TransitionEnd")},q={},Y={};function X(e){if(q[e])return q[e];if(!$[e])return e;var t,n=$[e];for(t in n)if(n.hasOwnProperty(t)&&t in Y)return q[e]=n[t];return e}Q&&(Y=document.createElement("div").style,"AnimationEvent"in window||(delete $.animationend.animation,delete $.animationiteration.animation,delete $.animationstart.animation),"TransitionEvent"in window||delete $.transitionend.transition);var G=X("animationend"),Z=X("animationiteration"),J=X("animationstart"),ee=X("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,le=null;function ae(){if(le)return le;var e,t,n=re,r=n.length,l="value"in ne?ne.value:ne.textContent,a=l.length;for(e=0;e<r&&n[e]===l[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===l[a-t];t++);return le=l.slice(e,1<t?1-t:void 0)}function ie(){return!0}function oe(){return!1}function ue(e,t,n,r){for(var l in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(l)&&((t=e[l])?this[l]=t(n):"target"===l?this.target=r:this[l]=n[l]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:oe,this.isPropagationStopped=oe,this}function ce(e,t,n,r){if(this.eventPool.length){var l=this.eventPool.pop();return this.call(l,e,t,n,r),l}return new this(e,t,n,r)}function se(e){e instanceof this||l("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}t(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:oe,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=oe,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function n(){}function r(){return l.apply(this,arguments)}var l=this;n.prototype=l.prototype;var a=new n;return t(a,r.prototype),r.prototype=a,r.prototype.constructor=r,r.Interface=t({},l.Interface,e),r.extend=l.extend,fe(r),r},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=Q&&"CompositionEvent"in window,ve=null;Q&&"documentMode"in document&&(ve=document.documentMode);var ge=Q&&"TextEvent"in window&&!ve,ye=Q&&(!he||ve&&8<ve&&11>=ve),be=String.fromCharCode(32),ke={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},xe=!1;function Te(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function we(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Se=!1;function Ee(e,t){switch(e){case"compositionend":return we(t);case"keypress":return 32!==t.which?null:(xe=!0,be);case"textInput":return(e=t.data)===be&&xe?null:e;default:return null}}function Ce(e,t){if(Se)return"compositionend"===e||!he&&Te(e,t)?(e=ae(),le=re=ne=null,Se=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ye&&"ko"!==t.locale?null:t.data;default:return null}}var _e={eventTypes:ke,extractEvents:function(e,t,n,r){var l=void 0,a=void 0;if(he)e:{switch(e){case"compositionstart":l=ke.compositionStart;break e;case"compositionend":l=ke.compositionEnd;break e;case"compositionupdate":l=ke.compositionUpdate;break e}l=void 0}else Se?Te(e,n)&&(l=ke.compositionEnd):"keydown"===e&&229===n.keyCode&&(l=ke.compositionStart);return l?(ye&&"ko"!==n.locale&&(Se||l!==ke.compositionStart?l===ke.compositionEnd&&Se&&(a=ae()):(re="value"in(ne=r)?ne.value:ne.textContent,Se=!0)),l=de.getPooled(l,t,n,r),a?l.data=a:null!==(a=we(n))&&(l.data=a),H(l),a=l):a=null,(e=ge?Ee(e,n):Ce(e,n))?((t=pe.getPooled(ke.beforeInput,t,n,r)).data=e,H(t)):t=null,null===a?t:null===t?a:[a,t]}},Pe=null,Ne=null,ze=null;function Re(e){if(e=T(e)){"function"!=typeof Pe&&l("280");var t=x(e.stateNode);Pe(e.stateNode,e.type,t)}}function Ue(e){Ne?ze?ze.push(e):ze=[e]:Ne=e}function Ie(){if(Ne){var e=Ne,t=ze;if(ze=Ne=null,Re(e),t)for(e=0;e<t.length;e++)Re(t[e])}}function Me(e,t){return e(t)}function De(e,t,n){return e(t,n)}function Oe(){}var Fe=!1;function Le(e,t){if(Fe)return e(t);Fe=!0;try{return Me(e,t)}finally{Fe=!1,(null!==Ne||null!==ze)&&(Oe(),Ie())}}var Ae={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function We(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ae[e.type]:"textarea"===t}function Ve(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function je(e){if(!Q)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}function Be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function He(e){var t=Be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function Qe(e){e._valueTracker||(e._valueTracker=He(e))}function Ke(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var $e=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;$e.hasOwnProperty("ReactCurrentDispatcher")||($e.ReactCurrentDispatcher={current:null});var qe=/^(.*)[\\\/]/,Ye="function"==typeof Symbol&&Symbol.for,Xe=Ye?Symbol.for("react.element"):60103,Ge=Ye?Symbol.for("react.portal"):60106,Ze=Ye?Symbol.for("react.fragment"):60107,Je=Ye?Symbol.for("react.strict_mode"):60108,et=Ye?Symbol.for("react.profiler"):60114,tt=Ye?Symbol.for("react.provider"):60109,nt=Ye?Symbol.for("react.context"):60110,rt=Ye?Symbol.for("react.concurrent_mode"):60111,lt=Ye?Symbol.for("react.forward_ref"):60112,at=Ye?Symbol.for("react.suspense"):60113,it=Ye?Symbol.for("react.memo"):60115,ot=Ye?Symbol.for("react.lazy"):60116,ut="function"==typeof Symbol&&Symbol.iterator;function ct(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=ut&&e[ut]||e["@@iterator"])?e:null}function st(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case rt:return"ConcurrentMode";case Ze:return"Fragment";case Ge:return"Portal";case et:return"Profiler";case Je:return"StrictMode";case at:return"Suspense"}if("object"==typeof e)switch(e.$$typeof){case nt:return"Context.Consumer";case tt:return"Context.Provider";case lt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case it:return st(e.type);case ot:if(e=1===e._status?e._result:null)return st(e)}return null}function ft(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,l=e._debugSource,a=st(e.type);n=null,r&&(n=st(r.type)),r=a,a="",l?a=" (at "+l.fileName.replace(qe,"")+":"+l.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var dt=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pt=Object.prototype.hasOwnProperty,mt={},ht={};function vt(e){return!!pt.call(ht,e)||!pt.call(mt,e)&&(dt.test(e)?ht[e]=!0:(mt[e]=!0,!1))}function gt(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}function yt(e,t,n,r){if(null==t||gt(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function bt(e,t,n,r,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t}var kt={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){kt[e]=new bt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];kt[t]=new bt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){kt[e]=new bt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){kt[e]=new bt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){kt[e]=new bt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){kt[e]=new bt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){kt[e]=new bt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){kt[e]=new bt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){kt[e]=new bt(e,5,!1,e.toLowerCase(),null)});var xt=/[\-:]([a-z])/g;function Tt(e){return e[1].toUpperCase()}function wt(e,t,n,r){var l=kt.hasOwnProperty(t)?kt[t]:null;(null!==l?0===l.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(yt(t,n,l,r)&&(n=null),r||null===l?vt(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,r=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function St(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Et(e,n){var r=n.checked;return t({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function Ct(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=St(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _t(e,t){null!=(t=t.checked)&&wt(e,"checked",t,!1)}function Pt(e,t){_t(e,t);var n=St(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?zt(e,t.type,n):t.hasOwnProperty("defaultValue")&&zt(e,t.type,St(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Nt(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function zt(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(xt,Tt);kt[t]=new bt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(xt,Tt);kt[t]=new bt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(xt,Tt);kt[t]=new bt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){kt[e]=new bt(e,1,!1,e.toLowerCase(),null)});var Rt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ut(e,t,n){return(e=ue.getPooled(Rt.change,e,t,n)).type="change",Ue(n),H(e),e}var It=null,Mt=null;function Dt(e){R(e)}function Ot(e){if(Ke(F(e)))return e}function Ft(e,t){if("change"===e)return t}var Lt=!1;function At(){It&&(It.detachEvent("onpropertychange",Wt),Mt=It=null)}function Wt(e){"value"===e.propertyName&&Ot(Mt)&&Le(Dt,e=Ut(Mt,e,Ve(e)))}function Vt(e,t,n){"focus"===e?(At(),Mt=n,(It=t).attachEvent("onpropertychange",Wt)):"blur"===e&&At()}function jt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Ot(Mt)}function Bt(e,t){if("click"===e)return Ot(t)}function Ht(e,t){if("input"===e||"change"===e)return Ot(t)}Q&&(Lt=je("input")&&(!document.documentMode||9<document.documentMode));var Qt={eventTypes:Rt,_isInputEventSupported:Lt,extractEvents:function(e,t,n,r){var l=t?F(t):window,a=void 0,i=void 0,o=l.nodeName&&l.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===l.type?a=Ft:We(l)?Lt?a=Ht:(a=jt,i=Vt):(o=l.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(a=Bt),a&&(a=a(e,t)))return Ut(a,n,r);i&&i(e,l,t),"blur"===e&&(e=l._wrapperState)&&e.controlled&&"number"===l.type&&zt(l,"number",l.value)}},Kt=ue.extend({view:null,detail:null}),$t={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=$t[e])&&!!t[e]}function Yt(){return qt}var Xt=0,Gt=0,Zt=!1,Jt=!1,en=Kt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Xt;return Xt=e.screenX,Zt?"mousemove"===e.type?e.screenX-t:0:(Zt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Gt;return Gt=e.screenY,Jt?"mousemove"===e.type?e.screenY-t:0:(Jt=!0,0)}}),tn=en.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),nn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},rn={eventTypes:nn,extractEvents:function(e,t,n,r){var l="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(l&&(n.relatedTarget||n.fromElement)||!a&&!l)return null;if(l=r.window===r?r:(l=r.ownerDocument)?l.defaultView||l.parentWindow:window,a?(a=t,t=(t=n.relatedTarget||n.toElement)?D(t):null):a=null,a===t)return null;var i=void 0,o=void 0,u=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(i=en,o=nn.mouseLeave,u=nn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=tn,o=nn.pointerLeave,u=nn.pointerEnter,c="pointer");var s=null==a?l:F(a);if(l=null==t?l:F(t),(e=i.getPooled(o,a,n,r)).type=c+"leave",e.target=s,e.relatedTarget=l,(n=i.getPooled(u,t,n,r)).type=c+"enter",n.target=l,n.relatedTarget=s,r=t,a&&r)e:{for(l=r,c=0,i=t=a;i;i=A(i))c++;for(i=0,u=l;u;u=A(u))i++;for(;0<c-i;)t=A(t),c--;for(;0<i-c;)l=A(l),i--;for(;c--;){if(t===l||t===l.alternate)break e;t=A(t),l=A(l)}t=null}else t=null;for(l=t,t=[];a&&a!==l&&(null===(c=a.alternate)||c!==l);)t.push(a),a=A(a);for(a=[];r&&r!==l&&(null===(c=r.alternate)||c!==l);)a.push(r),r=A(r);for(r=0;r<t.length;r++)j(t[r],"bubbled",e);for(r=a.length;0<r--;)j(a[r],"captured",n);return[e,n]}};function ln(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var an=Object.prototype.hasOwnProperty;function on(e,t){if(ln(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!an.call(t,n[r])||!ln(e[n[r]],t[n[r]]))return!1;return!0}function un(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function cn(e){2!==un(e)&&l("188")}function sn(e){var t=e.alternate;if(!t)return 3===(t=un(e))&&l("188"),1===t?null:e;for(var n=e,r=t;;){var a=n.return,i=a?a.alternate:null;if(!a||!i)break;if(a.child===i.child){for(var o=a.child;o;){if(o===n)return cn(a),e;if(o===r)return cn(a),t;o=o.sibling}l("188")}if(n.return!==r.return)n=a,r=i;else{o=!1;for(var u=a.child;u;){if(u===n){o=!0,n=a,r=i;break}if(u===r){o=!0,r=a,n=i;break}u=u.sibling}if(!o){for(u=i.child;u;){if(u===n){o=!0,n=i,r=a;break}if(u===r){o=!0,r=i,n=a;break}u=u.sibling}o||l("189")}}n.alternate!==r&&l("190")}return 3!==n.tag&&l("188"),n.stateNode.current===n?e:t}function fn(e){if(!(e=sn(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var dn=ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pn=ue.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),mn=Kt.extend({relatedTarget:null});function hn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var vn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},gn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},yn=Kt.extend({key:function(e){if(e.key){var t=vn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=hn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?gn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yt,charCode:function(e){return"keypress"===e.type?hn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?hn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),bn=en.extend({dataTransfer:null}),kn=Kt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yt}),xn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Tn=en.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),wn=[["abort","abort"],[G,"animationEnd"],[Z,"animationIteration"],[J,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Sn={},En={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},Sn[e]=t,En[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),wn.forEach(function(e){Cn(e,!1)});var _n={eventTypes:Sn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=En[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var l=En[e];if(!l)return null;switch(e){case"keypress":if(0===hn(n))return null;case"keydown":case"keyup":e=yn;break;case"blur":case"focus":e=mn;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=en;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=bn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=kn;break;case G:case Z:case J:e=dn;break;case ee:e=xn;break;case"scroll":e=Kt;break;case"wheel":e=Tn;break;case"copy":case"cut":case"paste":e=pn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=tn;break;default:e=ue}return H(t=e.getPooled(l,t,n,r)),t}},Pn=_n.isInteractiveTopLevelEventType,Nn=[];function zn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=D(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var l=Ve(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=null,o=0;o<g.length;o++){var u=g[o];u&&(u=u.extractEvents(r,t,a,l))&&(i=E(i,u))}R(i)}}var Rn=!0;function Un(e,t){if(!t)return null;var n=(Pn(e)?Mn:Dn).bind(null,e);t.addEventListener(e,n,!1)}function In(e,t){if(!t)return null;var n=(Pn(e)?Mn:Dn).bind(null,e);t.addEventListener(e,n,!0)}function Mn(e,t){De(Dn,e,t)}function Dn(e,t){if(Rn){var n=Ve(t);if(null===(n=D(n))||"number"!=typeof n.tag||2===un(n)||(n=null),Nn.length){var r=Nn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Le(zn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Nn.length&&Nn.push(e)}}}var On={},Fn=0,Ln="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,Ln)||(e[Ln]=Fn++,On[e[Ln]]={}),On[e[Ln]]}function Wn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Vn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function jn(e,t){var n,r=Vn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Vn(r)}}function Bn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Bn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Hn(){for(var e=window,t=Wn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=Wn((e=t.contentWindow).document)}return t}function Qn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Kn(){var e=Hn();if(Qn(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,l=n.focusNode;n=n.focusOffset;try{t.nodeType,l.nodeType}catch(p){t=null;break e}var a=0,i=-1,o=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(i=a+r),s!==l||0!==n&&3!==s.nodeType||(o=a+n),3===s.nodeType&&(a+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++u===r&&(i=a),f===l&&++c===n&&(o=a),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===i||-1===o?null:{start:i,end:o}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}function $n(e){var t=Hn(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Bn(n.ownerDocument.documentElement,n)){if(null!==r&&Qn(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var l=n.textContent.length,a=Math.min(r.start,l);r=void 0===r.end?a:Math.min(r.end,l),!e.extend&&a>r&&(l=r,r=a,a=l),l=jn(n,a);var i=jn(n,r);l&&i&&(1!==e.rangeCount||e.anchorNode!==l.node||e.anchorOffset!==l.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(l.node,l.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var qn=Q&&"documentMode"in document&&11>=document.documentMode,Yn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Xn=null,Gn=null,Zn=null,Jn=!1;function er(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Jn||null==Xn||Xn!==Wn(n)?null:("selectionStart"in(n=Xn)&&Qn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Zn&&on(Zn,n)?null:(Zn=n,(e=ue.getPooled(Yn.select,Gn,e,t)).type="select",e.target=Xn,H(e),e))}var tr={eventTypes:Yn,extractEvents:function(e,t,n,r){var l,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(l=!a)){e:{a=An(a),l=k.onSelect;for(var i=0;i<l.length;i++){var o=l[i];if(!a.hasOwnProperty(o)||!a[o]){a=!1;break e}}a=!0}l=!a}if(l)return null;switch(a=t?F(t):window,e){case"focus":(We(a)||"true"===a.contentEditable)&&(Xn=a,Gn=t,Zn=null);break;case"blur":Zn=Gn=Xn=null;break;case"mousedown":Jn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Jn=!1,er(n,r);case"selectionchange":if(qn)break;case"keydown":case"keyup":return er(n,r)}return null}};function nr(t){var n="";return e.Children.forEach(t,function(e){null!=e&&(n+=e)}),n}function rr(e,n){return e=t({children:void 0},n),(n=nr(n.children))&&(e.children=n),e}function lr(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+St(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function ar(e,n){return null!=n.dangerouslySetInnerHTML&&l("91"),t({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ir(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&l("92"),Array.isArray(t)&&(1>=t.length||l("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:St(n)}}function or(e,t){var n=St(t.value),r=St(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ur(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x=L,T=O,w=F,N.injectEventPluginsByName({SimpleEventPlugin:_n,EnterLeaveEventPlugin:rn,ChangeEventPlugin:Qt,SelectEventPlugin:tr,BeforeInputEventPlugin:_e});var cr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function sr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function fr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?sr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var dr=void 0,pr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,l){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==cr.svg||"innerHTML"in e)e.innerHTML=t;else{for((dr=dr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=dr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function mr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var hr={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},vr=["Webkit","ms","Moz","O"];function gr(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||hr.hasOwnProperty(e)&&hr[e]?(""+t).trim():t+"px"}function yr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),l=gr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}Object.keys(hr).forEach(function(e){vr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),hr[t]=hr[e]})});var br=t({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function kr(e,t){t&&(br[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&l("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&l("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||l("61")),null!=t.style&&"object"!=typeof t.style&&l("62",""))}function xr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Tr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=k[t];for(var r=0;r<t.length;r++){var l=t[r];if(!n.hasOwnProperty(l)||!n[l]){switch(l){case"scroll":In("scroll",e);break;case"focus":case"blur":In("focus",e),In("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":je(l)&&In(l,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(l)&&Un(l,e)}n[l]=!0}}}function wr(){}var Sr=null,Er=null;function Cr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function _r(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Pr="function"==typeof setTimeout?setTimeout:void 0,Nr="function"==typeof clearTimeout?clearTimeout:void 0,zr=n.unstable_scheduleCallback,Rr=n.unstable_cancelCallback;function Ur(e,t,n,r,l){e[M]=l,"input"===n&&"radio"===l.type&&null!=l.name&&_t(e,l),xr(n,r),r=xr(n,l);for(var a=0;a<t.length;a+=2){var i=t[a],o=t[a+1];"style"===i?yr(e,o):"dangerouslySetInnerHTML"===i?pr(e,o):"children"===i?mr(e,o):wt(e,i,o,r)}switch(n){case"input":Pt(e,l);break;case"textarea":or(e,l);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!l.multiple,null!=(n=l.value)?lr(e,!!l.multiple,n,!1):t!==!!l.multiple&&(null!=l.defaultValue?lr(e,!!l.multiple,l.defaultValue,!0):lr(e,!!l.multiple,l.multiple?[]:"",!1))}}function Ir(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Mr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var Dr=[],Or=-1;function Fr(e){0>Or||(e.current=Dr[Or],Dr[Or]=null,Or--)}function Lr(e,t){Dr[++Or]=e.current,e.current=t}var Ar={},Wr={current:Ar},Vr={current:!1},jr=Ar;function Br(e,t){var n=e.type.contextTypes;if(!n)return Ar;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,a={};for(l in n)a[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Hr(e){return null!=(e=e.childContextTypes)}function Qr(e){Fr(Vr,e),Fr(Wr,e)}function Kr(e){Fr(Vr,e),Fr(Wr,e)}function $r(e,t,n){Wr.current!==Ar&&l("168"),Lr(Wr,t,e),Lr(Vr,n,e)}function qr(e,n,r){var a=e.stateNode;if(e=n.childContextTypes,"function"!=typeof a.getChildContext)return r;for(var i in a=a.getChildContext())i in e||l("108",st(n)||"Unknown",i);return t({},r,a)}function Yr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Ar,jr=Wr.current,Lr(Wr,t,e),Lr(Vr,Vr.current,e),!0}function Xr(e,t,n){var r=e.stateNode;r||l("169"),n?(t=qr(e,t,jr),r.__reactInternalMemoizedMergedChildContext=t,Fr(Vr,e),Fr(Wr,e),Lr(Wr,t,e)):Fr(Vr,e),Lr(Vr,n,e)}var Gr=null,Zr=null;function Jr(e){return function(t){try{return e(t)}catch(n){}}}function el(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Gr=Jr(function(e){return t.onCommitFiberRoot(n,e)}),Zr=Jr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(r){}return!0}function tl(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function nl(e,t,n,r){return new tl(e,t,n,r)}function rl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function ll(e){if("function"==typeof e)return rl(e)?1:0;if(null!=e){if((e=e.$$typeof)===lt)return 11;if(e===it)return 14}return 2}function al(e,t){var n=e.alternate;return null===n?((n=nl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function il(e,t,n,r,a,i){var o=2;if(r=e,"function"==typeof e)rl(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case Ze:return ol(n.children,a,i,t);case rt:return ul(n,3|a,i,t);case Je:return ul(n,2|a,i,t);case et:return(e=nl(12,n,t,4|a)).elementType=et,e.type=et,e.expirationTime=i,e;case at:return(e=nl(13,n,t,a)).elementType=at,e.type=at,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case tt:o=10;break e;case nt:o=9;break e;case lt:o=11;break e;case it:o=14;break e;case ot:o=16,r=null;break e}l("130",null==e?e:typeof e,"")}return(t=nl(o,n,t,a)).elementType=e,t.type=r,t.expirationTime=i,t}function ol(e,t,n,r){return(e=nl(7,e,r,t)).expirationTime=n,e}function ul(e,t,n,r){return e=nl(8,e,r,t),t=0==(1&t)?Je:rt,e.elementType=t,e.type=t,e.expirationTime=n,e}function cl(e,t,n){return(e=nl(6,e,null,t)).expirationTime=n,e}function sl(e,t,n){return(t=nl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function fl(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),hl(t,e)}function dl(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?fl(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,fl(e,t)):t>n&&fl(e,t)}hl(0,e)}function pl(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),hl(t,e)}function ml(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function hl(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,l=t.earliestPendingTime,a=t.latestPingedTime;0===(l=0!==l?l:a)&&(0===e||r<e)&&(l=r),0!==(e=l)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=l,t.expirationTime=e}function vl(e,n){if(e&&e.defaultProps)for(var r in n=t({},n),e=e.defaultProps)void 0===n[r]&&(n[r]=e[r]);return n}function gl(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}var yl=(new e.Component).refs;function bl(e,n,r,l){r=null==(r=r(l,n=e.memoizedState))?n:t({},n,r),e.memoizedState=r,null!==(l=e.updateQueue)&&0===e.expirationTime&&(l.baseState=r)}var kl={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===un(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Vo(),l=ci(r=so(r,e));l.payload=t,null!=n&&(l.callback=n),lo(),fi(e,l),ho(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Vo(),l=ci(r=so(r,e));l.tag=ri,l.payload=t,null!=n&&(l.callback=n),lo(),fi(e,l),ho(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Vo(),r=ci(n=so(n,e));r.tag=li,null!=t&&(r.callback=t),lo(),fi(e,r),ho(e,n)}};function xl(e,t,n,r,l,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!on(n,r)||!on(l,a))}function Tl(e,t,n){var r=!1,l=Ar,a=t.contextType;return"object"==typeof a&&null!==a?a=ti(a):(l=Hr(t)?jr:Wr.current,a=(r=null!=(r=t.contextTypes))?Br(e,l):Ar),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=kl,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=a),t}function wl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&kl.enqueueReplaceState(t,t.state,null)}function Sl(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=yl;var a=t.contextType;"object"==typeof a&&null!==a?l.context=ti(a):(a=Hr(t)?jr:Wr.current,l.context=Br(e,a)),null!==(a=e.updateQueue)&&(hi(e,a,n,l,r),l.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(bl(e,t,a,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&kl.enqueueReplaceState(l,l.state,null),null!==(a=e.updateQueue)&&(hi(e,a,n,l,r),l.state=e.memoizedState)),"function"==typeof l.componentDidMount&&(e.effectTag|=4)}var El=Array.isArray;function Cl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&l("309"),r=n.stateNode),r||l("147",e);var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===yl&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}"string"!=typeof e&&l("284"),n._owner||l("290",e)}return e}function _l(e,t){"textarea"!==e.type&&l("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function Pl(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t,n){return(e=al(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function o(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=cl(n,e.mode,r)).return=e,t):((t=a(t,n,r)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props,r)).ref=Cl(e,t,n),r.return=e,r):((r=il(n.type,n.key,n.props,null,e.mode,r)).ref=Cl(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=sl(n,e.mode,r)).return=e,t):((t=a(t,n.children||[],r)).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=ol(n,e.mode,r,l)).return=e,t):((t=a(t,n,r)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=cl(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case Xe:return(n=il(t.type,t.key,t.props,null,e.mode,n)).ref=Cl(e,null,t),n.return=e,n;case Ge:return(t=sl(t,e.mode,n)).return=e,t}if(El(t)||ct(t))return(t=ol(t,e.mode,n,null)).return=e,t;_l(e,t)}return null}function p(e,t,n,r){var l=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==l?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case Xe:return n.key===l?n.type===Ze?f(e,t,n.props.children,r,l):c(e,t,n,r):null;case Ge:return n.key===l?s(e,t,n,r):null}if(El(n)||ct(n))return null!==l?null:f(e,t,n,r,null);_l(e,n)}return null}function m(e,t,n,r,l){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case Xe:return e=e.get(null===r.key?n:r.key)||null,r.type===Ze?f(t,e,r.props.children,l,r.key):c(t,e,r,l);case Ge:return s(t,e=e.get(null===r.key?n:r.key)||null,r,l)}if(El(r)||ct(r))return f(t,e=e.get(n)||null,r,l,null);_l(t,r)}return null}function h(l,a,o,u){for(var c=null,s=null,f=a,h=a=0,v=null;null!==f&&h<o.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var g=p(l,f,o[h],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(l,f),a=i(g,a,h),null===s?c=g:s.sibling=g,s=g,f=v}if(h===o.length)return n(l,f),c;if(null===f){for(;h<o.length;h++)(f=d(l,o[h],u))&&(a=i(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(l,f);h<o.length;h++)(v=m(f,l,h,o[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),a=i(v,a,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(l,e)}),c}function v(a,o,u,c){var s=ct(u);"function"!=typeof s&&l("150"),null==(u=s.call(u))&&l("151");for(var f=s=null,h=o,v=o=0,g=null,y=u.next();null!==h&&!y.done;v++,y=u.next()){h.index>v?(g=h,h=null):g=h.sibling;var b=p(a,h,y.value,c);if(null===b){h||(h=g);break}e&&h&&null===b.alternate&&t(a,h),o=i(b,o,v),null===f?s=b:f.sibling=b,f=b,h=g}if(y.done)return n(a,h),s;if(null===h){for(;!y.done;v++,y=u.next())null!==(y=d(a,y.value,c))&&(o=i(y,o,v),null===f?s=y:f.sibling=y,f=y);return s}for(h=r(a,h);!y.done;v++,y=u.next())null!==(y=m(h,a,v,y.value,c))&&(e&&null!==y.alternate&&h.delete(null===y.key?v:y.key),o=i(y,o,v),null===f?s=y:f.sibling=y,f=y);return e&&h.forEach(function(e){return t(a,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ze&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Xe:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ze:c.elementType===i.type){n(e,c.sibling),(r=a(c,i.type===Ze?i.props.children:i.props,u)).ref=Cl(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ze?((r=ol(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=il(i.type,i.key,i.props,null,e.mode,u)).ref=Cl(e,r,i),u.return=e,e=u)}return o(e);case Ge:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=a(r,i.children||[],u)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=sl(i,e.mode,u)).return=e,e=r}return o(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,i,u)).return=e,e=r):(n(e,r),(r=cl(i,e.mode,u)).return=e,e=r),o(e);if(El(i))return h(e,r,i,u);if(ct(i))return v(e,r,i,u);if(s&&_l(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:l("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var Nl=Pl(!0),zl=Pl(!1),Rl={},Ul={current:Rl},Il={current:Rl},Ml={current:Rl};function Dl(e){return e===Rl&&l("174"),e}function Ol(e,t){Lr(Ml,t,e),Lr(Il,e,e),Lr(Ul,Rl,e);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:fr(null,"");break;default:t=fr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Fr(Ul,e),Lr(Ul,t,e)}function Fl(e){Fr(Ul,e),Fr(Il,e),Fr(Ml,e)}function Ll(e){Dl(Ml.current);var t=Dl(Ul.current),n=fr(t,e.type);t!==n&&(Lr(Il,e,e),Lr(Ul,n,e))}function Al(e){Il.current===e&&(Fr(Ul,e),Fr(Il,e))}var Wl=0,Vl=2,jl=4,Bl=8,Hl=16,Ql=32,Kl=64,$l=128,ql=$e.ReactCurrentDispatcher,Yl=0,Xl=null,Gl=null,Zl=null,Jl=null,ea=null,ta=null,na=0,ra=null,la=0,aa=!1,ia=null,oa=0;function ua(){l("321")}function ca(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ln(e[n],t[n]))return!1;return!0}function sa(e,t,n,r,a,i){if(Yl=i,Xl=t,Zl=null!==e?e.memoizedState:null,ql.current=null===Zl?wa:Sa,t=n(r,a),aa){do{aa=!1,oa+=1,Zl=null!==e?e.memoizedState:null,ta=Jl,ra=ea=Gl=null,ql.current=Sa,t=n(r,a)}while(aa);ia=null,oa=0}return ql.current=Ta,(e=Xl).memoizedState=Jl,e.expirationTime=na,e.updateQueue=ra,e.effectTag|=la,e=null!==Gl&&null!==Gl.next,Yl=0,ta=ea=Jl=Zl=Gl=Xl=null,na=0,ra=null,la=0,e&&l("300"),t}function fa(){ql.current=Ta,Yl=0,ta=ea=Jl=Zl=Gl=Xl=null,na=0,ra=null,la=0,aa=!1,ia=null,oa=0}function da(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ea?Jl=ea=e:ea=ea.next=e,ea}function pa(){if(null!==ta)ta=(ea=ta).next,Zl=null!==(Gl=Zl)?Gl.next:null;else{null===Zl&&l("310");var e={memoizedState:(Gl=Zl).memoizedState,baseState:Gl.baseState,queue:Gl.queue,baseUpdate:Gl.baseUpdate,next:null};ea=null===ea?Jl=e:ea.next=e,Zl=Gl.next}return ea}function ma(e,t){return"function"==typeof t?t(e):t}function ha(e){var t=pa(),n=t.queue;if(null===n&&l("311"),n.lastRenderedReducer=e,0<oa){var r=n.dispatch;if(null!==ia){var a=ia.get(n);if(void 0!==a){ia.delete(n);var i=t.memoizedState;do{i=e(i,a.action),a=a.next}while(null!==a);return ln(i,t.memoizedState)||(Da=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var o=t.baseUpdate;if(i=t.baseState,null!==o?(null!==r&&(r.next=null),r=o.next):r=null!==r?r.next:null,null!==r){var u=a=null,c=r,s=!1;do{var f=c.expirationTime;f<Yl?(s||(s=!0,u=o,a=i),f>na&&(na=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),o=c,c=c.next}while(null!==c&&c!==r);s||(u=o,a=i),ln(i,t.memoizedState)||(Da=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=a,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function va(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ra?(ra={lastEffect:null}).lastEffect=e.next=e:null===(t=ra.lastEffect)?ra.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ra.lastEffect=e),e}function ga(e,t,n,r){var l=da();la|=e,l.memoizedState=va(t,n,void 0,void 0===r?null:r)}function ya(e,t,n,r){var l=pa();r=void 0===r?null:r;var a=void 0;if(null!==Gl){var i=Gl.memoizedState;if(a=i.destroy,null!==r&&ca(r,i.deps))return void va(Wl,n,a,r)}la|=e,l.memoizedState=va(t,n,a,r)}function ba(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ka(){}function xa(e,t,n){25>oa||l("301");var r=e.alternate;if(e===Xl||null!==r&&r===Xl)if(aa=!0,e={expirationTime:Yl,action:n,eagerReducer:null,eagerState:null,next:null},null===ia&&(ia=new Map),void 0===(n=ia.get(t)))ia.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{lo();var a=Vo(),i={expirationTime:a=so(a,e),action:n,eagerReducer:null,eagerState:null,next:null},o=t.last;if(null===o)i.next=i;else{var u=o.next;null!==u&&(i.next=u),o.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,ln(s,c))return}catch(f){}ho(e,a)}}var Ta={readContext:ti,useCallback:ua,useContext:ua,useEffect:ua,useImperativeHandle:ua,useLayoutEffect:ua,useMemo:ua,useReducer:ua,useRef:ua,useState:ua,useDebugValue:ua},wa={readContext:ti,useCallback:function(e,t){return da().memoizedState=[e,void 0===t?null:t],e},useContext:ti,useEffect:function(e,t){return ga(516,$l|Kl,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ga(4,jl|Ql,ba.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ga(4,jl|Ql,e,t)},useMemo:function(e,t){var n=da();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=da();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=xa.bind(null,Xl,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},da().memoizedState=e},useState:function(e){var t=da();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:ma,lastRenderedState:e}).dispatch=xa.bind(null,Xl,e),[t.memoizedState,e]},useDebugValue:ka},Sa={readContext:ti,useCallback:function(e,t){var n=pa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ca(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:ti,useEffect:function(e,t){return ya(516,$l|Kl,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ya(4,jl|Ql,ba.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ya(4,jl|Ql,e,t)},useMemo:function(e,t){var n=pa();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&ca(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ha,useRef:function(){return pa().memoizedState},useState:function(e){return ha(ma,e)},useDebugValue:ka},Ea=null,Ca=null,_a=!1;function Pa(e,t){var n=nl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Na(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function za(e){if(_a){var t=Ca;if(t){var n=t;if(!Na(e,t)){if(!(t=Ir(n))||!Na(e,t))return e.effectTag|=2,_a=!1,void(Ea=e);Pa(Ea,n)}Ea=e,Ca=Mr(t)}else e.effectTag|=2,_a=!1,Ea=e}}function Ra(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;Ea=e}function Ua(e){if(e!==Ea)return!1;if(!_a)return Ra(e),_a=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!_r(t,e.memoizedProps))for(t=Ca;t;)Pa(e,t),t=Ir(t);return Ra(e),Ca=Ea?Ir(e.stateNode):null,!0}function Ia(){Ca=Ea=null,_a=!1}var Ma=$e.ReactCurrentOwner,Da=!1;function Oa(e,t,n,r){t.child=null===e?zl(t,null,n,r):Nl(t,e.child,n,r)}function Fa(e,t,n,r,l){n=n.render;var a=t.ref;return ei(t,l),r=sa(e,t,n,r,a,l),null===e||Da?(t.effectTag|=1,Oa(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),Ka(e,t,l))}function La(e,t,n,r,l,a){if(null===e){var i=n.type;return"function"!=typeof i||rl(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=il(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Aa(e,t,i,r,l,a))}return i=e.child,l<a&&(l=i.memoizedProps,(n=null!==(n=n.compare)?n:on)(l,r)&&e.ref===t.ref)?Ka(e,t,a):(t.effectTag|=1,(e=al(i,r,a)).ref=t.ref,e.return=t,t.child=e)}function Aa(e,t,n,r,l,a){return null!==e&&on(e.memoizedProps,r)&&e.ref===t.ref&&(Da=!1,l<a)?Ka(e,t,a):Va(e,t,n,r,a)}function Wa(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Va(e,t,n,r,l){var a=Hr(n)?jr:Wr.current;return a=Br(t,a),ei(t,l),n=sa(e,t,n,r,a,l),null===e||Da?(t.effectTag|=1,Oa(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),Ka(e,t,l))}function ja(e,t,n,r,l){if(Hr(n)){var a=!0;Yr(t)}else a=!1;if(ei(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),Tl(t,n,r,l),Sl(t,n,r,l),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=ti(c):c=Br(t,c=Hr(n)?jr:Wr.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||u!==c)&&wl(t,i,r,c),ii=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(hi(t,p,r,i,l),u=t.memoizedState),o!==r||d!==u||Vr.current||ii?("function"==typeof s&&(bl(t,n,s,r),u=t.memoizedState),(o=ii||xl(t,n,o,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=o):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,o=t.memoizedProps,i.props=t.type===t.elementType?o:vl(t.type,o),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=ti(c):c=Br(t,c=Hr(n)?jr:Wr.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||u!==c)&&wl(t,i,r,c),ii=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(hi(t,p,r,i,l),d=t.memoizedState),o!==r||u!==d||Vr.current||ii?("function"==typeof s&&(bl(t,n,s,r),d=t.memoizedState),(s=ii||xl(t,n,o,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Ba(e,t,n,r,a,l)}function Ba(e,t,n,r,l,a){Wa(e,t);var i=0!=(64&t.effectTag);if(!r&&!i)return l&&Xr(t,n,!1),Ka(e,t,a);r=t.stateNode,Ma.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=Nl(t,e.child,null,a),t.child=Nl(t,null,o,a)):Oa(e,t,o,a),t.memoizedState=r.state,l&&Xr(t,n,!0),t.child}function Ha(e){var t=e.stateNode;t.pendingContext?$r(e,t.pendingContext,t.pendingContext!==t.context):t.context&&$r(e,t.context,!1),Ol(e,t.containerInfo)}function Qa(e,t,n){var r=t.mode,l=t.pendingProps,a=t.memoizedState;if(0==(64&t.effectTag)){a=null;var i=!1}else a={timedOutAt:null!==a?a.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var o=l.fallback;e=ol(null,r,0,null),0==(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=ol(o,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=zl(t,null,l.children,n);else null!==e.memoizedState?(o=(r=e.child).sibling,i?(n=l.fallback,l=al(r,r.pendingProps,0),0==(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(l.child=i)),r=l.sibling=al(o,n,o.expirationTime),n=l,l.childExpirationTime=0,n.return=r.return=t):n=r=Nl(t,r.child,l.children,n)):(o=e.child,i?(i=l.fallback,(l=ol(null,r,0,null)).child=o,0==(1&t.mode)&&(l.child=null!==t.memoizedState?t.child.child:t.child),(r=l.sibling=ol(i,r,n,null)).effectTag|=2,n=l,l.childExpirationTime=0,n.return=r.return=t):r=n=Nl(t,o,l.children,n)),t.stateNode=e.stateNode;return t.memoizedState=a,t.child=n,r}function Ka(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&l("153"),null!==t.child){for(n=al(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=al(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function $a(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||Vr.current)Da=!0;else if(r<n){switch(Da=!1,t.tag){case 3:Ha(t),Ia();break;case 5:Ll(t);break;case 1:Hr(t.type)&&Yr(t);break;case 4:Ol(t,t.stateNode.containerInfo);break;case 10:Za(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Qa(e,t,n):null!==(t=Ka(e,t,n))?t.sibling:null}return Ka(e,t,n)}}else Da=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var a=Br(t,Wr.current);if(ei(t,n),a=sa(null,t,r,e,a,n),t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,fa(),Hr(r)){var i=!0;Yr(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null;var o=r.getDerivedStateFromProps;"function"==typeof o&&bl(t,r,o,e),a.updater=kl,t.stateNode=a,a._reactInternalFiber=t,Sl(t,r,e,n),t=Ba(null,t,r,!0,i,n)}else t.tag=0,Oa(null,t,a,n),t=t.child;return t;case 16:switch(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=gl(a),t.type=e,a=t.tag=ll(e),i=vl(e,i),o=void 0,a){case 0:o=Va(null,t,e,i,n);break;case 1:o=ja(null,t,e,i,n);break;case 11:o=Fa(null,t,e,i,n);break;case 14:o=La(null,t,e,vl(e.type,i),r,n);break;default:l("306",e,"")}return o;case 0:return r=t.type,a=t.pendingProps,Va(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 1:return r=t.type,a=t.pendingProps,ja(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 3:return Ha(t),null===(r=t.updateQueue)&&l("282"),a=null!==(a=t.memoizedState)?a.element:null,hi(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===a?(Ia(),t=Ka(e,t,n)):(a=t.stateNode,(a=(null===e||null===e.child)&&a.hydrate)&&(Ca=Mr(t.stateNode.containerInfo),Ea=t,a=_a=!0),a?(t.effectTag|=2,t.child=zl(t,null,r,n)):(Oa(e,t,r,n),Ia()),t=t.child),t;case 5:return Ll(t),null===e&&za(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,_r(r,a)?o=null:null!==i&&_r(r,i)&&(t.effectTag|=16),Wa(e,t),1!==n&&1&t.mode&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Oa(e,t,o,n),t=t.child),t;case 6:return null===e&&za(t),null;case 13:return Qa(e,t,n);case 4:return Ol(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Nl(t,null,r,n):Oa(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Fa(e,t,r,a=t.elementType===r?a:vl(r,a),n);case 7:return Oa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Oa(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,Za(t,i=a.value),null!==o){var u=o.value;if(0===(i=ln(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(o.children===a.children&&!Vr.current){t=Ka(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){o=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=ci(n)).tag=li,fi(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=u.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else o=10===u.tag&&u.type===t.type?null:u.child;if(null!==o)o.return=u;else for(o=u;null!==o;){if(o===t){o=null;break}if(null!==(u=o.sibling)){u.return=o.return,o=u;break}o=o.return}u=o}}Oa(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(i=t.pendingProps).children,ei(t,n),r=r(a=ti(a,i.unstable_observedBits)),t.effectTag|=1,Oa(e,t,r,n),t.child;case 14:return i=vl(a=t.type,t.pendingProps),La(e,t,a,i=vl(a.type,i),r,n);case 15:return Aa(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:vl(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Hr(r)?(e=!0,Yr(t)):e=!1,ei(t,n),Tl(t,r,a,n),Sl(t,r,a,n),Ba(null,t,r,!0,e,n)}l("156")}var qa={current:null},Ya=null,Xa=null,Ga=null;function Za(e,t){var n=e.type._context;Lr(qa,n._currentValue,e),n._currentValue=t}function Ja(e){var t=qa.current;Fr(qa,e),e.type._context._currentValue=t}function ei(e,t){Ya=e,Ga=Xa=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(Da=!0),e.contextDependencies=null}function ti(e,t){return Ga!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||(Ga=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xa?(null===Ya&&l("308"),Xa=t,Ya.contextDependencies={first:t,expirationTime:0}):Xa=Xa.next=t),e._currentValue}var ni=0,ri=1,li=2,ai=3,ii=!1;function oi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ui(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ci(e){return{expirationTime:e,tag:ni,payload:null,callback:null,next:null,nextEffect:null}}function si(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function fi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,l=null;null===r&&(r=e.updateQueue=oi(e.memoizedState))}else r=e.updateQueue,l=n.updateQueue,null===r?null===l?(r=e.updateQueue=oi(e.memoizedState),l=n.updateQueue=oi(n.memoizedState)):r=e.updateQueue=ui(l):null===l&&(l=n.updateQueue=ui(r));null===l||r===l?si(r,t):null===r.lastUpdate||null===l.lastUpdate?(si(r,t),si(l,t)):(si(r,t),l.lastUpdate=t)}function di(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=oi(e.memoizedState):pi(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function pi(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=ui(t)),t}function mi(e,n,r,l,a,i){switch(r.tag){case ri:return"function"==typeof(e=r.payload)?e.call(i,l,a):e;case ai:e.effectTag=-2049&e.effectTag|64;case ni:if(null==(a="function"==typeof(e=r.payload)?e.call(i,l,a):e))break;return t({},l,a);case li:ii=!0}return l}function hi(e,t,n,r,l){ii=!1;for(var a=(t=pi(e,t)).baseState,i=null,o=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s<l?(null===i&&(i=u,a=c),o<s&&(o=s)):(c=mi(e,t,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<l?(null===s&&(s=u,null===i&&(a=c)),o<f&&(o=f)):(c=mi(e,t,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,e.expirationTime=o,e.memoizedState=c}function vi(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),gi(t.firstEffect,n),t.firstEffect=t.lastEffect=null,gi(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function gi(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!=typeof n&&l("191",n),n.call(r)}e=e.nextEffect}}function yi(e,t){return{value:e,source:t,stack:ft(t)}}function bi(e){e.effectTag|=4}var ki=void 0,xi=void 0,Ti=void 0,wi=void 0;ki=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},xi=function(){},Ti=function(e,n,r,l,a){var i=e.memoizedProps;if(i!==l){var o=n.stateNode;switch(Dl(Ul.current),e=null,r){case"input":i=Et(o,i),l=Et(o,l),e=[];break;case"option":i=rr(o,i),l=rr(o,l),e=[];break;case"select":i=t({},i,{value:void 0}),l=t({},l,{value:void 0}),e=[];break;case"textarea":i=ar(o,i),l=ar(o,l),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof l.onClick&&(o.onclick=wr)}kr(r,l),o=r=void 0;var u=null;for(r in i)if(!l.hasOwnProperty(r)&&i.hasOwnProperty(r)&&null!=i[r])if("style"===r){var c=i[r];for(o in c)c.hasOwnProperty(o)&&(u||(u={}),u[o]="")}else"dangerouslySetInnerHTML"!==r&&"children"!==r&&"suppressContentEditableWarning"!==r&&"suppressHydrationWarning"!==r&&"autoFocus"!==r&&(b.hasOwnProperty(r)?e||(e=[]):(e=e||[]).push(r,null));for(r in l){var s=l[r];if(c=null!=i?i[r]:void 0,l.hasOwnProperty(r)&&s!==c&&(null!=s||null!=c))if("style"===r)if(c){for(o in c)!c.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(u||(u={}),u[o]="");for(o in s)s.hasOwnProperty(o)&&c[o]!==s[o]&&(u||(u={}),u[o]=s[o])}else u||(e||(e=[]),e.push(r,u)),u=s;else"dangerouslySetInnerHTML"===r?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(r,""+s)):"children"===r?c===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(r,""+s):"suppressContentEditableWarning"!==r&&"suppressHydrationWarning"!==r&&(b.hasOwnProperty(r)?(null!=s&&Tr(a,r),e||c===s||(e=[])):(e=e||[]).push(r,s))}u&&(e=e||[]).push("style",u),a=e,(n.updateQueue=a)&&bi(n)}},wi=function(e,t,n,r){n!==r&&bi(t)};var Si="function"==typeof WeakSet?WeakSet:Set;function Ei(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ft(n)),null!==n&&st(n.type),t=t.value,null!==e&&1===e.tag&&st(e.type);try{console.error(t)}catch(l){setTimeout(function(){throw l})}}function Ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(n){co(e,n)}else t.current=null}function _i(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==Wl){var l=r.destroy;r.destroy=void 0,void 0!==l&&l()}(r.tag&t)!==Wl&&(l=r.create,r.destroy=l()),r=r.next}while(r!==n)}}function Pi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var l=n.memoizedProps.style;l=null!=l&&l.hasOwnProperty("display")?l.display:null,r.style.display=gr("display",l)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function Ni(e){switch("function"==typeof Zr&&Zr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var l=e;try{r()}catch(a){co(l,a)}}n=n.next}while(n!==t)}break;case 1:if(Ci(e),"function"==typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(a){co(e,a)}break;case 5:Ci(e);break;case 4:Ui(e)}}function zi(e){return 5===e.tag||3===e.tag||4===e.tag}function Ri(e){e:{for(var t=e.return;null!==t;){if(zi(t)){var n=t;break e}t=t.return}l("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:l("161")}16&n.effectTag&&(mr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||zi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var a=e;;){if(5===a.tag||6===a.tag)if(n)if(r){var i=t,o=a.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(o,u):i.insertBefore(o,u)}else t.insertBefore(a.stateNode,n);else r?(o=t,u=a.stateNode,8===o.nodeType?(i=o.parentNode).insertBefore(u,o):(i=o).appendChild(u),null!=(o=o._reactRootContainer)||null!==i.onclick||(i.onclick=wr)):t.appendChild(a.stateNode);else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;a=a.return}a.sibling.return=a.return,a=a.sibling}}function Ui(e){for(var t=e,n=!1,r=void 0,a=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&l("160"),n.tag){case 5:r=n.stateNode,a=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,a=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,o=i;;)if(Ni(o),null!==o.child&&4!==o.tag)o.child.return=o,o=o.child;else{if(o===i)break;for(;null===o.sibling;){if(null===o.return||o.return===i)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}a?(i=r,o=t.stateNode,8===i.nodeType?i.parentNode.removeChild(o):i.removeChild(o)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,a=!0,t.child.return=t,t=t.child;continue}}else if(Ni(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Ii(e,t){switch(t.tag){case 0:case 11:case 14:case 15:_i(jl,Bl,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var a=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&Ur(n,i,a,e,r,t)}break;case 6:null===t.stateNode&&l("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Vo())),null!==e&&Pi(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var o=t.stateNode;null===o&&(o=t.stateNode=new Si),n.forEach(function(e){var n=po.bind(null,t,e);o.has(e)||(o.add(e),e.then(n,n))})}break;case 17:break;default:l("163")}}var Mi="function"==typeof WeakMap?WeakMap:Map;function Di(e,t,n){(n=ci(n)).tag=ai,n.payload={element:null};var r=t.value;return n.callback=function(){Go(r),Ei(e,t)},n}function Oi(e,t,n){(n=ci(n)).tag=ai;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=t.value;n.payload=function(){return r(l)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Zi?Zi=new Set([this]):Zi.add(this));var n=t.value,l=t.stack;Ei(e,t),this.componentDidCatch(n,{componentStack:null!==l?l:""})}),n}function Fi(e){switch(e.tag){case 1:Hr(e.type)&&Qr(e);var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Fl(e),Kr(e),0!=(64&(t=e.effectTag))&&l("285"),e.effectTag=-2049&t|64,e;case 5:return Al(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Fl(e),null;case 10:return Ja(e),null;default:return null}}var Li=$e.ReactCurrentDispatcher,Ai=$e.ReactCurrentOwner,Wi=1073741822,Vi=!1,ji=null,Bi=null,Hi=0,Qi=-1,Ki=!1,$i=null,qi=!1,Yi=null,Xi=null,Gi=null,Zi=null;function Ji(){if(null!==ji)for(var e=ji.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!=n&&Qr(t);break;case 3:Fl(t),Kr(t);break;case 5:Al(t);break;case 4:Fl(t);break;case 10:Ja(t)}e=e.return}Bi=null,Hi=0,Qi=-1,Ki=!1,ji=null}function eo(){for(;null!==$i;){var e=$i.effectTag;if(16&e&&mr($i.stateNode,""),128&e){var t=$i.alternate;null!==t&&(null!==(t=t.ref)&&("function"==typeof t?t(null):t.current=null))}switch(14&e){case 2:Ri($i),$i.effectTag&=-3;break;case 6:Ri($i),$i.effectTag&=-3,Ii($i.alternate,$i);break;case 4:Ii($i.alternate,$i);break;case 8:Ui(e=$i),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}$i=$i.nextEffect}}function to(){for(;null!==$i;){if(256&$i.effectTag)e:{var e=$i.alternate,t=$i;switch(t.tag){case 0:case 11:case 15:_i(Vl,Wl,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:vl(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:l("163")}}$i=$i.nextEffect}}function no(e,t){for(;null!==$i;){var n=$i.effectTag;if(36&n){var r=$i.alternate,a=$i,i=t;switch(a.tag){case 0:case 11:case 15:_i(Hl,Ql,a);break;case 1:var o=a.stateNode;if(4&a.effectTag)if(null===r)o.componentDidMount();else{var u=a.elementType===a.type?r.memoizedProps:vl(a.type,r.memoizedProps);o.componentDidUpdate(u,r.memoizedState,o.__reactInternalSnapshotBeforeUpdate)}null!==(r=a.updateQueue)&&vi(a,r,o,i);break;case 3:if(null!==(r=a.updateQueue)){if(o=null,null!==a.child)switch(a.child.tag){case 5:o=a.child.stateNode;break;case 1:o=a.child.stateNode}vi(a,r,o,i)}break;case 5:i=a.stateNode,null===r&&4&a.effectTag&&Cr(a.type,a.memoizedProps)&&i.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:l("163")}}128&n&&(null!==(a=$i.ref)&&(i=$i.stateNode,"function"==typeof a?a(i):a.current=i)),512&n&&(Yi=e),$i=$i.nextEffect}}function ro(e,t){Gi=Xi=Yi=null;var n=xo;xo=!0;do{if(512&t.effectTag){var r=!1,l=void 0;try{var a=t;_i($l,Wl,a),_i(Wl,Kl,a)}catch(i){r=!0,l=i}r&&co(t,l)}t=t.nextEffect}while(null!==t);xo=n,0!==(n=e.expirationTime)&&jo(e,n),_o||xo||$o(1073741823,!1)}function lo(){null!==Xi&&Rr(Xi),null!==Gi&&Gi()}function ao(e,t){qi=Vi=!0,e.current===t&&l("177");var r=e.pendingCommitExpirationTime;0===r&&l("261"),e.pendingCommitExpirationTime=0;var a=t.expirationTime,i=t.childExpirationTime;for(dl(e,i>a?i:a),Ai.current=null,a=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,a=t.firstEffect):a=t:a=t.firstEffect,Sr=Rn,Er=Kn(),Rn=!1,$i=a;null!==$i;){i=!1;var o=void 0;try{to()}catch(c){i=!0,o=c}i&&(null===$i&&l("178"),co($i,o),null!==$i&&($i=$i.nextEffect))}for($i=a;null!==$i;){i=!1,o=void 0;try{eo()}catch(c){i=!0,o=c}i&&(null===$i&&l("178"),co($i,o),null!==$i&&($i=$i.nextEffect))}for($n(Er),Er=null,Rn=!!Sr,Sr=null,e.current=t,$i=a;null!==$i;){i=!1,o=void 0;try{no(e,r)}catch(c){i=!0,o=c}i&&(null===$i&&l("178"),co($i,o),null!==$i&&($i=$i.nextEffect))}if(null!==a&&null!==Yi){var u=ro.bind(null,e,a);Xi=n.unstable_runWithPriority(n.unstable_NormalPriority,function(){return zr(u)}),Gi=u}Vi=qi=!1,"function"==typeof Gr&&Gr(t.stateNode),r=t.expirationTime,0===(t=(t=t.childExpirationTime)>r?t:r)&&(Zi=null),Wo(e,t)}function io(e){for(;;){var n=e.alternate,r=e.return,a=e.sibling;if(0==(1024&e.effectTag)){ji=e;e:{var i=n,o=Hi,u=(n=e).pendingProps;switch(n.tag){case 2:case 16:break;case 15:case 0:break;case 1:Hr(n.type)&&Qr(n);break;case 3:Fl(n),Kr(n),(u=n.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(Ua(n),n.effectTag&=-3),xi(n);break;case 5:Al(n);var c=Dl(Ml.current);if(o=n.type,null!==i&&null!=n.stateNode)Ti(i,n,o,u,c),i.ref!==n.ref&&(n.effectTag|=128);else if(u){var s=Dl(Ul.current);if(Ua(n)){i=(u=n).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(i[I]=u,i[M]=d,o=void 0,c=f){case"iframe":case"object":Un("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)Un(te[f],i);break;case"source":Un("error",i);break;case"img":case"image":case"link":Un("error",i),Un("load",i);break;case"form":Un("reset",i),Un("submit",i);break;case"details":Un("toggle",i);break;case"input":Ct(i,d),Un("invalid",i),Tr(p,"onChange");break;case"select":i._wrapperState={wasMultiple:!!d.multiple},Un("invalid",i),Tr(p,"onChange");break;case"textarea":ir(i,d),Un("invalid",i),Tr(p,"onChange")}for(o in kr(c,d),f=null,d)d.hasOwnProperty(o)&&(s=d[o],"children"===o?"string"==typeof s?i.textContent!==s&&(f=["children",s]):"number"==typeof s&&i.textContent!==""+s&&(f=["children",""+s]):b.hasOwnProperty(o)&&null!=s&&Tr(p,o));switch(c){case"input":Qe(i),Nt(i,d,!0);break;case"textarea":Qe(i),ur(i,d);break;case"select":case"option":break;default:"function"==typeof d.onClick&&(i.onclick=wr)}o=f,u.updateQueue=o,(u=null!==o)&&bi(n)}else{d=n,p=o,i=u,f=9===c.nodeType?c:c.ownerDocument,s===cr.html&&(s=sr(p)),s===cr.html?"script"===p?((i=f.createElement("div")).innerHTML="<script><\/script>",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(p,{is:i.is}):(f=f.createElement(p),"select"===p&&(p=f,i.multiple?p.multiple=!0:i.size&&(p.size=i.size))):f=f.createElementNS(s,p),(i=f)[I]=d,i[M]=u,ki(i,n,!1,!1),p=i;var m=c,h=xr(f=o,d=u);switch(f){case"iframe":case"object":Un("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)Un(te[c],p);c=d;break;case"source":Un("error",p),c=d;break;case"img":case"image":case"link":Un("error",p),Un("load",p),c=d;break;case"form":Un("reset",p),Un("submit",p),c=d;break;case"details":Un("toggle",p),c=d;break;case"input":Ct(p,d),c=Et(p,d),Un("invalid",p),Tr(m,"onChange");break;case"option":c=rr(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=t({},d,{value:void 0}),Un("invalid",p),Tr(m,"onChange");break;case"textarea":ir(p,d),c=ar(p,d),Un("invalid",p),Tr(m,"onChange");break;default:c=d}kr(f,c),s=void 0;var v=f,g=p,y=c;for(s in y)if(y.hasOwnProperty(s)){var k=y[s];"style"===s?yr(g,k):"dangerouslySetInnerHTML"===s?null!=(k=k?k.__html:void 0)&&pr(g,k):"children"===s?"string"==typeof k?("textarea"!==v||""!==k)&&mr(g,k):"number"==typeof k&&mr(g,""+k):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=k&&Tr(m,s):null!=k&&wt(g,s,k,h))}switch(f){case"input":Qe(p),Nt(p,d,!1);break;case"textarea":Qe(p),ur(p,d);break;case"option":null!=d.value&&p.setAttribute("value",""+St(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?lr(c,!!d.multiple,p,!1):null!=d.defaultValue&&lr(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof c.onClick&&(p.onclick=wr)}(u=Cr(o,u))&&bi(n),n.stateNode=i}null!==n.ref&&(n.effectTag|=128)}else null===n.stateNode&&l("166");break;case 6:i&&null!=n.stateNode?wi(i,n,i.memoizedProps,u):("string"!=typeof u&&(null===n.stateNode&&l("166")),i=Dl(Ml.current),Dl(Ul.current),Ua(n)?(o=(u=n).stateNode,i=u.memoizedProps,o[I]=u,(u=o.nodeValue!==i)&&bi(n)):(o=n,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[I]=n,o.stateNode=u));break;case 11:break;case 13:if(u=n.memoizedState,0!=(64&n.effectTag)){n.expirationTime=o,ji=n;break e}u=null!==u,o=null!==i&&null!==i.memoizedState,null!==i&&!u&&o&&(null!==(i=i.child.sibling)&&(null!==(c=n.firstEffect)?(n.firstEffect=i,i.nextEffect=c):(n.firstEffect=n.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u||o)&&(n.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Fl(n),xi(n);break;case 10:Ja(n);break;case 9:case 14:break;case 17:Hr(n.type)&&Qr(n);break;case 18:break;default:l("156")}ji=null}if(n=e,1===Hi||1!==n.childExpirationTime){for(u=0,o=n.child;null!==o;)(i=o.expirationTime)>u&&(u=i),(c=o.childExpirationTime)>u&&(u=c),o=o.sibling;n.childExpirationTime=u}if(null!==ji)return ji;null!==r&&0==(1024&r.effectTag)&&(null===r.firstEffect&&(r.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==r.lastEffect&&(r.lastEffect.nextEffect=e.firstEffect),r.lastEffect=e.lastEffect),1<e.effectTag&&(null!==r.lastEffect?r.lastEffect.nextEffect=e:r.firstEffect=e,r.lastEffect=e))}else{if(null!==(e=Fi(e,Hi)))return e.effectTag&=1023,e;null!==r&&(r.firstEffect=r.lastEffect=null,r.effectTag|=1024)}if(null!==a)return a;if(null===r)break;e=r}return null}function oo(e){var t=$a(e.alternate,e,Hi);return e.memoizedProps=e.pendingProps,null===t&&(t=io(e)),Ai.current=null,t}function uo(e,t){Vi&&l("243"),lo(),Vi=!0;var n=Li.current;Li.current=Ta;var r=e.nextExpirationTimeToWorkOn;r===Hi&&e===Bi&&null!==ji||(Ji(),Hi=r,ji=al((Bi=e).current,null,Hi),e.pendingCommitExpirationTime=0);for(var a=!1;;){try{if(t)for(;null!==ji&&!Qo();)ji=oo(ji);else for(;null!==ji;)ji=oo(ji)}catch(g){if(Ga=Xa=Ya=null,fa(),null===ji)a=!0,Go(g);else{null===ji&&l("271");var i=ji,o=i.return;if(null!==o){e:{var u=e,c=o,s=i,f=g;if(o=Hi,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof f&&"function"==typeof f.then){var d=f;f=c;var p=-1,m=-1;do{if(13===f.tag){var h=f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0>=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((o=ci(1073741823)).tag=li,fi(s,o))),s.expirationTime=1073741823;break e}c=o;var v=(s=u).pingCache;null===v?(v=s.pingCache=new Mi,h=new Set,v.set(d,h)):void 0===(h=v.get(d))&&(h=new Set,v.set(d,h)),h.has(c)||(h.add(c),s=fo.bind(null,s,d,c),d.then(s,s)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-ml(u,o))-5e3),u=m+p),0<=u&&Qi<u&&(Qi=u),f.effectTag|=2048,f.expirationTime=o;break e}f=f.return}while(null!==f);f=Error((st(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ft(s))}Ki=!0,f=yi(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=o,di(u,o=Di(u,f,o));break e;case 1:if(p=f,m=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===Zi||!Zi.has(s)))){u.effectTag|=2048,u.expirationTime=o,di(u,o=Oi(u,p,o));break e}}u=u.return}while(null!==u)}ji=io(i);continue}a=!0,Go(g)}}break}if(Vi=!1,Li.current=n,Ga=Xa=Ya=null,fa(),a)Bi=null,e.finishedWork=null;else if(null!==ji)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&l("281"),Bi=null,Ki){if(a=e.latestPendingTime,i=e.latestSuspendedTime,o=e.latestPingedTime,0!==a&&a<r||0!==i&&i<r||0!==o&&o<r)return pl(e,r),void Lo(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void Lo(e,n,r,t,-1)}t&&-1!==Qi?(pl(e,r),(t=10*(1073741822-ml(e,r)))<Qi&&(Qi=t),t=10*(1073741822-Vo()),t=Qi-t,Lo(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function co(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Zi||!Zi.has(r)))return fi(n,e=Oi(n,e=yi(t,e),1073741823)),void ho(n,1073741823);break;case 3:return fi(n,e=Di(n,e=yi(t,e),1073741823)),void ho(n,1073741823)}n=n.return}3===e.tag&&(fi(e,n=Di(e,n=yi(t,e),1073741823)),ho(e,1073741823))}function so(e,t){var r=n.unstable_getCurrentPriorityLevel(),a=void 0;if(0==(1&t.mode))a=1073741823;else if(Vi&&!qi)a=Hi;else{switch(r){case n.unstable_ImmediatePriority:a=1073741823;break;case n.unstable_UserBlockingPriority:a=1073741822-10*(1+((1073741822-e+15)/10|0));break;case n.unstable_NormalPriority:a=1073741822-25*(1+((1073741822-e+500)/25|0));break;case n.unstable_LowPriority:case n.unstable_IdlePriority:a=1;break;default:l("313")}null!==Bi&&a===Hi&&--a}return r===n.unstable_UserBlockingPriority&&(0===So||a<So)&&(So=a),a}function fo(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Bi&&Hi===n?Bi=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),hl(n,e),0!==(n=e.expirationTime)&&jo(e,n)))}function po(e,t){var n=e.stateNode;null!==n&&n.delete(t),null!==(e=mo(e,t=so(t=Vo(),e)))&&(fl(e,t),0!==(t=e.expirationTime)&&jo(e,t))}function mo(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,l=null;if(null===r&&3===e.tag)l=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){l=r.stateNode;break}r=r.return}return l}function ho(e,t){null!==(e=mo(e,t))&&(!Vi&&0!==Hi&&t>Hi&&Ji(),fl(e,t),Vi&&!qi&&Bi===e||jo(e,e.expirationTime),Mo>Io&&(Mo=0,l("185")))}function vo(e,t,r,l,a){return n.unstable_runWithPriority(n.unstable_ImmediatePriority,function(){return e(t,r,l,a)})}var go=null,yo=null,bo=0,ko=void 0,xo=!1,To=null,wo=0,So=0,Eo=!1,Co=null,_o=!1,Po=!1,No=null,zo=n.unstable_now(),Ro=1073741822-(zo/10|0),Uo=Ro,Io=50,Mo=0,Do=null;function Oo(){Ro=1073741822-((n.unstable_now()-zo)/10|0)}function Fo(e,t){if(0!==bo){if(t<bo)return;null!==ko&&n.unstable_cancelCallback(ko)}bo=t,e=n.unstable_now()-zo,ko=n.unstable_scheduleCallback(Ko,{timeout:10*(1073741822-t)-e})}function Lo(e,t,n,r,l){e.expirationTime=r,0!==l||Qo()?0<l&&(e.timeoutHandle=Pr(Ao.bind(null,e,t,n),l)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ao(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Oo(),Uo=Ro,qo(e,n)}function Wo(e,t){e.expirationTime=t,e.finishedWork=null}function Vo(){return xo?Uo:(Bo(),0!==wo&&1!==wo||(Oo(),Uo=Ro),Uo)}function jo(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===yo?(go=yo=e,e.nextScheduledRoot=e):(yo=yo.nextScheduledRoot=e).nextScheduledRoot=go):t>e.expirationTime&&(e.expirationTime=t),xo||(_o?Po&&(To=e,wo=1073741823,Yo(e,1073741823,!1)):1073741823===t?$o(1073741823,!1):Fo(e,t))}function Bo(){var e=0,t=null;if(null!==yo)for(var n=yo,r=go;null!==r;){var a=r.expirationTime;if(0===a){if((null===n||null===yo)&&l("244"),r===r.nextScheduledRoot){go=yo=r.nextScheduledRoot=null;break}if(r===go)go=a=r.nextScheduledRoot,yo.nextScheduledRoot=a,r.nextScheduledRoot=null;else{if(r===yo){(yo=n).nextScheduledRoot=go,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(a>e&&(e=a,t=r),r===yo)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}To=t,wo=e}var Ho=!1;function Qo(){return!!Ho||!!n.unstable_shouldYield()&&(Ho=!0)}function Ko(){try{if(!Qo()&&null!==go){Oo();var e=go;do{var t=e.expirationTime;0!==t&&Ro<=t&&(e.nextExpirationTimeToWorkOn=Ro),e=e.nextScheduledRoot}while(e!==go)}$o(0,!0)}finally{Ho=!1}}function $o(e,t){if(Bo(),t)for(Oo(),Uo=Ro;null!==To&&0!==wo&&e<=wo&&!(Ho&&Ro>wo);)Yo(To,wo,Ro>wo),Bo(),Oo(),Uo=Ro;else for(;null!==To&&0!==wo&&e<=wo;)Yo(To,wo,!1),Bo();if(t&&(bo=0,ko=null),0!==wo&&Fo(To,wo),Mo=0,Do=null,null!==No)for(e=No,No=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(r){Eo||(Eo=!0,Co=r)}}if(Eo)throw e=Co,Co=null,Eo=!1,e}function qo(e,t){xo&&l("253"),To=e,wo=t,Yo(e,t,!1),$o(1073741823,!1)}function Yo(e,t,n){if(xo&&l("245"),xo=!0,n){var r=e.finishedWork;null!==r?Xo(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,Nr(r)),uo(e,n),null!==(r=e.finishedWork)&&(Qo()?e.finishedWork=r:Xo(e,r,t)))}else null!==(r=e.finishedWork)?Xo(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,Nr(r)),uo(e,n),null!==(r=e.finishedWork)&&Xo(e,r,t));xo=!1}function Xo(e,t,r){var l=e.firstBatch;if(null!==l&&l._expirationTime>=r&&(null===No?No=[l]:No.push(l),l._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===Do?Mo++:(Do=e,Mo=0),n.unstable_runWithPriority(n.unstable_ImmediatePriority,function(){ao(e,t)})}function Go(e){null===To&&l("246"),To.expirationTime=0,Eo||(Eo=!0,Co=e)}function Zo(e,t){var n=_o;_o=!0;try{return e(t)}finally{(_o=n)||xo||$o(1073741823,!1)}}function Jo(e,t){if(_o&&!Po){Po=!0;try{return e(t)}finally{Po=!1}}return e(t)}function eu(e,t,r){_o||xo||0===So||($o(So,!1),So=0);var l=_o;_o=!0;try{return n.unstable_runWithPriority(n.unstable_UserBlockingPriority,function(){return e(t,r)})}finally{(_o=l)||xo||$o(1073741823,!1)}}function tu(e,t,n,r,a){var i=t.current;e:if(n){t:{2===un(n=n._reactInternalFiber)&&1===n.tag||l("170");var o=n;do{switch(o.tag){case 3:o=o.stateNode.context;break t;case 1:if(Hr(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break t}}o=o.return}while(null!==o);l("171"),o=void 0}if(1===n.tag){var u=n.type;if(Hr(u)){n=qr(n,u,o);break e}}n=o}else n=Ar;return null===t.context?t.context=n:t.pendingContext=n,t=a,(a=ci(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(a.callback=t),lo(),fi(i,a),ho(i,r),r}function nu(e,t,n,r){var l=t.current;return tu(e,t,n,l=so(Vo(),l),r)}function ru(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function lu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ge,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function au(e){var t=1073741822-25*(1+((1073741822-Vo()+500)/25|0));t>=Wi&&(t=Wi-1),this._expirationTime=Wi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function iu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function ou(e,t,n){e={current:t=nl(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function uu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function cu(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new ou(e,!1,t)}function su(e,t,n,r,l){var a=n._reactRootContainer;if(a){if("function"==typeof l){var i=l;l=function(){var e=ru(a._internalRoot);i.call(e)}}null!=e?a.legacy_renderSubtreeIntoContainer(e,t,l):a.render(t,l)}else{if(a=n._reactRootContainer=cu(n,r),"function"==typeof l){var o=l;l=function(){var e=ru(a._internalRoot);o.call(e)}}Jo(function(){null!=e?a.legacy_renderSubtreeIntoContainer(e,t,l):a.render(t,l)})}return ru(a._internalRoot)}function fu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return uu(t)||l("200"),lu(e,t,null,n)}Pe=function(e,t,n){switch(t){case"input":if(Pt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=L(r);a||l("90"),Ke(r),Pt(r,a)}}}break;case"textarea":or(e,n);break;case"select":null!=(t=n.value)&&lr(e,!!n.multiple,t,!1)}},au.prototype.render=function(e){this._defer||l("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new iu;return tu(e,t,null,n,r._onCommit),r},au.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},au.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||l("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,a=t;a!==this;)r=a,a=a._next;null===r&&l("251"),r._next=a._next,this._next=t,e.firstBatch=this}this._defer=!1,qo(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},au.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},iu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},iu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&l("191",n),n()}}},ou.prototype.render=function(e,t){var n=this._internalRoot,r=new iu;return null!==(t=void 0===t?null:t)&&r.then(t),nu(e,n,null,r._onCommit),r},ou.prototype.unmount=function(e){var t=this._internalRoot,n=new iu;return null!==(e=void 0===e?null:e)&&n.then(e),nu(null,t,null,n._onCommit),n},ou.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,l=new iu;return null!==(n=void 0===n?null:n)&&l.then(n),nu(t,r,e,l._onCommit),l},ou.prototype.createBatch=function(){var e=new au(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Me=Zo,De=eu,Oe=function(){xo||0===So||($o(So,!1),So=0)};var du={createPortal:fu,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?l("188"):l("268",Object.keys(e))),e=null===(e=fn(t))?null:e.stateNode},hydrate:function(e,t,n){return uu(t)||l("200"),su(null,e,t,!0,n)},render:function(e,t,n){return uu(t)||l("200"),su(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return uu(n)||l("200"),(null==e||void 0===e._reactInternalFiber)&&l("38"),su(e,t,n,!1,r)},unmountComponentAtNode:function(e){return uu(e)||l("40"),!!e._reactRootContainer&&(Jo(function(){su(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return fu.apply(void 0,arguments)},unstable_batchedUpdates:Zo,unstable_interactiveUpdates:eu,flushSync:function(e,t){xo&&l("187");var n=_o;_o=!0;try{return vo(e,t)}finally{_o=n,$o(1073741823,!1)}},unstable_createRoot:pu,unstable_flushControlled:function(e){var t=_o;_o=!0;try{vo(e)}finally{(_o=t)||xo||$o(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[O,F,L,N.injectEventPluginsByName,y,H,function(e){C(e,B)},Ue,Ie,Dn,R]}};function pu(e,t){return uu(e)||l("299","unstable_createRoot"),new ou(e,!0,null!=t&&!0===t.hydrate)}!function(e){var n=e.findFiberByHostInstance;el(t({},e,{overrideProps:null,currentDispatcherRef:$e.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=fn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return n?n(e):null}}))}({findFiberByHostInstance:D,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var mu={default:du},hu=mu&&du||mu;module.exports=hu.default||hu;
},{"react":"n8MK","object-assign":"J4Nk","scheduler":"MDSO"}],"NKHc":[function(require,module,exports) {
"use strict";function _(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(_)}catch(O){console.error(O)}}}_(),module.exports=require("./cjs/react-dom.production.min.js");
},{"./cjs/react-dom.production.min.js":"i17t"}],"fMCj":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=e(require("react"));function e(t){return t&&t.__esModule?t:{default:t}}function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function r(t){if(t&&"undefined"!=typeof window){var e=document.createElement("style");return e.setAttribute("type","text/css"),e.innerHTML=t,document.head.appendChild(e),t}}function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var o=0;o<e.length;o++){var r=e[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function a(t,e,o){return e&&i(t.prototype,e),o&&i(t,o),t}function l(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function p(){return(p=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r])}return t}).apply(this,arguments)}function s(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),o.push.apply(o,r)}return o}function c(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?s(Object(o),!0).forEach(function(e){l(t,e,o[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))})}return t}function f(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&d(t,e)}function u(t){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function d(t,e){return(d=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function h(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?b(t):e}function m(t,e){return t(e={exports:{}},e.exports),e.exports}function _(t){return function(){return t}}var y=function(){};y.thatReturns=_,y.thatReturnsFalse=_(!1),y.thatReturnsTrue=_(!0),y.thatReturnsNull=_(null),y.thatReturnsThis=function(){return this},y.thatReturnsArgument=function(t){return t};var v=y,g=function(t){};function w(t,e,o,r,n,i,a,l){if(g(e),!t){var p;if(void 0===e)p=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[o,r,n,i,a,l],c=0;(p=new Error(e.replace(/%s/g,function(){return s[c++]}))).name="Invariant Violation"}throw p.framesToPop=1,p}}var T,x=w,E=v,O=E,L=Object.getOwnPropertySymbols,A=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;function k(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}function R(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},o=0;o<10;o++)e["_"+String.fromCharCode(o)]=o;if("0123456789"!==Object.getOwnPropertyNames(e).map(function(t){return e[t]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(t){r[t]=t}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(n){return!1}}var j,P,C,B,I=R()?Object.assign:function(t,e){for(var o,r,n=k(t),i=1;i<arguments.length;i++){for(var a in o=Object(arguments[i]))A.call(o,a)&&(n[a]=o[a]);if(L){r=L(o);for(var l=0;l<r.length;l++)S.call(o,r[l])&&(n[r[l]]=o[r[l]])}}return n},H="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",D=H;function N(t,e,o,r,n){}var M=N,W=function(t,e){var r="function"==typeof Symbol&&Symbol.iterator,n="@@iterator";var i="<<anonymous>>",a={array:c("array"),bool:c("boolean"),func:c("function"),number:c("number"),object:c("object"),string:c("string"),symbol:c("symbol"),any:s(v.thatReturnsNull),arrayOf:function(t){return s(function(e,o,r,n,i){if("function"!=typeof t)return new p("Property `"+i+"` of component `"+r+"` has invalid PropType notation inside arrayOf.");var a=e[o];if(!Array.isArray(a)){var l=u(a);return new p("Invalid "+n+" `"+i+"` of type `"+l+"` supplied to `"+r+"`, expected an array.")}for(var s=0;s<a.length;s++){var c=t(a,s,r,n,i+"["+s+"]",D);if(c instanceof Error)return c}return null})},element:function(){return s(function(e,o,r,n,i){var a=e[o];if(!t(a)){var l=u(a);return new p("Invalid "+n+" `"+i+"` of type `"+l+"` supplied to `"+r+"`, expected a single ReactElement.")}return null})}(),instanceOf:function(t){return s(function(e,o,r,n,a){if(!(e[o]instanceof t)){var l=t.name||i,s=function(t){if(!t.constructor||!t.constructor.name)return i;return t.constructor.name}(e[o]);return new p("Invalid "+n+" `"+a+"` of type `"+s+"` supplied to `"+r+"`, expected instance of `"+l+"`.")}return null})},node:function(){return s(function(t,e,o,r,n){if(!f(t[e]))return new p("Invalid "+r+" `"+n+"` supplied to `"+o+"`, expected a ReactNode.");return null})}(),objectOf:function(t){return s(function(e,o,r,n,i){if("function"!=typeof t)return new p("Property `"+i+"` of component `"+r+"` has invalid PropType notation inside objectOf.");var a=e[o],l=u(a);if("object"!==l)return new p("Invalid "+n+" `"+i+"` of type `"+l+"` supplied to `"+r+"`, expected an object.");for(var s in a)if(a.hasOwnProperty(s)){var c=t(a,s,r,n,i+"."+s,D);if(c instanceof Error)return c}return null})},oneOf:function(t){if(!Array.isArray(t))return v.thatReturnsNull;return s(function(e,o,r,n,i){for(var a=e[o],s=0;s<t.length;s++)if(l(a,t[s]))return null;var c=JSON.stringify(t);return new p("Invalid "+n+" `"+i+"` of value `"+a+"` supplied to `"+r+"`, expected one of "+c+".")})},oneOfType:function(t){if(!Array.isArray(t))return v.thatReturnsNull;for(var e=0;e<t.length;e++){var o=t[e];if("function"!=typeof o)return O(!1,"Invalid argument supplied to oneOfType. Expected an array of check functions, but received %s at index %s.",b(o),e),v.thatReturnsNull}return s(function(e,o,r,n,i){for(var a=0;a<t.length;a++){var l=t[a];if(null==l(e,o,r,n,i,D))return null}return new p("Invalid "+n+" `"+i+"` supplied to `"+r+"`.")})},shape:function(t){return s(function(e,o,r,n,i){var a=e[o],l=u(a);if("object"!==l)return new p("Invalid "+n+" `"+i+"` of type `"+l+"` supplied to `"+r+"`, expected `object`.");for(var s in t){var c=t[s];if(c){var f=c(a,s,r,n,i+"."+s,D);if(f)return f}}return null})},exact:function(t){return s(function(e,o,r,n,i){var a=e[o],l=u(a);if("object"!==l)return new p("Invalid "+n+" `"+i+"` of type `"+l+"` supplied to `"+r+"`, expected `object`.");var s=I({},e[o],t);for(var c in s){var f=t[c];if(!f)return new p("Invalid "+n+" `"+i+"` key `"+c+"` supplied to `"+r+"`.\nBad object: "+JSON.stringify(e[o],null,"  ")+"\nValid keys: "+JSON.stringify(Object.keys(t),null,"  "));var d=f(a,c,r,n,i+"."+c,D);if(d)return d}return null})}};function l(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}function p(t){this.message=t,this.stack=""}function s(t){function o(o,r,n,a,l,s,c){(a=a||i,s=s||n,c!==D)&&(e&&x(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"));return null==r[n]?o?null===r[n]?new p("The "+l+" `"+s+"` is marked as required in `"+a+"`, but its value is `null`."):new p("The "+l+" `"+s+"` is marked as required in `"+a+"`, but its value is `undefined`."):null:t(r,n,a,l,s)}var r=o.bind(null,!1);return r.isRequired=o.bind(null,!0),r}function c(t){return s(function(e,o,r,n,i,a){var l=e[o];return u(l)!==t?new p("Invalid "+n+" `"+i+"` of type `"+d(l)+"` supplied to `"+r+"`, expected `"+t+"`."):null})}function f(e){switch(o(e)){case"number":case"string":case"undefined":return!0;case"boolean":return!e;case"object":if(Array.isArray(e))return e.every(f);if(null===e||t(e))return!0;var i=function(t){var e=t&&(r&&t[r]||t[n]);if("function"==typeof e)return e}(e);if(!i)return!1;var a,l=i.call(e);if(i!==e.entries){for(;!(a=l.next()).done;)if(!f(a.value))return!1}else for(;!(a=l.next()).done;){var p=a.value;if(p&&!f(p[1]))return!1}return!0;default:return!1}}function u(t){var e=o(t);return Array.isArray(t)?"array":t instanceof RegExp?"object":function(t,e){return"symbol"===t||"Symbol"===e["@@toStringTag"]||"function"==typeof Symbol&&e instanceof Symbol}(e,t)?"symbol":e}function d(t){if(null==t)return""+t;var e=u(t);if("object"===e){if(t instanceof Date)return"date";if(t instanceof RegExp)return"regexp"}return e}function b(t){var e=d(t);switch(e){case"array":case"object":return"an "+e;case"boolean":case"date":case"regexp":return"a "+e;default:return e}}return p.prototype=Error.prototype,a.checkPropTypes=M,a.PropTypes=a,a},U=function(){function t(t,e,o,r,n,i){i!==D&&x(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function e(){return t}t.isRequired=t;var o={array:t,bool:t,func:t,number:t,object:t,string:t,symbol:t,any:t,arrayOf:e,element:t,instanceOf:e,node:t,objectOf:e,oneOf:e,oneOfType:e,shape:e,exact:e};return o.checkPropTypes=v,o.PropTypes=o,o},z=m(function(t){t.exports=U()}),F={GLOBAL:{HIDE:"__react_tooltip_hide_event",REBUILD:"__react_tooltip_rebuild_event",SHOW:"__react_tooltip_show_event"}},G=function(t,e){var o;"function"==typeof window.CustomEvent?o=new window.CustomEvent(t,{detail:e}):((o=document.createEvent("Event")).initEvent(t,!1,!0),o.detail=e),window.dispatchEvent(o)};function q(t){t.hide=function(t){G(F.GLOBAL.HIDE,{target:t})},t.rebuild=function(){G(F.GLOBAL.REBUILD)},t.show=function(t){G(F.GLOBAL.SHOW,{target:t})},t.prototype.globalRebuild=function(){this.mount&&(this.unbindListener(),this.bindListener())},t.prototype.globalShow=function(t){if(this.mount){var e={currentTarget:t.detail.target};this.showTooltip(e,!0)}},t.prototype.globalHide=function(t){if(this.mount){var e=!!(t&&t.detail&&t.detail.target);this.hideTooltip({currentTarget:e&&t.detail.target},e)}}}function Y(t){t.prototype.bindWindowEvents=function(t){window.removeEventListener(F.GLOBAL.HIDE,this.globalHide),window.addEventListener(F.GLOBAL.HIDE,this.globalHide,!1),window.removeEventListener(F.GLOBAL.REBUILD,this.globalRebuild),window.addEventListener(F.GLOBAL.REBUILD,this.globalRebuild,!1),window.removeEventListener(F.GLOBAL.SHOW,this.globalShow),window.addEventListener(F.GLOBAL.SHOW,this.globalShow,!1),t&&(window.removeEventListener("resize",this.onWindowResize),window.addEventListener("resize",this.onWindowResize,!1))},t.prototype.unbindWindowEvents=function(){window.removeEventListener(F.GLOBAL.HIDE,this.globalHide),window.removeEventListener(F.GLOBAL.REBUILD,this.globalRebuild),window.removeEventListener(F.GLOBAL.SHOW,this.globalShow),window.removeEventListener("resize",this.onWindowResize)},t.prototype.onWindowResize=function(){this.mount&&this.hideTooltip()}}var X=function(t,e){var o=this.state.show,r=this.props.id,n=this.isCapture(e.currentTarget),i=e.currentTarget.getAttribute("currentItem");n||e.stopPropagation(),o&&"true"===i?t||this.hideTooltip(e):(e.currentTarget.setAttribute("currentItem","true"),J(e.currentTarget,this.getTargetArray(r)),this.showTooltip(e))},J=function(t,e){for(var o=0;o<e.length;o++)t!==e[o]?e[o].setAttribute("currentItem","false"):e[o].setAttribute("currentItem","true")},V={id:"9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf",set:function(t,e,o){this.id in t?t[this.id][e]=o:Object.defineProperty(t,this.id,{configurable:!0,value:l({},e,o)})},get:function(t,e){var o=t[this.id];if(void 0!==o)return o[e]}};function $(t){t.prototype.isCustomEvent=function(t){return this.state.event||!!t.getAttribute("data-event")},t.prototype.customBindListener=function(t){var e=this,o=this.state,r=o.event,n=o.eventOff,i=t.getAttribute("data-event")||r,a=t.getAttribute("data-event-off")||n;i.split(" ").forEach(function(o){t.removeEventListener(o,V.get(t,o));var r=X.bind(e,a);V.set(t,o,r),t.addEventListener(o,r,!1)}),a&&a.split(" ").forEach(function(o){t.removeEventListener(o,e.hideTooltip),t.addEventListener(o,e.hideTooltip,!1)})},t.prototype.customUnbindListener=function(t){var e=this.state,o=e.event,r=e.eventOff,n=o||t.getAttribute("data-event"),i=r||t.getAttribute("data-event-off");t.removeEventListener(n,V.get(t,o)),i&&t.removeEventListener(i,this.hideTooltip)}}function K(t){t.prototype.isCapture=function(t){return t&&"true"===t.getAttribute("data-iscapture")||this.props.isCapture||!1}}function Q(t){t.prototype.getEffect=function(t){return t.getAttribute("data-effect")||this.props.effect||"float"}}var Z=function(t){var e={};for(var o in t)"function"==typeof t[o]?e[o]=t[o].bind(t):e[o]=t[o];return e},tt=function(t,e,o){var r=e.respectEffect,n=void 0!==r&&r,i=e.customEvent,a=void 0!==i&&i,l=this.props.id,p=o.target.getAttribute("data-tip")||null,s=o.target.getAttribute("data-for")||null,c=o.target;if(!this.isCustomEvent(c)||a){var f=null==l&&null==s||s===l;if(null!=p&&(!n||"float"===this.getEffect(c))&&f){var u=Z(o);u.currentTarget=c,t(u)}}},et=function(t,e){var o={};return t.forEach(function(t){var r=t.getAttribute(e);r&&r.split(" ").forEach(function(t){return o[t]=!0})}),o},ot=function(){return document.getElementsByTagName("body")[0]};function rt(t){t.prototype.isBodyMode=function(){return!!this.props.bodyMode},t.prototype.bindBodyListener=function(t){var e=this,o=this.state,r=o.event,n=o.eventOff,i=o.possibleCustomEvents,a=o.possibleCustomEventsOff,l=ot(),p=et(t,"data-event"),s=et(t,"data-event-off");null!=r&&(p[r]=!0),null!=n&&(s[n]=!0),i.split(" ").forEach(function(t){return p[t]=!0}),a.split(" ").forEach(function(t){return s[t]=!0}),this.unbindBodyListener(l);var c=this.bodyModeListeners={};for(var f in null==r&&(c.mouseover=tt.bind(this,this.showTooltip,{}),c.mousemove=tt.bind(this,this.updateTooltip,{respectEffect:!0}),c.mouseout=tt.bind(this,this.hideTooltip,{})),p)c[f]=tt.bind(this,function(t){var o=t.currentTarget.getAttribute("data-event-off")||n;X.call(e,o,t)},{customEvent:!0});for(var u in s)c[u]=tt.bind(this,this.hideTooltip,{customEvent:!0});for(var d in c)l.addEventListener(d,c[d])},t.prototype.unbindBodyListener=function(t){t=t||ot();var e=this.bodyModeListeners;for(var o in e)t.removeEventListener(o,e[o])}}var nt=function(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver};function it(t){t.prototype.bindRemovalTracker=function(){var t=this,e=nt();if(null!=e){var o=new e(function(e){for(var o=0;o<e.length;o++)for(var r=e[o],n=0;n<r.removedNodes.length;n++){if(r.removedNodes[n]===t.state.currentTarget)return void t.hideTooltip()}});o.observe(window.document,{childList:!0,subtree:!0}),this.removalTracker=o}},t.prototype.unbindRemovalTracker=function(){this.removalTracker&&(this.removalTracker.disconnect(),this.removalTracker=null)}}function at(t,e,o,r,n,i,a){for(var l=ct(o),p=l.width,s=l.height,c=ct(e),f=c.width,u=c.height,d=ft(t,e,i),b=d.mouseX,h=d.mouseY,m=ut(i,f,u,p,s),_=dt(a),y=_.extraOffset_X,v=_.extraOffset_Y,g=window.innerWidth,w=window.innerHeight,T=bt(o),x=T.parentTop,E=T.parentLeft,O=function(t){var e=m[t].l;return b+e+y},L=function(t){var e=m[t].t;return h+e+v},A=function(t){return e=m[t].r,b+e+y>g;var e},S=function(t){return e=m[t].b,h+e+v>w;var e},k=function(t){return function(t){return O(t)<0}(t)||A(t)||function(t){return L(t)<0}(t)||S(t)},R=function(t){return!k(t)},j=["top","bottom","left","right"],P=[],C=0;C<4;C++){var B=j[C];R(B)&&P.push(B)}var I,H=!1,D=n!==r;return R(n)&&D?(H=!0,I=n):P.length>0&&D&&k(n)&&k(r)&&(H=!0,I=P[0]),H?{isNewState:!0,newState:{place:I}}:{isNewState:!1,position:{left:parseInt(O(r)-E,10),top:parseInt(L(r)-x,10)}}}var lt,pt,st,ct=function(t){var e=t.getBoundingClientRect(),o=e.height,r=e.width;return{height:parseInt(o,10),width:parseInt(r,10)}},ft=function(t,e,o){var r=e.getBoundingClientRect(),n=r.top,i=r.left,a=ct(e),l=a.width,p=a.height;return"float"===o?{mouseX:t.clientX,mouseY:t.clientY}:{mouseX:i+l/2,mouseY:n+p/2}},ut=function(t,e,o,r,n){var i,a,l,p;return"float"===t?(i={l:-r/2,r:r/2,t:-(n+3+2),b:-3},l={l:-r/2,r:r/2,t:15,b:n+3+2+12},p={l:-(r+3+2),r:-3,t:-n/2,b:n/2},a={l:3,r:r+3+2,t:-n/2,b:n/2}):"solid"===t&&(i={l:-r/2,r:r/2,t:-(o/2+n+2),b:-o/2},l={l:-r/2,r:r/2,t:o/2,b:o/2+n+2},p={l:-(r+e/2+2),r:-e/2,t:-n/2,b:n/2},a={l:e/2,r:r+e/2+2,t:-n/2,b:n/2}),{top:i,bottom:l,left:p,right:a}},dt=function(t){var e=0,o=0;for(var r in"[object String]"===Object.prototype.toString.apply(t)&&(t=JSON.parse(t.toString().replace(/\'/g,'"'))),t)"top"===r?o-=parseInt(t[r],10):"bottom"===r?o+=parseInt(t[r],10):"left"===r?e-=parseInt(t[r],10):"right"===r&&(e+=parseInt(t[r],10));return{extraOffset_X:e,extraOffset_Y:o}},bt=function(t){for(var e=t;e&&"none"===window.getComputedStyle(e).getPropertyValue("transform");)e=e.parentElement;return{parentTop:e&&e.getBoundingClientRect().top||0,parentLeft:e&&e.getBoundingClientRect().left||0}};function ht(e,o,r,n){if(o)return o;if(null!=r)return r;if(null===r)return null;var i=/<br\s*\/?>/;return n&&"false"!==n&&i.test(e)?e.split(i).map(function(e,o){return t.default.createElement("span",{key:o,className:"multi-line"},e)}):e}function mt(t){var e={};return Object.keys(t).filter(function(t){return/(^aria-\w+$|^role$)/.test(t)}).forEach(function(o){e[o]=t[o]}),e}function _t(t){var e=t.length;return t.hasOwnProperty?Array.prototype.slice.call(t):new Array(e).fill().map(function(e){return t[e]})}r('.__react_component_tooltip {\n  border-radius: 3px;\n  display: inline-block;\n  font-size: 13px;\n  left: -999em;\n  opacity: 0;\n  padding: 8px 21px;\n  position: fixed;\n  pointer-events: none;\n  transition: opacity 0.3s ease-out;\n  top: -999em;\n  visibility: hidden;\n  z-index: 999;\n}\n.__react_component_tooltip.allow_hover, .__react_component_tooltip.allow_click {\n  pointer-events: auto;\n}\n.__react_component_tooltip:before, .__react_component_tooltip:after {\n  content: "";\n  width: 0;\n  height: 0;\n  position: absolute;\n}\n.__react_component_tooltip.show {\n  opacity: 0.9;\n  margin-top: 0px;\n  margin-left: 0px;\n  visibility: visible;\n}\n.__react_component_tooltip.type-dark {\n  color: #fff;\n  background-color: #222;\n}\n.__react_component_tooltip.type-dark.place-top:after {\n  border-top-color: #222;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-bottom:after {\n  border-bottom-color: #222;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-left:after {\n  border-left-color: #222;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-dark.place-right:after {\n  border-right-color: #222;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-dark.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-dark.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-success {\n  color: #fff;\n  background-color: #8DC572;\n}\n.__react_component_tooltip.type-success.place-top:after {\n  border-top-color: #8DC572;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-success.place-bottom:after {\n  border-bottom-color: #8DC572;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-success.place-left:after {\n  border-left-color: #8DC572;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-success.place-right:after {\n  border-right-color: #8DC572;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-success.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-success.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning {\n  color: #fff;\n  background-color: #F0AD4E;\n}\n.__react_component_tooltip.type-warning.place-top:after {\n  border-top-color: #F0AD4E;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-bottom:after {\n  border-bottom-color: #F0AD4E;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-left:after {\n  border-left-color: #F0AD4E;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-warning.place-right:after {\n  border-right-color: #F0AD4E;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-warning.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-warning.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-error {\n  color: #fff;\n  background-color: #BE6464;\n}\n.__react_component_tooltip.type-error.place-top:after {\n  border-top-color: #BE6464;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-error.place-bottom:after {\n  border-bottom-color: #BE6464;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-error.place-left:after {\n  border-left-color: #BE6464;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-error.place-right:after {\n  border-right-color: #BE6464;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-error.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-error.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-info {\n  color: #fff;\n  background-color: #337AB7;\n}\n.__react_component_tooltip.type-info.place-top:after {\n  border-top-color: #337AB7;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-info.place-bottom:after {\n  border-bottom-color: #337AB7;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-info.place-left:after {\n  border-left-color: #337AB7;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-info.place-right:after {\n  border-right-color: #337AB7;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-info.border {\n  border: 1px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-top:before {\n  border-top: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-bottom:before {\n  border-bottom: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-left:before {\n  border-left: 8px solid #fff;\n}\n.__react_component_tooltip.type-info.border.place-right:before {\n  border-right: 8px solid #fff;\n}\n.__react_component_tooltip.type-light {\n  color: #222;\n  background-color: #fff;\n}\n.__react_component_tooltip.type-light.place-top:after {\n  border-top-color: #fff;\n  border-top-style: solid;\n  border-top-width: 6px;\n}\n.__react_component_tooltip.type-light.place-bottom:after {\n  border-bottom-color: #fff;\n  border-bottom-style: solid;\n  border-bottom-width: 6px;\n}\n.__react_component_tooltip.type-light.place-left:after {\n  border-left-color: #fff;\n  border-left-style: solid;\n  border-left-width: 6px;\n}\n.__react_component_tooltip.type-light.place-right:after {\n  border-right-color: #fff;\n  border-right-style: solid;\n  border-right-width: 6px;\n}\n.__react_component_tooltip.type-light.border {\n  border: 1px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-top:before {\n  border-top: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-bottom:before {\n  border-bottom: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-left:before {\n  border-left: 8px solid #222;\n}\n.__react_component_tooltip.type-light.border.place-right:before {\n  border-right: 8px solid #222;\n}\n.__react_component_tooltip.place-top {\n  margin-top: -10px;\n}\n.__react_component_tooltip.place-top:before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  bottom: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-top:after {\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  bottom: -6px;\n  left: 50%;\n  margin-left: -8px;\n}\n.__react_component_tooltip.place-bottom {\n  margin-top: 10px;\n}\n.__react_component_tooltip.place-bottom:before {\n  border-left: 10px solid transparent;\n  border-right: 10px solid transparent;\n  top: -8px;\n  left: 50%;\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-bottom:after {\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  top: -6px;\n  left: 50%;\n  margin-left: -8px;\n}\n.__react_component_tooltip.place-left {\n  margin-left: -10px;\n}\n.__react_component_tooltip.place-left:before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  right: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip.place-left:after {\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  right: -6px;\n  top: 50%;\n  margin-top: -4px;\n}\n.__react_component_tooltip.place-right {\n  margin-left: 10px;\n}\n.__react_component_tooltip.place-right:before {\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  left: -8px;\n  top: 50%;\n  margin-top: -5px;\n}\n.__react_component_tooltip.place-right:after {\n  border-top: 5px solid transparent;\n  border-bottom: 5px solid transparent;\n  left: -6px;\n  top: 50%;\n  margin-top: -4px;\n}\n.__react_component_tooltip .multi-line {\n  display: block;\n  padding: 2px 0px;\n  text-align: center;\n}');var yt=q(lt=Y(lt=$(lt=K(lt=Q(lt=rt(lt=it((st=pt=function(e){function o(t){var e;return n(this,o),(e=h(this,u(o).call(this,t))).state={place:t.place||"top",desiredPlace:t.place||"top",type:"dark",effect:"float",show:!1,border:!1,offset:{},extraClass:"",html:!1,delayHide:0,delayShow:0,event:t.event||null,eventOff:t.eventOff||null,currentEvent:null,currentTarget:null,ariaProps:mt(t),isEmptyTip:!1,disable:!1,possibleCustomEvents:t.possibleCustomEvents||"",possibleCustomEventsOff:t.possibleCustomEventsOff||"",originTooltip:null,isMultiline:!1},e.bind(["showTooltip","updateTooltip","hideTooltip","hideTooltipOnScroll","getTooltipContent","globalRebuild","globalShow","globalHide","onWindowResize","mouseOnToolTip"]),e.mount=!0,e.delayShowLoop=null,e.delayHideLoop=null,e.delayReshow=null,e.intervalUpdateContent=null,e}return f(o,t.default.Component),a(o,[{key:"bind",value:function(t){var e=this;t.forEach(function(t){e[t]=e[t].bind(e)})}},{key:"componentDidMount",value:function(){var t=this.props,e=(t.insecure,t.resizeHide);this.bindListener(),this.bindWindowEvents(e)}},{key:"componentWillUnmount",value:function(){this.mount=!1,this.clearTimer(),this.unbindListener(),this.removeScrollListener(),this.unbindWindowEvents()}},{key:"mouseOnToolTip",value:function(){return!(!this.state.show||!this.tooltipRef)&&(this.tooltipRef.matches||(this.tooltipRef.msMatchesSelector?this.tooltipRef.matches=this.tooltipRef.msMatchesSelector:this.tooltipRef.matches=this.tooltipRef.mozMatchesSelector),this.tooltipRef.matches(":hover"))}},{key:"getTargetArray",value:function(t){var e,o=[];if(t){var r=t.replace(/\\/g,"\\\\").replace(/"/g,'\\"');e='[data-tip][data-for="'.concat(r,'"]')}else e="[data-tip]:not([data-for])";return _t(document.getElementsByTagName("*")).filter(function(t){return t.shadowRoot}).forEach(function(t){o=o.concat(_t(t.shadowRoot.querySelectorAll(e)))}),o.concat(_t(document.querySelectorAll(e)))}},{key:"bindListener",value:function(){var t=this,e=this.props,o=e.id,r=e.globalEventOff,n=e.isCapture,i=this.getTargetArray(o);i.forEach(function(e){null===e.getAttribute("currentItem")&&e.setAttribute("currentItem","false"),t.unbindBasicListener(e),t.isCustomEvent(e)&&t.customUnbindListener(e)}),this.isBodyMode()?this.bindBodyListener(i):i.forEach(function(e){var o=t.isCapture(e),r=t.getEffect(e);t.isCustomEvent(e)?t.customBindListener(e):(e.addEventListener("mouseenter",t.showTooltip,o),"float"===r&&e.addEventListener("mousemove",t.updateTooltip,o),e.addEventListener("mouseleave",t.hideTooltip,o))}),r&&(window.removeEventListener(r,this.hideTooltip),window.addEventListener(r,this.hideTooltip,n)),this.bindRemovalTracker()}},{key:"unbindListener",value:function(){var t=this,e=this.props,o=e.id,r=e.globalEventOff;this.isBodyMode()?this.unbindBodyListener():this.getTargetArray(o).forEach(function(e){t.unbindBasicListener(e),t.isCustomEvent(e)&&t.customUnbindListener(e)});r&&window.removeEventListener(r,this.hideTooltip),this.unbindRemovalTracker()}},{key:"unbindBasicListener",value:function(t){var e=this.isCapture(t);t.removeEventListener("mouseenter",this.showTooltip,e),t.removeEventListener("mousemove",this.updateTooltip,e),t.removeEventListener("mouseleave",this.hideTooltip,e)}},{key:"getTooltipContent",value:function(){var t,e=this.props,o=e.getContent,r=e.children;return o&&(t=Array.isArray(o)?o[0]&&o[0](this.state.originTooltip):o(this.state.originTooltip)),ht(this.state.originTooltip,r,t,this.state.isMultiline)}},{key:"isEmptyTip",value:function(t){return"string"==typeof t&&""===t||null===t}},{key:"showTooltip",value:function(t,e){if(e&&!this.getTargetArray(this.props.id).some(function(e){return e===t.currentTarget}))return;var o=this.props,r=o.multiline,n=o.getContent,i=t.currentTarget.getAttribute("data-tip"),a=t.currentTarget.getAttribute("data-multiline")||r||!1,l=t instanceof window.FocusEvent||e,p=!0;t.currentTarget.getAttribute("data-scroll-hide")?p="true"===t.currentTarget.getAttribute("data-scroll-hide"):null!=this.props.scrollHide&&(p=this.props.scrollHide);var s=t.currentTarget.getAttribute("data-place")||this.props.place||"top",c=l?"solid":this.getEffect(t.currentTarget),f=t.currentTarget.getAttribute("data-offset")||this.props.offset||{},u=at(t,t.currentTarget,this.tooltipRef,s,s,c,f);u.position&&this.props.overridePosition&&(u.position=this.props.overridePosition(u.position,t.currentTarget,this.tooltipRef,s,s,c,f));var d=u.isNewState?u.newState.place:s;this.clearTimer();var b=t.currentTarget,h=this.state.show?b.getAttribute("data-delay-update")||this.props.delayUpdate:0,m=this,_=function(){m.setState({originTooltip:i,isMultiline:a,desiredPlace:s,place:d,type:b.getAttribute("data-type")||m.props.type||"dark",effect:c,offset:f,html:b.getAttribute("data-html")?"true"===b.getAttribute("data-html"):m.props.html||!1,delayShow:b.getAttribute("data-delay-show")||m.props.delayShow||0,delayHide:b.getAttribute("data-delay-hide")||m.props.delayHide||0,delayUpdate:b.getAttribute("data-delay-update")||m.props.delayUpdate||0,border:b.getAttribute("data-border")?"true"===b.getAttribute("data-border"):m.props.border||!1,extraClass:b.getAttribute("data-class")||m.props.class||m.props.className||"",disable:b.getAttribute("data-tip-disable")?"true"===b.getAttribute("data-tip-disable"):m.props.disable||!1,currentTarget:b},function(){p&&m.addScrollListener(m.state.currentTarget),m.updateTooltip(t),n&&Array.isArray(n)&&(m.intervalUpdateContent=setInterval(function(){if(m.mount){var t=m.props.getContent,e=ht(i,"",t[0](),a),o=m.isEmptyTip(e);m.setState({isEmptyTip:o}),m.updatePosition()}},n[1]))})};h?this.delayReshow=setTimeout(_,h):_()}},{key:"updateTooltip",value:function(t){var e=this,o=this.state,r=o.delayShow,n=o.disable,i=this.props.afterShow,a=this.getTooltipContent(),l=parseInt(r,10),p=t.currentTarget||t.target;if(!this.mouseOnToolTip()&&!this.isEmptyTip(a)&&!n){var s=function(){if(Array.isArray(a)&&a.length>0||a){var o=!e.state.show;e.setState({currentEvent:t,currentTarget:p,show:!0},function(){e.updatePosition(),o&&i&&i(t)})}};clearTimeout(this.delayShowLoop),r?this.delayShowLoop=setTimeout(s,l):s()}}},{key:"listenForTooltipExit",value:function(){this.state.show&&this.tooltipRef&&this.tooltipRef.addEventListener("mouseleave",this.hideTooltip)}},{key:"removeListenerForTooltipExit",value:function(){this.state.show&&this.tooltipRef&&this.tooltipRef.removeEventListener("mouseleave",this.hideTooltip)}},{key:"hideTooltip",value:function(t,e){var o=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{isScroll:!1},n=this.state.disable,i=r.isScroll?0:this.state.delayHide,a=this.props.afterHide,l=this.getTooltipContent();if(this.mount&&!this.isEmptyTip(l)&&!n){if(e)if(!this.getTargetArray(this.props.id).some(function(e){return e===t.currentTarget})||!this.state.show)return;var p=function(){var e=o.state.show;o.mouseOnToolTip()?o.listenForTooltipExit():(o.removeListenerForTooltipExit(),o.setState({show:!1},function(){o.removeScrollListener(),e&&a&&a(t)}))};this.clearTimer(),i?this.delayHideLoop=setTimeout(p,parseInt(i,10)):p()}}},{key:"hideTooltipOnScroll",value:function(t,e){this.hideTooltip(t,e,{isScroll:!0})}},{key:"addScrollListener",value:function(t){var e=this.isCapture(t);window.addEventListener("scroll",this.hideTooltipOnScroll,e)}},{key:"removeScrollListener",value:function(){window.removeEventListener("scroll",this.hideTooltipOnScroll)}},{key:"updatePosition",value:function(){var t=this,e=this.state,o=e.currentEvent,r=e.currentTarget,n=e.place,i=e.desiredPlace,a=e.effect,l=e.offset,p=this.tooltipRef,s=at(o,r,p,n,i,a,l);if(s.position&&this.props.overridePosition&&(s.position=this.props.overridePosition(s.position,o,r,p,n,i,a,l)),s.isNewState)return this.setState(s.newState,function(){t.updatePosition()});p.style.left=s.position.left+"px",p.style.top=s.position.top+"px"}},{key:"clearTimer",value:function(){clearTimeout(this.delayShowLoop),clearTimeout(this.delayHideLoop),clearTimeout(this.delayReshow),clearInterval(this.intervalUpdateContent)}},{key:"render",value:function(){var e=this,r=this.state,n=r.extraClass,i=r.html,a=r.ariaProps,l=r.disable,s=this.getTooltipContent(),c=this.isEmptyTip(s),f="__react_component_tooltip"+(!this.state.show||l||c?"":" show")+(this.state.border?" border":"")+" place-".concat(this.state.place)+" type-".concat(this.state.type)+(this.props.delayUpdate?" allow_hover":"")+(this.props.clickable?" allow_click":""),u=this.props.wrapper;o.supportedWrappers.indexOf(u)<0&&(u=o.defaultProps.wrapper);var d=[f,n].filter(Boolean).join(" ");return i?t.default.createElement(u,p({className:d,id:this.props.id,ref:function(t){return e.tooltipRef=t}},a,{"data-id":"tooltip",dangerouslySetInnerHTML:{__html:s}})):t.default.createElement(u,p({className:d,id:this.props.id},a,{ref:function(t){return e.tooltipRef=t},"data-id":"tooltip"}),s)}}],[{key:"getDerivedStateFromProps",value:function(t,e){var o=e.ariaProps,r=mt(t);return Object.keys(r).some(function(t){return r[t]!==o[t]})?c({},e,{ariaProps:r}):null}}]),o}(),l(pt,"propTypes",{children:z.any,place:z.string,type:z.string,effect:z.string,offset:z.object,multiline:z.bool,border:z.bool,insecure:z.bool,class:z.string,className:z.string,id:z.string,html:z.bool,delayHide:z.number,delayUpdate:z.number,delayShow:z.number,event:z.string,eventOff:z.string,watchWindow:z.bool,isCapture:z.bool,globalEventOff:z.string,getContent:z.any,afterShow:z.func,afterHide:z.func,overridePosition:z.func,disable:z.bool,scrollHide:z.bool,resizeHide:z.bool,wrapper:z.string,bodyMode:z.bool,possibleCustomEvents:z.string,possibleCustomEventsOff:z.string,clickable:z.bool}),l(pt,"defaultProps",{insecure:!0,resizeHide:!0,wrapper:"div",clickable:!1}),l(pt,"supportedWrappers",["div","span"]),l(pt,"displayName","ReactTooltip"),lt=st))||lt)||lt)||lt)||lt)||lt)||lt)||lt,vt=yt;exports.default=vt;
},{"react":"n8MK"}],"EHrm":[function(require,module,exports) {
module.exports={name:"eslint-config-alloy",version:"3.6.0",description:"AlloyTeam ESLint 规则",main:"index.js",scripts:{start:"npm run dev",dev:"run-p dev:eslintrc dev:site","dev:eslintrc":"nodemon","dev:site":"parcel site/index.html --out-dir .cache",build:"run-s build:eslintrc build:site","build:eslintrc":"ts-node scripts/build.ts","build:site":"run-s clear:dist build:html","clear:dist":"rimraf ./dist","build:html":"parcel build site/index.html --public-url ./",test:"npm run lint && ts-node ./test/index.ts && npm run test:rulesCoverage","test:rulesCoverage":"ts-node ./scripts/rulesCoverage.ts",lint:"run-s eslint prettier",eslint:'eslint --ext .js,.jsx,.ts,.tsx,.vue --ignore-pattern "bad.*" .',prettier:'prettier -l "./**/*"',"prettier:fix":'prettier --write -l "./**/*"'},repository:{type:"git",url:"git+https://github.com/AlloyTeam/eslint-config-alloy.git"},keywords:["eslint","eslintrc","eslintconfig","config","alloy","alloyteam","javascript","styleguide","react","vue","typescript"],author:"xcatliu <xcatliu@gmail.com>",contributors:["heyli <lcxfs1991@gmail.com>","Swan <noreply@github.com>","DiamondYuan <admin@diamondyuan.com>","Dash Chen <noreply@github.com>","lzw <mingxin2014@gmail.com>","ryoliu <sfesh@163.com>","sunhui04 <sunhui04@meituan.com>"],license:"MIT",bugs:{url:"https://github.com/AlloyTeam/eslint-config-alloy/issues"},homepage:"https://alloyteam.github.io/eslint-config-alloy/",publishConfig:{access:"public"},husky:{hooks:{"pre-commit":"npm test","pre-push":"npm test"}},dependencies:{},devDependencies:{"@types/cookie":"^0.3.3","@types/doctrine":"0.0.3","@types/eslint":"^6.1.3","@types/node":"^13.7.4","@types/prettier":"^2.0.0","@types/react":"^16.9.15","@types/react-dom":"^16.8.4","@types/react-tooltip":"^3.11.0","@types/rimraf":"^3.0.0","@types/xml-escape":"^1.1.0","@typescript-eslint/eslint-plugin":"^2.20.0","@typescript-eslint/parser":"^2.20.0","babel-eslint":"^10.0.3",cookie:"^0.4.0",doctrine:"^3.0.0",eslint:"^6.7.1","eslint-config-prettier":"^6.10.0","eslint-plugin-react":"^7.18.3","eslint-plugin-vue":"^6.2.1",husky:"^4.0.2","insert-tag":"^0.1.2","mobi-plugin-color":"^1.0.0","mobi.css":"^3.1.1",nodemon:"^2.0.0","npm-run-all":"^4.1.5","parcel-bundler":"^1.12.4",prettier:"^2.0.1",react:"^16.12.0","react-dom":"^16.8.6","react-tooltip":"^4.0.3",rimraf:"^3.0.0","ts-node":"^7.0.1",typescript:"^3.7.4","vue-eslint-parser":"^7.0.0","xml-escape":"^1.1.0"},greenkeeper:{ignore:["ts-node"]}};
},{}],"gMFa":[function(require,module,exports) {
module.exports={"accessor-pairs":{name:"accessor-pairs",value:["error",{setWithoutGet:!0,getWithoutSet:!1}],description:"setter 必须有对应的 getter，getter 可以没有对应的 setter",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Getter is not present for setter &amp;apos;bar&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(accessor-pairs)</span>"><span class="token keyword">set</span> <span class="token function">bar</span></mark><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">get</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>barValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fooValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"array-callback-return":{name:"array-callback-return",value:"error",description:"数组的方法除了 forEach 之外，回调函数必须有返回值",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator"><mark class="eslint-error" data-tip="Expected to return a value in arrow function.<br/><span class=\'eslint-error-rule-id\'>eslint(array-callback-return)</span>">=</mark>></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">*</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"block-scoped-var":{name:"block-scoped-var",value:"off",description:"将 var 定义的变量视为块作用域，禁止在块外使用",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 var 了"},"callback-return":{name:"callback-return",value:"off",description:"callback 之后必须立即 return",category:"",badExample:"",goodExample:""},camelcase:{name:"camelcase",value:"off",description:"变量名必须是 camelcase 风格的",category:"",badExample:"",goodExample:"",reason:"很多 api 或文件名都不是 camelcase 风格的"},"capitalized-comments":{name:"capitalized-comments",value:"off",description:"注释的首字母必须大写",category:"",badExample:"",goodExample:""},"class-methods-use-this":{name:"class-methods-use-this",value:"off",description:"在类的非静态方法中，必须存在对 this 的引用",category:"",badExample:"",goodExample:""},complexity:{name:"complexity",value:["error",{max:20}],description:"禁止函数的循环复杂度超过 20",category:"",badExample:'<mark class="eslint-error" data-tip="Function &amp;apos;foo&amp;apos; has a complexity of 21. Maximum allowed is 20.<br/><span class=\'eslint-error-rule-id\'>eslint(complexity)</span>"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">9</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">11</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">12</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">13</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">14</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">16</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">17</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">18</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">19</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">20</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">9</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">11</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">12</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">13</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">14</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">16</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">17</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">18</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">19</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">20</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"https://en.wikipedia.org/wiki/Cyclomatic_complexity"},"consistent-return":{name:"consistent-return",value:"off",description:"禁止函数在不同分支返回不同类型的值",category:"",badExample:"",goodExample:"",reason:"缺少 TypeScript 的支持，类型判断是不准确的"},"consistent-this":{name:"consistent-this",value:"off",description:"限制 this 的别名",category:"",badExample:"",goodExample:""},"constructor-super":{name:"constructor-super",value:"error",description:"constructor 中必须有 super",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected to call &amp;apos;super()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(constructor-super)</span>"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"default-case":{name:"default-case",value:"off",description:"switch 语句必须有 default",category:"",badExample:"",goodExample:""},"default-param-last":{name:"default-param-last",value:"off",description:"有默认值的参数必须放在函数参数的末尾",category:"",badExample:"",goodExample:""},"dot-notation":{name:"dot-notation",value:"off",description:"禁止使用 foo['bar']，必须写成 foo.bar",category:"",badExample:"",goodExample:"",reason:"当需要写一系列属性的时候，可以更统一"},eqeqeq:{name:"eqeqeq",value:["error","always"],description:"必须使用 === 或 !==，禁止使用 == 或 !=",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator"><mark class="eslint-error" data-tip="Expected &amp;apos;===&amp;apos; and instead saw &amp;apos;==&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(eqeqeq)</span>">==</mark></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator"><mark class="eslint-error" data-tip="Expected &amp;apos;!==&amp;apos; and instead saw &amp;apos;!=&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(eqeqeq)</span>">!=</mark></span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"for-direction":{name:"for-direction",value:"error",description:"禁止方向错误的 for 循环",category:"",badExample:'<mark class="eslint-error" data-tip="The update clause in this loop moves the variable in the wrong direction.<br/><span class=\'eslint-error-rule-id\'>eslint(for-direction)</span>"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>'},"func-name-matching":{name:"func-name-matching",value:["error","always",{includeCommonJSModuleExports:!1}],description:"函数赋值给变量的时候，函数名必须与变量名一致",category:"",badExample:'<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Function name `bar` should match variable name `foo`.<br/><span class=\'eslint-error-rule-id\'>eslint(func-name-matching)</span>"><span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>'},"func-names":{name:"func-names",value:"off",description:"函数必须有名字",category:"",badExample:"",goodExample:""},"func-style":{name:"func-style",value:"off",description:"必须只使用函数声明或只使用函数表达式",category:"",badExample:"",goodExample:""},"getter-return":{name:"getter-return",value:"error",description:"getter 必须有返回值，并且禁止返回空",category:"",badExample:'<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation"><mark class="eslint-error" data-tip="Expected to return a value in getter &amp;apos;name&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(getter-return)</span>">(</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// do something</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Expected to return a value in getter &amp;apos;name&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(getter-return)</span>"><span class="token keyword">return</span><span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'Alex\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"global-require":{name:"global-require",value:"off",description:"require 必须在全局作用域下",category:"",badExample:"",goodExample:""},"grouped-accessor-pairs":{name:"grouped-accessor-pairs",value:"error",description:"setter 和 getter 必须写在一起",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="Accessor pair setter &amp;apos;bar&amp;apos; and getter &amp;apos;bar&amp;apos; should be grouped.<br/><span class=\'eslint-error-rule-id\'>eslint(grouped-accessor-pairs)</span>"><span class="token keyword">get</span> <span class="token function">bar</span></mark><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>barValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">get</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>barValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"guard-for-in":{name:"guard-for-in",value:"error",description:"for in 内部必须有 hasOwnProperty",category:"",badExample:'<mark class="eslint-error" data-tip="The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.<br/><span class=\'eslint-error-rule-id\'>eslint(guard-for-in)</span>"><span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"handle-callback-err":{name:"handle-callback-err",value:"off",description:"callback 中的 err 必须被处理",category:"",badExample:"",goodExample:"",reason:"它是通过字符串匹配来判断函数参数 err 的，不准确"},"id-blacklist":{name:"id-blacklist",value:"off",description:"禁止使用指定的标识符",category:"",badExample:"",goodExample:""},"id-length":{name:"id-length",value:"off",description:"限制变量名长度",category:"",badExample:"",goodExample:""},"id-match":{name:"id-match",value:"off",description:"限制变量名必须匹配指定的正则表达式",category:"",badExample:"",goodExample:""},"init-declarations":{name:"init-declarations",value:"off",description:"变量必须在定义的时候赋值",category:"",badExample:"",goodExample:""},"line-comment-position":{name:"line-comment-position",value:"off",description:"单行注释必须写在上一行",category:"",badExample:"",goodExample:""},"lines-between-class-members":{name:"lines-between-class-members",value:"off",description:"类的成员之间是否需要空行",category:"",badExample:"",goodExample:"",reason:"有时为了紧凑需要挨在一起，有时为了可读性需要空一行"},"max-classes-per-file":{name:"max-classes-per-file",value:"off",description:"限制一个文件中类的数量",category:"",badExample:"",goodExample:""},"max-depth":{name:"max-depth",value:["error",5],description:"代码块嵌套的深度禁止超过 5 层",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <mark class="eslint-error" data-tip="Blocks are nested too deeply (6). Maximum allowed is 5.<br/><span class=\'eslint-error-rule-id\'>eslint(max-depth)</span>"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token punctuation">}</span></mark>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"max-lines":{name:"max-lines",value:"off",description:"限制一个文件最多的行数",category:"",badExample:"",goodExample:""},"max-lines-per-function":{name:"max-lines-per-function",value:"off",description:"限制函数块中的代码行数",category:"",badExample:"",goodExample:""},"max-nested-callbacks":{name:"max-nested-callbacks",value:["error",3],description:"回调函数嵌套禁止超过 3 层，多了请用 async await 替代",category:"",badExample:'<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">qux</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Too many nested callbacks (4). Maximum allowed is 3.<br/><span class=\'eslint-error-rule-id\'>eslint(max-nested-callbacks)</span>"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token function">foo</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"max-params":{name:"max-params",value:["error",3],description:"函数的参数禁止超过 3 个",category:"",badExample:'<mark class="eslint-error" data-tip="Function &amp;apos;foo&amp;apos; has too many parameters (4). Maximum allowed is 3.<br/><span class=\'eslint-error-rule-id\'>eslint(max-params)</span>"><span class="token keyword">function</span> <span class="token function">foo</span></mark><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4 <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"max-statements":{name:"max-statements",value:"off",description:"限制函数块中的语句数量",category:"",badExample:"",goodExample:""},"max-statements-per-line":{name:"max-statements-per-line",value:"off",description:"限制一行中的语句数量",category:"",badExample:"",goodExample:""},"multiline-comment-style":{name:"multiline-comment-style",value:"off",description:"约束多行注释的格式",category:"",badExample:"",goodExample:"",reason:"能写注释已经不容易了，不需要限制太多"},"new-cap":{name:"new-cap",value:["error",{newIsCap:!0,capIsNew:!1,properties:!0}],description:"new 后面的类名必须首字母大写",category:"",badExample:'<span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="A constructor name should not start with a lowercase letter.<br/><span class=\'eslint-error-rule-id\'>eslint(new-cap)</span>">f</mark>oo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">foo<span class="token punctuation">.</span><mark class="eslint-error" data-tip="A constructor name should not start with a lowercase letter.<br/><span class=\'eslint-error-rule-id\'>eslint(new-cap)</span>">b</mark>ar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">foo<span class="token punctuation">.</span>Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-alert":{name:"no-alert",value:"off",description:"禁止使用 alert",category:"",badExample:"",goodExample:""},"no-array-constructor":{name:"no-array-constructor",value:"error",description:"禁止使用 Array 构造函数时传入的参数超过一个",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The array literal notation [] is preferable.<br/><span class=\'eslint-error-rule-id\'>eslint(no-array-constructor)</span>"><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2]</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="The array literal notation [] is preferable.<br/><span class=\'eslint-error-rule-id\'>eslint(no-array-constructor)</span>"><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2]</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty × 3]</span>\n<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty × 3]</span>\n<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["foo", "foo", "foo"]</span>\n<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["foo", "foo", "foo"]</span>',reason:"参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数"},"no-async-promise-executor":{name:"no-async-promise-executor",value:"error",description:"禁止将 async 函数做为 new Promise 的回调函数",category:"",badExample:'<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword"><mark class="eslint-error" data-tip="Promise executor functions should not be async.<br/><span class=\'eslint-error-rule-id\'>eslint(no-async-promise-executor)</span>">async</mark></span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"出现这种情况时，一般不需要使用 new Promise 实现异步了"},"no-await-in-loop":{name:"no-await-in-loop",value:"off",description:"禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了",category:"",badExample:"",goodExample:"",reason:"要求太严格了，有时需要在循环中写 await"},"no-bitwise":{name:"no-bitwise",value:"off",description:"禁止使用位运算",category:"",badExample:"",goodExample:""},"no-buffer-constructor":{name:"no-buffer-constructor",value:"error",description:"禁止直接使用 Buffer",category:"",badExample:'<mark class="eslint-error" data-tip="new Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-buffer-constructor)</span>"><span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-buffer-constructor)</span>"><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nBuffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"Buffer 构造函数是已废弃的语法"},"no-caller":{name:"no-caller",value:"error",description:"禁止使用 caller 或 callee",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Avoid arguments.callee.<br/><span class=\'eslint-error-rule-id\'>eslint(no-caller)</span>">arguments<span class="token punctuation">.</span><span class="token function">callee</span></mark><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"它们是已废弃的语法"},"no-case-declarations":{name:"no-case-declarations",value:"error",description:"switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <mark class="eslint-error" data-tip="Unexpected lexical declaration in case block.<br/><span class=\'eslint-error-rule-id\'>eslint(no-case-declarations)</span>"><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-class-assign":{name:"no-class-assign",value:"error",description:"禁止对已定义的 class 重新赋值",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<mark class="eslint-error" data-tip="&amp;apos;Foo&amp;apos; is a class.<br/><span class=\'eslint-error-rule-id\'>eslint(no-class-assign)</span>">Foo</mark> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-compare-neg-zero":{name:"no-compare-neg-zero",value:"error",description:"禁止与负零进行比较",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Do not use the &amp;apos;===&amp;apos; operator to compare against -0.<br/><span class=\'eslint-error-rule-id\'>eslint(no-compare-neg-zero)</span>">foo <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">0</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-cond-assign":{name:"no-cond-assign",value:["error","except-parens"],description:"禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Expected a conditional expression and instead saw an assignment.<br/><span class=\'eslint-error-rule-id\'>eslint(no-cond-assign)</span>">foo <span class="token operator">=</span> <span class="token number">0</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator">===</span> <span class="token punctuation">(</span>foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-console":{name:"no-console",value:"off",description:"禁止使用 console",category:"",badExample:"",goodExample:""},"no-const-assign":{name:"no-const-assign",value:"error",description:"禁止对使用 const 定义的常量重新赋值",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is constant.<br/><span class=\'eslint-error-rule-id\'>eslint(no-const-assign)</span>">foo</mark> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> bar <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-constant-condition":{name:"no-constant-condition",value:["error",{checkLoops:!1}],description:"禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean"><mark class="eslint-error" data-tip="Unexpected constant condition.<br/><span class=\'eslint-error-rule-id\'>eslint(no-constant-condition)</span>">true</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number"><mark class="eslint-error" data-tip="Unexpected constant condition.<br/><span class=\'eslint-error-rule-id\'>eslint(no-constant-condition)</span>">0</mark></span> <span class="token operator">?</span> <span class="token string">\'bar\'</span> <span class="token punctuation">:</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-constructor-return":{name:"no-constructor-return",value:"error",description:"禁止在构造函数中返回值",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>bar <span class="token operator">=</span> bar<span class="token punctuation">;</span>\n        <mark class="eslint-error" data-tip="Unexpected return statement in constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-constructor-return)</span>"><span class="token keyword">return</span> bar<span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>bar <span class="token operator">=</span> bar<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-continue":{name:"no-continue",value:"off",description:"禁止使用 continue",category:"",badExample:"",goodExample:""},"no-control-regex":{name:"no-control-regex",value:"off",description:"禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/",category:"",badExample:"",goodExample:"",reason:"几乎不会遇到这种场景"},"no-debugger":{name:"no-debugger",value:"error",description:"禁止使用 debugger",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Unexpected &amp;apos;debugger&amp;apos; statement.<br/><span class=\'eslint-error-rule-id\'>eslint(no-debugger)</span>"><span class="token keyword">debugger</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// debugger;</span>\n<span class="token punctuation">}</span>'},"no-delete-var":{name:"no-delete-var",value:"off",description:"禁止对一个变量使用 delete",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-div-regex":{name:"no-div-regex",value:"off",description:"禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/",category:"",badExample:"",goodExample:"",reason:"有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难"},"no-dupe-args":{name:"no-dupe-args",value:"off",description:"禁止在函数参数中出现重复名称的参数",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-dupe-class-members":{name:"no-dupe-class-members",value:"error",description:"禁止重复定义类的成员",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Duplicate name &amp;apos;bar&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-dupe-class-members)</span>"><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-dupe-else-if":{name:"no-dupe-else-if",value:"error",description:"禁止 if else 的条件判断中出现重复的条件",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="This branch can never execute. Its condition is a duplicate or covered by previous conditions in the if-else-if chain.<br/><span class=\'eslint-error-rule-id\'>eslint(no-dupe-else-if)</span>">foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-dupe-keys":{name:"no-dupe-keys",value:"error",description:"禁止在对象字面量中出现重复的键名",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="Duplicate key &amp;apos;bar&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-dupe-keys)</span>">bar</mark><span class="token punctuation">:</span> <span class="token number">2</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> <span class="token number">2</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-duplicate-case":{name:"no-duplicate-case",value:"error",description:"禁止在 switch 语句中出现重复测试表达式的 case",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Duplicate case label.<br/><span class=\'eslint-error-rule-id\'>eslint(no-duplicate-case)</span>"><span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-duplicate-imports":{name:"no-duplicate-imports",value:"error",description:"禁止重复导入模块",category:"",badExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="&amp;apos;fs&amp;apos; import is duplicated.<br/><span class=\'eslint-error-rule-id\'>eslint(no-duplicate-imports)</span>"><span class="token keyword">import</span> <span class="token punctuation">{</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile<span class="token punctuation">,</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>'},"no-else-return":{name:"no-else-return",value:"off",description:"禁止在 else 内使用 return，必须改为提前结束",category:"",badExample:"",goodExample:"",reason:"else 中使用 return 可以使代码结构更清晰"},"no-empty":{name:"no-empty",value:["error",{allowEmptyCatch:!0}],description:"禁止出现空代码块，允许 catch 为空代码块",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <mark class="eslint-error" data-tip="Empty block statement.<br/><span class=\'eslint-error-rule-id\'>eslint(no-empty)</span>"><span class="token punctuation">{</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-empty-character-class":{name:"no-empty-character-class",value:"error",description:"禁止在正则表达式中使用空的字符集 []",category:"",badExample:'<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><mark class="eslint-error" data-tip="Empty class.<br/><span class=\'eslint-error-rule-id\'>eslint(no-empty-character-class)</span>">/abc[]/</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex">/abc[a-z]/</span><span class="token punctuation">;</span>'},"no-empty-function":{name:"no-empty-function",value:"off",description:"不允许有空函数",category:"",badExample:"",goodExample:"",reason:"有时需要将一个空函数设置为某个项的默认值"},"no-empty-pattern":{name:"no-empty-pattern",value:"error",description:"禁止解构赋值中出现空 {} 或 []",category:"",badExample:'<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Unexpected empty object pattern.<br/><span class=\'eslint-error-rule-id\'>eslint(no-empty-pattern)</span>"><span class="token punctuation">{</span><span class="token punctuation">}</span></mark> <span class="token operator">=</span> foo<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>'},"no-eq-null":{name:"no-eq-null",value:"error",description:"禁止使用 foo == null，必须使用 foo === null",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Use &amp;apos;===&amp;apos; to compare with null.<br/><span class=\'eslint-error-rule-id\'>eslint(no-eq-null)</span>">foo <span class="token operator">==</span> <span class="token keyword">null</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-eval":{name:"no-eval",value:"error",description:"禁止使用 eval",category:"",badExample:'<span class="token function"><mark class="eslint-error" data-tip="eval can be harmful.<br/><span class=\'eslint-error-rule-id\'>eslint(no-eval)</span>">e</mark>val</span><span class="token punctuation">(</span><span class="token string">\'const foo = 0\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>'},"no-ex-assign":{name:"no-ex-assign",value:"error",description:"禁止将 catch 的第一个参数 error 重新赋值",category:"",badExample:'<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Do not assign to the exception parameter.<br/><span class=\'eslint-error-rule-id\'>eslint(no-ex-assign)</span>">e</mark> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-extend-native":{name:"no-extend-native",value:"error",description:"禁止修改原生对象",category:"",badExample:'<mark class="eslint-error" data-tip="Array prototype is read only, properties should not be added.<br/><span class=\'eslint-error-rule-id\'>eslint(no-extend-native)</span>"><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span></mark><span class="token punctuation">;</span>\n\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"修改原生对象可能会与将来版本的 js 冲突"},"no-extra-bind":{name:"no-extra-bind",value:"error",description:"禁止出现没必要的 bind",category:"",badExample:'<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function"><mark class="eslint-error" data-tip="The function binding is unnecessary.<br/><span class=\'eslint-error-rule-id\'>eslint(no-extra-bind)</span>">b</mark>ind</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-extra-boolean-cast":{name:"no-extra-boolean-cast",value:"error",description:"禁止不必要的布尔类型转换",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Redundant double negation.<br/><span class=\'eslint-error-rule-id\'>eslint(no-extra-boolean-cast)</span>"><span class="token operator">!</span><span class="token operator">!</span>foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Redundant Boolean call.<br/><span class=\'eslint-error-rule-id\'>eslint(no-extra-boolean-cast)</span>"><span class="token function">Boolean</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-extra-label":{name:"no-extra-label",value:"off",description:"禁止出现没必要的 label",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-fallthrough":{name:"no-fallthrough",value:"error",description:"switch 的 case 内必须有 break, return 或 throw，空的 case 除外",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Expected a &amp;apos;break&amp;apos; statement before &amp;apos;case&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-fallthrough)</span>"><span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-func-assign":{name:"no-func-assign",value:"error",description:"禁止将一个函数声明重新赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is a function.<br/><span class=\'eslint-error-rule-id\'>eslint(no-func-assign)</span>">foo</mark> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>'},"no-global-assign":{name:"no-global-assign",value:"error",description:"禁止对全局变量赋值",category:"",badExample:'<mark class="eslint-error" data-tip="Read-only global &amp;apos;Object&amp;apos; should not be modified.<br/><span class=\'eslint-error-rule-id\'>eslint(no-global-assign)</span>">Object</mark> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>',goodExample:'foo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>'},"no-implicit-coercion":{name:"no-implicit-coercion",value:["error",{allow:["!!"]}],description:"禁止使用 ~+ 等难以理解的类型转换，仅允许使用 !!",category:"",badExample:'<span class="token keyword">const</span> b <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `foo.indexOf(&amp;apos;.&amp;apos;) !== -1` instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implicit-coercion)</span>"><span class="token operator">~</span>foo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `Number(foo)` instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implicit-coercion)</span>"><span class="token operator">+</span>foo</mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> m <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `Number(foo)` instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implicit-coercion)</span>"><span class="token number">1</span> <span class="token operator">*</span> foo</mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `String(foo)` instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implicit-coercion)</span>"><span class="token string">\'\'</span> <span class="token operator">+</span> foo</mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="use `foo = String(foo)` instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implicit-coercion)</span>">foo <span class="token operator">+=</span> <span class="token string">\'\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> b <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>foo<span class="token punctuation">;</span>'},"no-implicit-globals":{name:"no-implicit-globals",value:"off",description:"禁止在全局作用域下定义变量或申明函数",category:"",badExample:"",goodExample:"",reason:"模块化之后，不会出现这种在全局作用域下定义变量的情况"},"no-implied-eval":{name:"no-implied-eval",value:"error",description:"禁止在 setTimeout 或 setInterval 中传入字符串",category:"",badExample:'<mark class="eslint-error" data-tip="Implied eval. Consider passing a function instead of a string.<br/><span class=\'eslint-error-rule-id\'>eslint(no-implied-eval)</span>"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">\'alert("Hello World");\'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">\'Hello World\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-import-assign":{name:"no-import-assign",value:"error",description:"禁止对导入的模块进行赋值",category:"",badExample:'<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is read-only.<br/><span class=\'eslint-error-rule-id\'>eslint(no-import-assign)</span>">foo <span class="token operator">=</span> <span class="token number">1</span></mark><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bar <span class="token keyword">from</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="The members of &amp;apos;bar&amp;apos; are read-only.<br/><span class=\'eslint-error-rule-id\'>eslint(no-import-assign)</span>">bar<span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token number">1</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> foo <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">.</span>baz <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bar <span class="token keyword">from</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\nbar<span class="token punctuation">.</span>baz<span class="token punctuation">.</span>qux <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>'},"no-inline-comments":{name:"no-inline-comments",value:"off",description:"禁止在代码后添加单行注释",category:"",badExample:"",goodExample:""},"no-inner-declarations":{name:"no-inner-declarations",value:["error","both"],description:"禁止在 if 代码块内出现函数声明",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Move function declaration to program root.<br/><span class=\'eslint-error-rule-id\'>eslint(no-inner-declarations)</span>"><span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-invalid-regexp":{name:"no-invalid-regexp",value:"error",description:"禁止在 RegExp 构造函数中出现非法的正则表达式",category:"",badExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Invalid regular expression: /[/: Unterminated character class.<br/><span class=\'eslint-error-rule-id\'>eslint(no-invalid-regexp)</span>"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'[\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Invalid flags supplied to RegExp constructor &amp;apos;z&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-invalid-regexp)</span>"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">,</span> <span class="token string">\'z\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'[a-z]\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">,</span> <span class="token string">\'g\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-invalid-this":{name:"no-invalid-this",value:"error",description:"禁止在类之外的地方使用 this",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword"><mark class="eslint-error" data-tip="Unexpected &amp;apos;this&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-invalid-this)</span>">this</mark></span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"只允许在 class 中使用 this"},"no-irregular-whitespace":{name:"no-irregular-whitespace",value:["error",{skipStrings:!0,skipComments:!1,skipRegExps:!0,skipTemplates:!0}],description:"禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><mark class="eslint-error" data-tip="Irregular whitespace not allowed.<br/><span class=\'eslint-error-rule-id\'>eslint(no-irregular-whitespace)</span>">　</mark><span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'　\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token regex">/　/</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token template-string"><span class="token string">`　`</span></span><span class="token punctuation">;</span>'},"no-iterator":{name:"no-iterator",value:"error",description:"禁止使用 __iterator__",category:"",badExample:'<mark class="eslint-error" data-tip="Reserved name &amp;apos;__iterator__&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-iterator)</span>"><span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">__iterator__</span></mark> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FooIterator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [1, 2, 3]</span>',reason:"__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它"},"no-label-var":{name:"no-label-var",value:"off",description:"禁止 label 名称与已定义的变量重复",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-labels":{name:"no-labels",value:"error",description:"禁止使用 label",category:"",badExample:'<mark class="eslint-error" data-tip="Unexpected labeled statement.<br/><span class=\'eslint-error-rule-id\'>eslint(no-labels)</span>">loop<span class="token punctuation">:</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <mark class="eslint-error" data-tip="Unexpected label in continue statement.<br/><span class=\'eslint-error-rule-id\'>eslint(no-labels)</span>"><span class="token keyword">continue</span> loop<span class="token punctuation">;</span></mark>\n        <span class="token punctuation">}</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token comment">// 0 2 3 4</span>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">continue</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 0 2 3 4</span>'},"no-lone-blocks":{name:"no-lone-blocks",value:"error",description:"禁止使用没必要的 {} 作为代码块",category:"",badExample:'<mark class="eslint-error" data-tip="Block is redundant.<br/><span class=\'eslint-error-rule-id\'>eslint(no-lone-blocks)</span>"><span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-lonely-if":{name:"no-lonely-if",value:"off",description:"禁止 else 中只有一个单独的 if",category:"",badExample:"",goodExample:"",reason:"单独的 if 可以把逻辑表达的更清楚"},"no-loop-func":{name:"no-loop-func",value:"off",description:"禁止在循环内的函数内部出现循环体条件语句中定义的变量",category:"",badExample:"",goodExample:"",reason:"使用 let 就已经解决了这个问题了"},"no-magic-numbers":{name:"no-magic-numbers",value:"off",description:"禁止使用 magic numbers",category:"",badExample:"",goodExample:""},"no-misleading-character-class":{name:"no-misleading-character-class",value:"error",description:"禁止正则表达式中使用肉眼无法区分的特殊字符",category:"",badExample:'<span class="token regex"><mark class="eslint-error" data-tip="Unexpected combined character in character class.<br/><span class=\'eslint-error-rule-id\'>eslint(no-misleading-character-class)</span>">/^[Á]$/u</mark></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">\'Á\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>',goodExample:'<span class="token regex">/^[A]$/u</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">\'A\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>',reason:"某些特殊字符很难看出差异，最好不要在正则中使用"},"no-mixed-requires":{name:"no-mixed-requires",value:"off",description:"相同类型的 require 必须放在一起",category:"",badExample:"",goodExample:""},"no-multi-assign":{name:"no-multi-assign",value:"off",description:"禁止连续赋值，比如 foo = bar = 1",category:"",badExample:"",goodExample:""},"no-multi-str":{name:"no-multi-str",value:"error",description:"禁止使用 \\ 来换行字符串",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string"><mark class="eslint-error" data-tip="Multiline support is limited to browsers supporting ES5 only.<br/><span class=\'eslint-error-rule-id\'>eslint(no-multi-str)</span>">\'Line 1\\\nLine 2\'</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Line 1\nLine 2`</span></span><span class="token punctuation">;</span>'},"no-negated-condition":{name:"no-negated-condition",value:"off",description:"禁止 if 里有否定的表达式",category:"",badExample:"",goodExample:"",reason:"否定的表达式可以把逻辑表达的更清楚"},"no-nested-ternary":{name:"no-nested-ternary",value:"off",description:"禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e",category:"",badExample:"",goodExample:""},"no-new":{name:"no-new",value:"error",description:"禁止直接 new 一个类而不赋值",category:"",badExample:'<mark class="eslint-error" data-tip="Do not use &amp;apos;new&amp;apos; for side effects.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new)</span>"><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"new 应该作为创建一个类的实例的方法，所以不能不赋值"},"no-new-func":{name:"no-new-func",value:"error",description:"禁止使用 new Function",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The Function constructor is eval.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-func)</span>"><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'b\'</span><span class="token punctuation">,</span> <span class="token string">\'return a + b\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',reason:"这和 eval 是等价的"},"no-new-object":{name:"no-new-object",value:"error",description:"禁止直接 new Object",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The object literal notation {} is preferrable.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-object)</span>"><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-new-require":{name:"no-new-require",value:"error",description:"禁止直接 new require('foo')",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Unexpected use of new with require.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-require)</span>"><span class="token keyword">new</span> <span class="token class-name">require</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-new-symbol":{name:"no-new-symbol",value:"error",description:"禁止使用 new 来生成 Symbol",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="`Symbol` cannot be called as a constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-symbol)</span>">Symbol</mark></span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-new-wrappers":{name:"no-new-wrappers",value:"error",description:"禁止使用 new 来生成 String, Number 或 Boolean",category:"",badExample:'<span class="token keyword">const</span> s <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use String as a constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-wrappers)</span>"><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use Number as a constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-wrappers)</span>"><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use Boolean as a constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-new-wrappers)</span>"><span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-obj-calls":{name:"no-obj-calls",value:"error",description:"禁止将 Math, JSON 或 Reflect 直接作为函数调用",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="&amp;apos;Math&amp;apos; is not a function.<br/><span class=\'eslint-error-rule-id\'>eslint(no-obj-calls)</span>"><span class="token function">Math</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="&amp;apos;JSON&amp;apos; is not a function.<br/><span class=\'eslint-error-rule-id\'>eslint(no-obj-calls)</span>"><span class="token constant">JSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <mark class="eslint-error" data-tip="&amp;apos;Reflect&amp;apos; is not a function.<br/><span class=\'eslint-error-rule-id\'>eslint(no-obj-calls)</span>"><span class="token function">Reflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'{}\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'x\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-octal":{name:"no-octal",value:"off",description:"禁止使用 0 开头的数字表示八进制数",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-octal-escape":{name:"no-octal-escape",value:"off",description:"禁止使用八进制的转义符",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-param-reassign":{name:"no-param-reassign",value:"error",description:"禁止对函数的参数重新赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Assignment to function parameter &amp;apos;bar&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-param-reassign)</span>">bar</mark> <span class="token operator">=</span> bar <span class="token operator">||</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">bar_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    bar <span class="token operator">=</span> bar_ <span class="token operator">||</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-path-concat":{name:"no-path-concat",value:"error",description:"禁止对 __dirname 或 __filename 使用字符串连接",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use path.join() or path.resolve() instead of + to create paths.<br/><span class=\'eslint-error-rule-id\'>eslint(no-path-concat)</span>">__dirname <span class="token operator">+</span> <span class="token string">\'/foo.js\'</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use path.join() or path.resolve() instead of + to create paths.<br/><span class=\'eslint-error-rule-id\'>eslint(no-path-concat)</span>">__filename <span class="token operator">+</span> <span class="token string">\'/bar.js\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">\'path\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> foo <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'foo.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__filename<span class="token punctuation">,</span> <span class="token string">\'bar.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"不同平台下的路径符号不一致，建议使用 path 处理平台差异性"},"no-plusplus":{name:"no-plusplus",value:"off",description:"禁止使用 ++ 或 --",category:"",badExample:"",goodExample:""},"no-process-env":{name:"no-process-env",value:"off",description:"禁止使用 process.env.NODE_ENV",category:"",badExample:"",goodExample:""},"no-process-exit":{name:"no-process-exit",value:"off",description:"禁止使用 process.exit(0)",category:"",badExample:"",goodExample:""},"no-proto":{name:"no-proto",value:"error",description:"禁止使用 __proto__",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The &amp;apos;__proto__&amp;apos; property is deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(no-proto)</span>">bar<span class="token punctuation">.</span>__proto__</mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="The &amp;apos;__proto__&amp;apos; property is deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(no-proto)</span>">bar<span class="token punctuation">.</span>__proto__</mark> <span class="token operator">=</span> baz<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\nObject<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> baz<span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"__proto__ 是已废弃的语法"},"no-prototype-builtins":{name:"no-prototype-builtins",value:"off",description:"禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable",category:"",badExample:"",goodExample:"",reason:"hasOwnProperty 比较常用"},"no-redeclare":{name:"no-redeclare",value:"off",description:"禁止重复定义变量",category:"",badExample:"",goodExample:"",reason:"禁用 var 之后，编译阶段就会报错了"},"no-regex-spaces":{name:"no-regex-spaces",value:"error",description:"禁止在正则表达式中出现连续的空格",category:"",badExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token regex"><mark class="eslint-error" data-tip="Spaces are hard to count. Use {3}.<br/><span class=\'eslint-error-rule-id\'>eslint(no-regex-spaces)</span>">/foo   bar/</mark></span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Spaces are hard to count. Use {3}.<br/><span class=\'eslint-error-rule-id\'>eslint(no-regex-spaces)</span>"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'foo   bar\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token regex">/foo {3}bar/</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'foo {3}bar\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-restricted-globals":{name:"no-restricted-globals",value:"off",description:"禁止使用指定的全局变量",category:"",badExample:"",goodExample:""},"no-restricted-imports":{name:"no-restricted-imports",value:"off",description:"禁止导入指定的模块",category:"",badExample:"",goodExample:""},"no-restricted-modules":{name:"no-restricted-modules",value:"off",description:"禁止使用指定的模块",category:"",badExample:"",goodExample:""},"no-restricted-properties":{name:"no-restricted-properties",value:"off",description:"禁止使用指定的对象属性",category:"",badExample:"",goodExample:""},"no-restricted-syntax":{name:"no-restricted-syntax",value:"off",description:"禁止使用指定的语法",category:"",badExample:"",goodExample:""},"no-return-assign":{name:"no-return-assign",value:["error","always"],description:"禁止在 return 语句里赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Return statement should not contain assignment.<br/><span class=\'eslint-error-rule-id\'>eslint(no-return-assign)</span>"><span class="token keyword">return</span> <span class="token punctuation">(</span>bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> bar<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-return-await":{name:"no-return-await",value:"error",description:"禁止在 return 语句里使用 await",category:"",badExample:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Redundant use of `await` on a return value.<br/><span class=\'eslint-error-rule-id\'>eslint(no-return-await)</span>"><span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-script-url":{name:"no-script-url",value:"off",description:"禁止出现 location.href = 'javascript:void(0)';",category:"",badExample:"",goodExample:"",reason:"有些场景下还是需要用到这个"},"no-self-assign":{name:"no-self-assign",value:"error",description:"禁止将自己赋值给自己",category:"",badExample:'foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is assigned to itself.<br/><span class=\'eslint-error-rule-id\'>eslint(no-self-assign)</span>">foo</mark><span class="token punctuation">;</span>',goodExample:'foo <span class="token operator">=</span> bar<span class="token punctuation">;</span>'},"no-self-compare":{name:"no-self-compare",value:"error",description:"禁止将自己与自己比较",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Comparing to itself is potentially pointless.<br/><span class=\'eslint-error-rule-id\'>eslint(no-self-compare)</span>">foo <span class="token operator">===</span> foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Comparing to itself is potentially pointless.<br/><span class=\'eslint-error-rule-id\'>eslint(no-self-compare)</span>"><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-sequences":{name:"no-sequences",value:"error",description:"禁止使用逗号操作符",category:"",badExample:'foo <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation"><mark class="eslint-error" data-tip="Unexpected use of comma operator.<br/><span class=\'eslint-error-rule-id\'>eslint(no-sequences)</span>">,</mark></span> <span class="token number">1</span><span class="token punctuation">;</span>',goodExample:'<span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>'},"no-setter-return":{name:"no-setter-return",value:"error",description:"禁止 setter 有返回值",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n        <mark class="eslint-error" data-tip="Setter cannot return a value.<br/><span class=\'eslint-error-rule-id\'>eslint(no-setter-return)</span>"><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>barValue<span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-shadow":{name:"no-shadow",value:"off",description:"禁止变量名与上层作用域内的已定义的变量重复",category:"",badExample:"",goodExample:"",reason:"很多时候函数的形参和传参是同名的"},"no-shadow-restricted-names":{name:"no-shadow-restricted-names",value:"error",description:"禁止使用保留字作为变量名",category:"",badExample:'<span class="token keyword">const</span> <span class="token keyword"><mark class="eslint-error" data-tip="Shadowing of global property &amp;apos;undefined&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-shadow-restricted-names)</span>">undefined</mark></span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number"><mark class="eslint-error" data-tip="Shadowing of global property &amp;apos;NaN&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-shadow-restricted-names)</span>">NaN</mark></span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function"><mark class="eslint-error" data-tip="Shadowing of global property &amp;apos;Infinity&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-shadow-restricted-names)</span>">Infinity</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-sparse-arrays":{name:"no-sparse-arrays",value:"error",description:"禁止在数组中出现连续的逗号",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Unexpected comma in middle of array.<br/><span class=\'eslint-error-rule-id\'>eslint(no-sparse-arrays)</span>"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},"no-sync":{name:"no-sync",value:"off",description:"禁止使用 node 中的同步的方法，比如 fs.readFileSync",category:"",badExample:"",goodExample:""},"no-template-curly-in-string":{name:"no-template-curly-in-string",value:"error",description:"禁止在普通字符串中出现模版字符串里的变量形式",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string"><mark class="eslint-error" data-tip="Unexpected template string expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-template-curly-in-string)</span>">\'Hello ${bar}\'</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'Hello {bar}\'</span><span class="token punctuation">;</span>'},"no-ternary":{name:"no-ternary",value:"off",description:"禁止使用三元表达式",category:"",badExample:"",goodExample:""},"no-this-before-super":{name:"no-this-before-super",value:"error",description:"禁止在 super 被调用之前使用 this 或 super",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword"><mark class="eslint-error" data-tip="&amp;apos;this&amp;apos; is not allowed before &amp;apos;super()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-this-before-super)</span>">this</mark></span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-throw-literal":{name:"no-throw-literal",value:"error",description:"禁止 throw 字面量，必须 throw 一个 Error 对象",category:"",badExample:'<mark class="eslint-error" data-tip="Expected an error object to be thrown.<br/><span class=\'eslint-error-rule-id\'>eslint(no-throw-literal)</span>"><span class="token keyword">throw</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an error object to be thrown.<br/><span class=\'eslint-error-rule-id\'>eslint(no-throw-literal)</span>"><span class="token keyword">throw</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-undef":{name:"no-undef",value:"error",description:"禁止使用未定义的变量",category:"",badExample:'<span class="token function"><mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is not defined.<br/><span class=\'eslint-error-rule-id\'>esli<mark class="eslint-error" data-tip="&amp;apos;bar&amp;apos; is not defined.<br/><span class=\'eslint-error-rule-id\'>eslint(no-undef)</span>">nt(</mark>no-undef)</span>">foo</mark></span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> baz <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-undef-init":{name:"no-undef-init",value:"error",description:"禁止将 undefined 赋值给变量",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="It&amp;apos;s not necessary to initialize &amp;apos;foo&amp;apos; to undefined.<br/><span class=\'eslint-error-rule-id\'>eslint(no-undef-init)</span>">foo <span class="token operator">=</span> <span class="token keyword">undefined</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo<span class="token punctuation">;</span>'},"no-undefined":{name:"no-undefined",value:"off",description:"禁止使用 undefined",category:"",badExample:"",goodExample:""},"no-underscore-dangle":{name:"no-underscore-dangle",value:"off",description:"禁止变量名出现下划线",category:"",badExample:"",goodExample:""},"no-unmodified-loop-condition":{name:"no-unmodified-loop-condition",value:"error",description:"循环内必须对循环条件中的变量有修改",category:"",badExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is not modified in this loop.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unmodified-loop-condition)</span>">foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    foo<span class="token operator">--</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-unneeded-ternary":{name:"no-unneeded-ternary",value:"off",description:"必须使用 !a 替代 a ? false : true",category:"",badExample:"",goodExample:"",reason:"后者表达的更清晰"},"no-unreachable":{name:"no-unreachable",value:"error",description:"禁止在 return, throw, break 或 continue 之后还有代码",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Unreachable code.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unreachable)</span>"><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token comment">// const bar = 1;</span>\n<span class="token punctuation">}</span>'},"no-unsafe-finally":{name:"no-unsafe-finally",value:"error",description:"禁止在 finally 中出现 return, throw, break 或 continue",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token comment">// finally 会在 try 之前执行，故会 return 2</span>\n        <mark class="eslint-error" data-tip="Unsafe usage of ReturnStatement.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unsafe-finally)</span>"><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"finally 中的语句会在 try 之前执行"},"no-unsafe-negation":{name:"no-unsafe-negation",value:"error",description:"禁止在 in 或 instanceof 操作符的左侧变量前使用感叹号",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Unexpected negating the left operand of &amp;apos;in&amp;apos; operator.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unsafe-negation)</span>"><span class="token operator">!</span>key</mark> <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Unexpected negating the left operand of &amp;apos;instanceof&amp;apos; operator.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unsafe-negation)</span>"><span class="token operator">!</span>obj</mark> <span class="token keyword">instanceof</span> <span class="token class-name">SomeClass</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">SomeClass</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-unused-expressions":{name:"no-unused-expressions",value:["error",{allowShortCircuit:!0,allowTernary:!0,allowTaggedTemplates:!0}],description:"禁止无用的表达式",category:"",badExample:'<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>"><span class="token number">1</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>">foo<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>"><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>">foo <span class="token operator">&amp;&amp;</span> bar<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>">foo <span class="token operator">||</span> bar<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>">foo <span class="token operator">?</span> bar <span class="token punctuation">:</span> baz<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-expressions)</span>"><span class="token template-string"><span class="token string">`bar`</span></span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token string">\'use strict\'</span><span class="token punctuation">;</span>\nfoo <span class="token operator">&amp;&amp;</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">||</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">?</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo<span class="token template-string"><span class="token string">`bar`</span></span><span class="token punctuation">;</span>'},"no-unused-labels":{name:"no-unused-labels",value:"off",description:"禁止出现没用到的 label",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-unused-vars":{name:"no-unused-vars",value:["error",{vars:"all",args:"none",ignoreRestSiblings:!1,caughtErrors:"none"}],description:"已定义的变量必须使用",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; is assigned a value but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-vars)</span>">foo</mark> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function"><mark class="eslint-error" data-tip="&amp;apos;bar&amp;apos; is defined but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-vars)</span>">bar</mark></span><span class="token punctuation">(</span><span class="token parameter">baz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="&amp;apos;baz&amp;apos; is assigned a value but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(n<mark class="eslint-error" data-tip="&amp;apos;rest&amp;apos; is assigned a value but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-vars)</span>">o-un</mark>used-vars)</span>">baz</mark><span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">baz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> baz<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> rest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-use-before-define":{name:"no-use-before-define",value:["error",{variables:!1,functions:!1,classes:!1}],description:"变量必须先定义后使用",category:"",badExample:'console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="&amp;apos;foo&amp;apos; was used before it was defined.<br/><span class=\'eslint-error-rule-id\'>eslint(no-use-before-define)</span>">foo</mark><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="&amp;apos;Baz&amp;apos; was used before it was defined.<br/><span class=\'eslint-error-rule-id\'>eslint(no-use-before-define)</span>">Baz</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">new</span> <span class="token class-name">Baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">new</span> <span class="token class-name">Baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-useless-call":{name:"no-useless-call",value:"error",description:"禁止出现没必要的 call 或 apply",category:"",badExample:'<mark class="eslint-error" data-tip="unnecessary &amp;apos;.call()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-call)</span>"><span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// foo(1, 2, 3)</span>\n<mark class="eslint-error" data-tip="unnecessary &amp;apos;.apply()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-call)</span>"><span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// foo(1, 2, 3)</span>\n\n<mark class="eslint-error" data-tip="unnecessary &amp;apos;.call()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-call)</span>">foo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// foo.bar(1, 2, 3);</span>\n<mark class="eslint-error" data-tip="unnecessary &amp;apos;.apply()&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-call)</span>">foo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// foo.bar(1, 2, 3);</span>',goodExample:'<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-useless-catch":{name:"no-useless-catch",value:"error",description:"禁止在 catch 中仅仅只是把错误 throw 出去",category:"",badExample:'<mark class="eslint-error" data-tip="Unnecessary try/catch wrapper.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-catch)</span>"><span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingBeforeRethrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">throw</span> e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"这样的 catch 是没有意义的，等价于直接执行 try 里的代码"},"no-useless-computed-key":{name:"no-useless-computed-key",value:"error",description:"禁止出现没必要的计算键名",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Unnecessarily computed property [&amp;apos;1&amp;apos;] found.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-computed-key)</span>"><span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span></mark><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="Unnecessarily computed property [&amp;apos;bar&amp;apos;] found.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-computed-key)</span>"><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">\'bar\'</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    bar<span class="token punctuation">:</span> <span class="token string">\'bar\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-useless-concat":{name:"no-useless-concat",value:"error",description:"禁止出现没必要的字符串连接",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'f\'</span> <span class="token operator"><mark class="eslint-error" data-tip="Unexpected string concatenation of literals.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-concat)</span>">+</mark></span> <span class="token string">\'oo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token template-string"><span class="token string">`b`</span></span> <span class="token operator"><mark class="eslint-error" data-tip="Unexpected string concatenation of literals.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-concat)</span>">+</mark></span> <span class="token template-string"><span class="token string">`ar`</span></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'fo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token template-string"><span class="token string">`ar`</span></span><span class="token punctuation">;</span>'},"no-useless-constructor":{name:"no-useless-constructor",value:"error",description:"禁止出现没必要的 constructor",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-constructor)</span>"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-constructor)</span>"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-useless-escape":{name:"no-useless-escape",value:"off",description:"禁止出现没必要的转义",category:"",badExample:"",goodExample:"",reason:"转义可以使代码更易懂"},"no-useless-rename":{name:"no-useless-rename",value:"error",description:"禁止解构赋值时出现同样名字的的重命名，比如 let { foo: foo } = bar;",category:"",badExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="Import foo unnecessarily renamed.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-rename)</span>">foo <span class="token keyword">as</span> foo</mark> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="Export bar unnecessarily renamed.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-rename)</span>">bar <span class="token keyword">as</span> bar</mark> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="Destructuring assignment baz unnecessarily renamed.<br/><span class=\'eslint-error-rule-id\'>eslint(no-useless-rename)</span>">baz<span class="token punctuation">:</span> baz</mark> <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> baz <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>'},"no-useless-return":{name:"no-useless-return",value:"off",description:"禁止没必要的 return",category:"",badExample:"",goodExample:""},"no-var":{name:"no-var",value:"error",description:"禁止使用 var",category:"",badExample:'<mark class="eslint-error" data-tip="Unexpected var, use let or const instead.<br/><span class=\'eslint-error-rule-id\'>eslint(no-var)</span>"><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>'},"no-void":{name:"no-void",value:"error",description:"禁止使用 void",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Expected &amp;apos;undefined&amp;apos; and instead saw &amp;apos;void&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(no-void)</span>"><span class="token keyword">void</span> <span class="token number">0</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-warning-comments":{name:"no-warning-comments",value:"off",description:"禁止注释中出现 TODO 和 FIXME",category:"",badExample:"",goodExample:""},"no-with":{name:"no-with",value:"off",description:"禁止使用 with",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"object-shorthand":{name:"object-shorthand",value:"off",description:"必须使用 a = {b} 而不是 a = {b: b}",category:"",badExample:"",goodExample:"",reason:"有时后者可以使代码结构更清晰"},"one-var":{name:"one-var",value:["error","never"],description:"禁止变量申明时用逗号一次申明多个",category:"",badExample:'<mark class="eslint-error" data-tip="Split &amp;apos;let&amp;apos; declarations into multiple statements.<br/><span class=\'eslint-error-rule-id\'>eslint(one-var)</span>"><span class="token keyword">let</span> foo<span class="token punctuation">,</span> bar<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Split &amp;apos;const&amp;apos; declarations into multiple statements.<br/><span class=\'eslint-error-rule-id\'>eslint(one-var)</span>"><span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    qux <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">let</span> foo<span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar<span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> qux <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>'},"operator-assignment":{name:"operator-assignment",value:"off",description:"必须使用 x = x + y 而不是 x += y",category:"",badExample:"",goodExample:""},"padding-line-between-statements":{name:"padding-line-between-statements",value:"off",description:"限制语句之间的空行规则，比如变量定义完之后必须要空行",category:"",badExample:"",goodExample:""},"prefer-const":{name:"prefer-const",value:"off",description:"申明后不再被修改的变量必须使用 const 来申明",category:"",badExample:"",goodExample:""},"prefer-destructuring":{name:"prefer-destructuring",value:"off",description:"必须使用解构赋值",category:"",badExample:"",goodExample:""},"prefer-exponentiation-operator":{name:"prefer-exponentiation-operator",value:"off",description:"使用 ES2016 的语法 ** 替代 Math.pow",category:"",badExample:"",goodExample:""},"prefer-named-capture-group":{name:"prefer-named-capture-group",value:"off",description:"使用 ES2018 中的正则表达式命名组",category:"",badExample:"",goodExample:"",reason:"正则表达式已经较难理解了，没必要强制加上命名组"},"prefer-numeric-literals":{name:"prefer-numeric-literals",value:"off",description:"必须使用 0b11111011 而不是 parseInt()",category:"",badExample:"",goodExample:""},"prefer-object-spread":{name:"prefer-object-spread",value:"error",description:"必须使用 ... 而不是 Object.assign，除非 Object.assign 的第一个参数是一个变量",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use an object spread instead of `Object.assign` eg: `{ ...foo }`.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-object-spread)</span>">Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bar<span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>bar <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第一个参数为变量时允许使用 Object.assign</span>\nObject<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> baz<span class="token punctuation">)</span><span class="token punctuation">;</span>'},"prefer-promise-reject-errors":{name:"prefer-promise-reject-errors",value:"error",description:"Promise 的 reject 中必须传入 Error 对象，而不是字面量",category:"",badExample:'<mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-promise-reject-errors)</span>">Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-promise-reject-errors)</span>"><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-promise-reject-errors)</span>"><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"prefer-regex-literals":{name:"prefer-regex-literals",value:"error",description:"优先使用正则表达式字面量，而不是 RegExp 构造函数",category:"",badExample:'<mark class="eslint-error" data-tip="Use a regular expression literal instead of the &amp;apos;RegExp&amp;apos; constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-regex-literals)</span>"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Use a regular expression literal instead of the &amp;apos;RegExp&amp;apos; constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(prefer-regex-literals)</span>"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'\\\\.\'</span><span class="token punctuation">,</span> <span class="token string">\'g\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token regex">/abc/</span><span class="token punctuation">;</span>\n<span class="token regex">/\\./g</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">\'abc\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"prefer-rest-params":{name:"prefer-rest-params",value:"off",description:"必须使用 ...args 而不是 arguments",category:"",badExample:"",goodExample:""},"prefer-spread":{name:"prefer-spread",value:"off",description:"必须使用 ... 而不是 apply，比如 foo(...args)",category:"",badExample:"",goodExample:""},"prefer-template":{name:"prefer-template",value:"off",description:"必须使用模版字符串而不是字符串连接",category:"",badExample:"",goodExample:""},radix:{name:"radix",value:"error",description:"parseInt 必须传入第二个参数",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Missing radix parameter.<br/><span class=\'eslint-error-rule-id\'>eslint(radix)</span>"><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">\'071\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// 57</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">\'071\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 71</span>'},"require-atomic-updates":{name:"require-atomic-updates",value:"off",description:"禁止将 await 或 yield 的结果做为运算符的后面项",category:"",badExample:"",goodExample:"",reason:"这样会导致不符合预期的结果\nhttps://github.com/eslint/eslint/issues/11899\n在上面 issue 修复之前，关闭此规则"},"require-await":{name:"require-await",value:"off",description:"async 函数中必须存在 await 语句",category:"",badExample:"",goodExample:""},"require-unicode-regexp":{name:"require-unicode-regexp",value:"off",description:"正则表达式中必须要加上 u 标志",category:"",badExample:"",goodExample:""},"require-yield":{name:"require-yield",value:"error",description:"generator 函数内必须有 yield",category:"",badExample:'<mark class="eslint-error" data-tip="This generator function does not have &amp;apos;yield&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(require-yield)</span>"><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"sort-imports":{name:"sort-imports",value:"off",description:"导入必须按规则排序",category:"",badExample:"",goodExample:""},"sort-keys":{name:"sort-keys",value:"off",description:"对象字面量的键名必须排好序",category:"",badExample:"",goodExample:""},"sort-vars":{name:"sort-vars",value:"off",description:"变量申明必须排好序",category:"",badExample:"",goodExample:""},"spaced-comment":{name:"spaced-comment",value:["error","always",{block:{exceptions:["*"],balanced:!0}}],description:"注释的斜线或 * 后必须有空格",category:"",badExample:'<span class="token comment"><mark class="eslint-error" data-tip="Expected space or tab after &amp;apos;//&amp;apos; in comment.<br/><span class=\'eslint-error-rule-id\'>eslint(spaced-comment)</span>">//foo</mark></span>\n<span class="token comment"><mark class="eslint-error" data-tip="Expected exception block, space or tab after &amp;apos;/*&amp;apos; in comment.<br/><span class=\'eslint-error-rule-id\'>eslint(spaced-comment)</span>">/*bar */</mark></span>\n<span class="token comment"><mark class="eslint-error" data-tip="Expected exception block, space or tab after &amp;apos;/**&amp;apos; in comment.<br/><span class=\'eslint-error-rule-id\'>eslint(spaced-comment)</span>">/**baz */</mark></span>',goodExample:'<span class="token comment">// foo</span>\n<span class="token comment">/* bar */</span>\n<span class="token comment">/** baz */</span>'},strict:{name:"strict",value:["error","never"],description:"禁止使用 'strict';",category:"",badExample:'<mark class="eslint-error" data-tip="&amp;apos;use strict&amp;apos; is unnecessary inside of modules.<br/><span class=\'eslint-error-rule-id\'>eslint(strict)</span>"><span class="token string">\'use strict\'</span><span class="token punctuation">;</span></mark>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="&amp;apos;use strict&amp;apos; is unnecessary inside of modules.<br/><span class=\'eslint-error-rule-id\'>eslint(strict)</span>"><span class="token string">\'use strict\'</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"symbol-description":{name:"symbol-description",value:"error",description:"创建 Symbol 时必须传入参数",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Expected Symbol to have a description.<br/><span class=\'eslint-error-rule-id\'>eslint(symbol-description)</span>"><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"use-isnan":{name:"use-isnan",value:"error",description:"必须使用 isNaN(foo) 而不是 foo === NaN",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Use the isNaN function to compare with NaN.<br/><span class=\'eslint-error-rule-id\'>eslint(use-isnan)</span>">foo <span class="token operator">===</span> <span class="token number">NaN</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"valid-typeof":{name:"valid-typeof",value:"error",description:"typeof 表达式比较的对象必须是 'undefined', 'object', 'boolean', 'number', 'string', 'function', 'symbol', 或 'bigint'",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string"><mark class="eslint-error" data-tip="Invalid typeof comparison value.<br/><span class=\'eslint-error-rule-id\'>eslint(valid-typeof)</span>">\'numbe\'</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"vars-on-top":{name:"vars-on-top",value:"off",description:"var 必须在作用域的最前面",category:"",badExample:"",goodExample:""},yoda:{name:"yoda",value:["error","never",{onlyEquality:!0}],description:"必须使用 if (foo === 5) 而不是 if (5 === foo)",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Expected literal to be on the right side of ===.<br/><span class=\'eslint-error-rule-id\'>eslint(yoda)</span>"><span class="token number">1</span> <span class="token operator">===</span> foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;</span> foo <span class="token operator">&amp;&amp;</span> foo <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'}};
},{}],"Ke6N":[function(require,module,exports) {
module.exports={"react/boolean-prop-naming":{name:"react/boolean-prop-naming",value:"off",description:"布尔值类型的 propTypes 的 name 必须为 is 或 has 开头",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/button-has-type":{name:"react/button-has-type",value:"off",description:"<button> 必须有 type 属性",category:"",badExample:"",goodExample:""},"react/default-props-match-prop-types":{name:"react/default-props-match-prop-types",value:"off",description:"一个 defaultProps 必须有对应的 propTypes",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/destructuring-assignment":{name:"react/destructuring-assignment",value:"off",description:"props, state, context 必须用解构赋值",category:"",badExample:"",goodExample:""},"react/display-name":{name:"react/display-name",value:"off",description:"组件必须有 displayName 属性",category:"",badExample:"",goodExample:"",reason:"不强制要求写 displayName"},"react/forbid-component-props":{name:"react/forbid-component-props",value:"off",description:"禁止在自定义组件中使用指定的 props",category:"",badExample:"",goodExample:""},"react/forbid-dom-props":{name:"react/forbid-dom-props",value:"off",description:"禁止在 dom 组件中使用指定的 props",category:"",badExample:"",goodExample:""},"react/forbid-elements":{name:"react/forbid-elements",value:"off",description:"禁止使用指定的组件",category:"",badExample:"",goodExample:""},"react/forbid-foreign-prop-types":{name:"react/forbid-foreign-prop-types",value:"off",description:"禁止使用另一个组件的 propTypes",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/forbid-prop-types":{name:"react/forbid-prop-types",value:"off",description:"禁止使用 PropTypes.any PropTypes.array 和 PropTypes.object",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/function-component-definition":{name:"react/function-component-definition",value:"off",description:"限制函数式组件的函数形式（函数声明、函数表达式或箭头函数）",category:"",badExample:"",goodExample:"",reason:"一些场景还不能覆盖，如 export default function，自动修复功能在 ts 中有些问题"},"react/jsx-boolean-value":{name:"react/jsx-boolean-value",value:"off",description:"布尔值的属性必须显式的声明值为 true",category:"",badExample:"",goodExample:""},"react/jsx-curly-brace-presence":{name:"react/jsx-curly-brace-presence",value:["error","never"],description:"禁止 jsx 中使用无用的引号",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token attr-name">prop</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><mark class="eslint-error" data-tip="Curly braces are unnecessary here.<br/><span class=\'eslint-error-rule-id\'>eslint(r<mark class="eslint-error" data-tip="Curly braces are unnecessary here.<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-curly-brace-presence)</span>">eact/jsx-curly-</mark>brace-presence)</span>"><span class="token punctuation">{</span><span class="token string">\'foo\'</span><span class="token punctuation">}</span></mark></span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token string">\'Hello World\'</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">App</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">App</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/jsx-filename-extension":{name:"react/jsx-filename-extension",value:"off",description:"限制文件后缀",category:"",badExample:"",goodExample:""},"react/jsx-fragments":{name:"react/jsx-fragments",value:["error","syntax"],description:"必须使用 <></> 而不是 React.Fragment",category:"",badExample:'<mark class="eslint-error" data-tip="Prefer fragment shorthand over React.Fragment<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-fragments)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',reason:"<></> 不需要额外引入 Fragment 组件"},"react/jsx-handler-names":{name:"react/jsx-handler-names",value:"off",description:"handler 的名称必须是 onXXX 或 handleXXX",category:"",badExample:"",goodExample:""},"react/jsx-key":{name:"react/jsx-key",value:["error",{checkFragmentShorthand:!0}],description:"数组中的 jsx 必须有 key",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <mark class="eslint-error" data-tip="Missing &amp;quot;key&amp;quot; prop for element in iterator<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-key)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span></mark>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <mark class="eslint-error" data-tip="Missing &amp;quot;key&amp;quot; prop for element in iterator. Shorthand fragment syntax does not support providing keys. Use React.Fragment instead<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-key)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span></mark>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/jsx-max-depth":{name:"react/jsx-max-depth",value:"off",description:"限制 jsx 层级",category:"",badExample:"",goodExample:""},"react/jsx-no-bind":{name:"react/jsx-no-bind",value:"off",description:"jsx 中禁止使用 bind",category:"",badExample:"",goodExample:""},"react/jsx-no-comment-textnodes":{name:"react/jsx-no-comment-textnodes",value:"error",description:"禁止在 jsx 中使用像注释的字符串",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text"><mark class="eslint-error" data-tip="Comments inside children section of tag should be placed inside braces<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-comment-textnodes)</span>">// empty div</mark>&lt;/div>;\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text"><mark class="eslint-error" data-tip="Comments inside children section of tag should be placed inside braces<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-comment-textnodes)</span>">/* empty div */</mark></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">;\n</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token comment">/* empty div */</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token operator">&lt;</span>div <span class="token comment">/* empty div */</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>'},"react/jsx-no-duplicate-props":{name:"react/jsx-no-duplicate-props",value:"error",description:"禁止出现重复的 props",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="No duplicate props allowed<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-duplicate-props)</span>"><span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/jsx-no-literals":{name:"react/jsx-no-literals",value:"off",description:"禁止在 jsx 中出现字符串",category:"",badExample:"",goodExample:""},"react/jsx-no-script-url":{name:"react/jsx-no-script-url",value:"error",description:'禁止出现 href="javascript:void(0)"',category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <mark class="eslint-error" data-tip="A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML, try using dangerouslySetInnerHTML instead.<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-script-url)</span>"><span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:void(0);<span class="token punctuation">"</span></span></mark><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>\n    <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span>\n    <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',reason:"React 已经有 warning 了，并且会在将来禁止此类属性值"},"react/jsx-no-target-blank":{name:"react/jsx-no-target-blank",value:"off",description:'禁止使用 target="_blank"',category:"",badExample:"",goodExample:""},"react/jsx-no-undef":{name:"react/jsx-no-undef",value:"error",description:"禁止使用未定义的组件",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name"><mark class="eslint-error" data-tip="&amp;apos;Foo&amp;apos; is not defined.<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-undef)</span>">Foo</mark></span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'./Foo\'</span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/jsx-no-useless-fragment":{name:"react/jsx-no-useless-fragment",value:"error",description:"禁止无意义的 Fragment 组件",category:"",badExample:'<mark class="eslint-error" data-tip="Fragments should contain more than one child - otherwise, there‘s no need for a Fragment at all.<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-useless-fragment)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Fragments should contain more than one child - otherwise, there‘s no need for a Fragment at all.<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-no-useless-fragment)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span><span class="token plain-text">foo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">React.Fragment</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">React.Fragment</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/jsx-pascal-case":{name:"react/jsx-pascal-case",value:"error",description:"组件的名称必须符合 PascalCase",category:"",badExample:'<span class="token tag"><mark class="eslint-error" data-tip="Imported JSX component FOO must be in PascalCase<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-pascal-case)</span>"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FOO</span></span> <span class="token punctuation">/></span></mark></span><span class="token punctuation">;</span>\n<span class="token tag"><mark class="eslint-error" data-tip="Imported JSX component FOO_BAR must be in PascalCase<br/><span class=\'eslint-error-rule-id\'>eslint(react/jsx-pascal-case)</span>"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FOO_BAR</span></span> <span class="token punctuation">/></span></mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FooBar</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/jsx-props-no-spreading":{name:"react/jsx-props-no-spreading",value:"off",description:"禁止使用 {...props}",category:"",badExample:"",goodExample:""},"react/jsx-sort-default-props":{name:"react/jsx-sort-default-props",value:"off",description:"defaultProps 必须按字母排序",category:"",badExample:"",goodExample:""},"react/jsx-sort-props":{name:"react/jsx-sort-props",value:"off",description:"props 必须按字母排序",category:"",badExample:"",goodExample:""},"react/jsx-uses-react":{name:"react/jsx-uses-react",value:"error",description:"修复 React 被误报为未使用的变量的问题（仅在开启 no-unused-vars 时有效）",category:"",badExample:'<span class="token comment">/* eslint no-unused-vars: "error", react/jsx-uses-react: "off" */</span>\n<span class="token keyword">import</span> <mark class="eslint-error" data-tip="&amp;apos;React&amp;apos; is defined but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-vars)</span>">React</mark> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token comment">/* eslint no-unused-vars: "error" */</span>\n<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/jsx-uses-vars":{name:"react/jsx-uses-vars",value:"error",description:"修复 no-unused-vars 不检查 jsx 的问题",category:"",badExample:'<span class="token comment">/* eslint no-unused-vars: "error", "react/jsx-uses-vars": "off" */</span>\n<span class="token keyword">import</span> <mark class="eslint-error" data-tip="&amp;apos;Foo&amp;apos; is defined but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(no-unused-vars)</span>">Foo</mark> <span class="token keyword">from</span> <span class="token string">\'./Foo\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token comment">/* eslint no-unused-vars: "error" */</span>\n<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'./Foo\'</span><span class="token punctuation">;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/no-access-state-in-setstate":{name:"react/no-access-state-in-setstate",value:"off",description:"禁止在 setState 中使用 this.state",category:"",badExample:"",goodExample:""},"react/no-adjacent-inline-elements":{name:"react/no-adjacent-inline-elements",value:"off",description:"两个 inline 元素之间必须有空格，否则视觉上它们就贴在一起了",category:"",badExample:"",goodExample:"",reason:"这是样式的问题，不应该由空格约束"},"react/no-array-index-key":{name:"react/no-array-index-key",value:"off",description:"禁止使用数组的索引作为 key",category:"",badExample:"",goodExample:""},"react/no-children-prop":{name:"react/no-children-prop",value:"error",description:"禁止将 children 作为一个 prop",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="Do not pass children as props. Instead, nest children between the opening and closing tags.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-children-prop)</span>"><span class="token attr-name">children</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello World<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <mark class="eslint-error" data-tip="Do not pass children as props. Instead, nest children between the opening and closing tags.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-children-prop)</span>"><span class="token attr-name">children</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Bar</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span></mark> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Bar</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/no-danger":{name:"react/no-danger",value:"off",description:"禁止使用 dangerouslySetInnerHTML",category:"",badExample:"",goodExample:""},"react/no-danger-with-children":{name:"react/no-danger-with-children",value:"error",description:"禁止在使用了 dangerouslySetInnerHTML 的组件内添加 children",category:"",badExample:'<mark class="eslint-error" data-tip="Only set one of `children` or `props.dangerouslySetInnerHTML`<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-danger-with-children)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">dangerouslySetInnerHTML</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> __html<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">dangerouslySetInnerHTML</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> __html<span class="token punctuation">:</span> <span class="token string">\'Foo\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/no-deprecated":{name:"react/no-deprecated",value:"error",description:"禁止使用已废弃的 api",category:"",badExample:'<mark class="eslint-error" data-tip="React.render is deprecated since React 0.14.0, use ReactDOM.render instead<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-deprecated)</span>">React<span class="token punctuation">.</span><span class="token function">render</span></mark><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function"><mark class="eslint-error" data-tip="componentWillMount is deprecated since React 16.9.0, use UNSAFE_componentWillMount instead, see https://reactjs.org/docs/react-component.html#unsafe_componentwillmount. Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-deprecated)</span>">componentWillMount</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function"><mark class="eslint-error" data-tip="componentWillReceiveProps is deprecated since React 16.9.0, use UNSAFE_componentWillReceiveProps instead, see https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops. Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-deprecated)</span>">componentWillReceiveProps</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function"><mark class="eslint-error" data-tip="componentWillUpdate is deprecated since React 16.9.0, use UNSAFE_componentWillUpdate instead, see https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate. Use https://github.com/reactjs/react-codemod#rename-unsafe-lifecycles to automatically update your components.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-deprecated)</span>">componentWillUpdate</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"react/no-did-mount-set-state":{name:"react/no-did-mount-set-state",value:"off",description:"禁止在 componentDidMount 里使用 setState",category:"",badExample:"",goodExample:"",reason:"同构应用需要在 didMount 里使用 setState"},"react/no-did-update-set-state":{name:"react/no-did-update-set-state",value:"error",description:"禁止在 componentDidUpdate 里使用 setState",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Do not use setState in componentDidUpdate<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-did-update-set-state)</span>"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span></mark><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/no-direct-mutation-state":{name:"react/no-direct-mutation-state",value:"error",description:"禁止直接修改 this.state",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Do not mutate state directly. Use setState().<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-direct-mutation-state)</span>"><span class="token keyword">this</span><span class="token punctuation">.</span>state</mark><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n            name<span class="token punctuation">:</span> <span class="token string">\'foo\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/no-find-dom-node":{name:"react/no-find-dom-node",value:"error",description:"禁止使用 findDOMNode",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function"><mark class="eslint-error" data-tip="Do not use findDOMNode<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-find-dom-node)</span>">findDOMNode</mark></span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>myRef <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>myRef<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/no-is-mounted":{name:"react/no-is-mounted",value:"error",description:"禁止使用 isMounted",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Do not use isMounted<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-is-mounted)</span>"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isMounted</span></mark><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">updateName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"它是已废弃的语法"},"react/no-multi-comp":{name:"react/no-multi-comp",value:"off",description:"禁止在一个文件创建两个组件",category:"",badExample:"",goodExample:"",reason:"有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181"},"react/no-redundant-should-component-update":{name:"react/no-redundant-should-component-update",value:"error",description:"禁止在 React.PureComponent 中使用 shouldComponentUpdate",category:"",badExample:'<mark class="eslint-error" data-tip="Foo does not need shouldComponentUpdate when extending React.PureComponent.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-redundant-should-component-update)</span>"><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>PureComponent</span> <span class="token punctuation">{</span>\n    <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/no-render-return-value":{name:"react/no-render-return-value",value:"error",description:"禁止使用 ReactDOM.render 的返回值",category:"",badExample:'<span class="token keyword">const</span> app <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not depend on the return value from ReactDOM.render<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-render-return-value)</span>">ReactDOM<span class="token punctuation">.</span><span class="token function">render</span></mark><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">App</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"react/no-set-state":{name:"react/no-set-state",value:"off",description:"禁止使用 setState",category:"",badExample:"",goodExample:""},"react/no-string-refs":{name:"react/no-string-refs",value:"error",description:"禁止使用字符串 ref",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>refs<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="Using string literals in ref attributes is deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-string-refs)</span>"><span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>foo<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"react/no-this-in-sfc":{name:"react/no-this-in-sfc",value:"error",description:"禁止在函数组件中使用 this",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><mark class="eslint-error" data-tip="Stateless functional components should not use this<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-this-in-sfc)</span>"><span class="token keyword">this</span><span class="token punctuation">.</span>props</mark><span class="token punctuation">.</span>foo<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>foo<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"react/no-typos":{name:"react/no-typos",value:"error",description:"禁止组件的属性或生命周期大小写错误",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> <mark class="eslint-error" data-tip="Typo in static class property declaration<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-typos)</span>">defaultprops</mark> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Typo in component lifecycle method declaration: componentdidupdate should be componentDidUpdate<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-typos)</span>"><span class="token function">componentdidupdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/no-unescaped-entities":{name:"react/no-unescaped-entities",value:"error",description:"禁止在组件的内部存在未转义的 >, \", ' 或 }",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hel<mark class="eslint-error" data-tip="`&amp;gt;` can be escaped with `&amp;amp;gt;`.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-unescaped-entities)</span>">></mark>lo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token plain-text">Hel&amp;gt;lo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'},"react/no-unknown-property":{name:"react/no-unknown-property",value:"error",description:"禁止出现 HTML 中的属性，如 class",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="Unknown property &amp;apos;class&amp;apos; found, use &amp;apos;className&amp;apos; instead<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-unknown-property)</span>"><span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/no-unsafe":{name:"react/no-unsafe",value:["error",{checkAliases:!0}],description:"禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate",category:"",badExample:'<mark class="eslint-error" data-tip="componentWillMount is unsafe for use in async rendering. Update the component to use componentDidMount instead. See https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html.<br/><mark class="eslint-error" data-tip="UNSAFE_componentWillMount is unsafe for use in async rendering. Update the component to use componentDidMount instead. See https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html.<br/><span class=\'eslint-error-rule-id\'>eslint(react/no-unsafe)</span>"><span class=\'eslint-error-rule-id\'>eslint(react/no-unsafe)</span>"><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">UNSAFE_componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span></mark></mark>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"react/no-unused-prop-types":{name:"react/no-unused-prop-types",value:"off",description:"禁止出现未使用的 propTypes",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/no-unused-state":{name:"react/no-unused-state",value:"off",description:"已定义的 state 必须使用",category:"",badExample:"",goodExample:"",reason:"没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93"},"react/no-will-update-set-state":{name:"react/no-will-update-set-state",value:"off",description:"禁止在 componentWillUpdate 中使用 setState",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 componentWillUpdate 了"},"react/prefer-es6-class":{name:"react/prefer-es6-class",value:["error","always"],description:"必须使用 Class 的形式创建组件",category:"",badExample:'<span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token function">createReactClass</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Component should use es6 class instead of createClass<br/><span class=\'eslint-error-rule-id\'>eslint(react/prefer-es6-class)</span>"><span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></mark><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/prefer-read-only-props":{name:"react/prefer-read-only-props",value:"off",description:"使用 Flow 时，props 必须设置为只读的",category:"",badExample:"",goodExample:""},"react/prefer-stateless-function":{name:"react/prefer-stateless-function",value:"off",description:"必须使用函数式组件",category:"",badExample:"",goodExample:""},"react/prop-types":{name:"react/prop-types",value:"off",description:"组件必须写 propTypes",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/react-in-jsx-scope":{name:"react/react-in-jsx-scope",value:"off",description:"出现 jsx 的地方必须导入 React",category:"",badExample:"",goodExample:"",reason:"已经在 no-undef 中限制了"},"react/require-default-props":{name:"react/require-default-props",value:"off",description:"非 required 的 prop 必须有 defaultProps",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/require-optimization":{name:"react/require-optimization",value:"off",description:"组件必须有 shouldComponentUpdate",category:"",badExample:"",goodExample:""},"react/require-render-return":{name:"react/require-render-return",value:"error",description:"render 方法中必须有返回值",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Your render method should have return statement<br/><span class=\'eslint-error-rule-id\'>eslint(react/require-render-return)</span>"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/self-closing-comp":{name:"react/self-closing-comp",value:"error",description:"组件内没有 children 时，必须使用自闭和写法",category:"",badExample:'<span class="token tag"><mark class="eslint-error" data-tip="Empty components are self-closing<br/><span class=\'eslint-error-rule-id\'>eslint(react/self-closing-comp)</span>"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></mark></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><mark class="eslint-error" data-tip="Empty components are self-closing<br/><span class=\'eslint-error-rule-id\'>eslint(react/self-closing-comp)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></mark></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token plain-text">Not empty</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Foo</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">Not empty</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Bar</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/sort-comp":{name:"react/sort-comp",value:"error",description:"组件内方法必须按照一定规则排序",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="render should be placed after componentWillUnmount<br/><span class=\'eslint-error-rule-id\'>eslint(react/sort-comp)</span>"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="constructor should be placed after defaultProps<br/><span class=\'eslint-error-rule-id\'>eslint(react/sort-comp)</span>"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"react/sort-prop-types":{name:"react/sort-prop-types",value:"off",description:"propTypes 的属性必须按照字母排序",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"react/state-in-constructor":{name:"react/state-in-constructor",value:"off",description:"必须在构造函数中初始化 state",category:"",badExample:"",goodExample:""},"react/static-property-placement":{name:"react/static-property-placement",value:"error",description:"类的静态属性必须使用 static 关键字定义",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<mark class="eslint-error" data-tip="&amp;apos;defaultProps&amp;apos; should be declared as a static class property.<br/><span class=\'eslint-error-rule-id\'>eslint(react/static-property-placement)</span>">Foo<span class="token punctuation">.</span>defaultProps</mark> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>\n    <span class="token keyword">static</span> defaultProps <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"react/style-prop-object":{name:"react/style-prop-object",value:"error",description:"style 属性的取值必须是 object",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> </span><mark class="eslint-error" data-tip="Style prop value must be an object<br/><span class=\'eslint-error-rule-id\'>eslint(react/style-prop-object)</span>"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token string">\'red\'</span></span><span class="token punctuation">"</span></mark></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color<span class="token punctuation">:</span> <span class="token string">\'red\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>'},"react/void-dom-elements-no-children":{name:"react/void-dom-elements-no-children",value:"error",description:"img, br 标签中禁止有 children",category:"",badExample:'<mark class="eslint-error" data-tip="Void DOM element &amp;lt;img /&amp;gt; cannot receive children.<br/><span class=\'eslint-error-rule-id\'>eslint(react/void-dom-elements-no-children)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token punctuation">></span></span><span class="token plain-text">foo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Void DOM element &amp;lt;br /&amp;gt; cannot receive children.<br/><span class=\'eslint-error-rule-id\'>eslint(react/void-dom-elements-no-children)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token plain-text">bar</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>br</span><span class="token punctuation">></span></span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token plain-text">foo</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>'}};
},{}],"Gkzn":[function(require,module,exports) {
module.exports={"vue/attribute-hyphenation":{name:"vue/attribute-hyphenation",value:"off",description:"限制自定义组件的属性风格",category:"",badExample:"",goodExample:""},"vue/attributes-order":{name:"vue/attributes-order",value:"error",description:"标签属性必须按规则排序",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span>\n        <mark class="eslint-error" data-tip="Attribute &amp;quot;v-for&amp;quot; should go before &amp;quot;ref&amp;quot;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/attributes-order)</span>"><span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span></mark>\n        <span class="token attr-name"><mark class="eslint-error" data-tip="Attribute &amp;quot;v-once&amp;quot; should go before &amp;quot;ref&amp;quot;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/attributes-order)</span>">v-once</mark></span>\n        <mark class="eslint-error" data-tip="Attribute &amp;quot;id&amp;quot; should go before &amp;quot;ref&amp;quot;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/attributes-order)</span>"><span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uniqueID<span class="token punctuation">"</span></span></mark>\n        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>headerData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">my-prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prop<span class="token punctuation">"</span></span>\n        <mark class="eslint-error" data-tip="Attribute &amp;quot;v-if&amp;quot; should go before &amp;quot;my-prop&amp;quot;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/attributes-order)</span>"><span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!visible<span class="token punctuation">"</span></span></mark>\n        <mark class="eslint-error" data-tip="Attribute &amp;quot;is&amp;quot; should go before &amp;quot;my-prop&amp;quot;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/attributes-order)</span>"><span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span></mark>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>functionCall<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textContent<span class="token punctuation">"</span></span>\n    <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!visible<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-once</span>\n        <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uniqueID<span class="token punctuation">"</span></span>\n        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>headerData<span class="token punctuation">"</span></span>\n        <span class="token attr-name">my-prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prop<span class="token punctuation">"</span></span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>functionCall<span class="token punctuation">"</span></span>\n        <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textContent<span class="token punctuation">"</span></span>\n    <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/camelcase":{name:"vue/camelcase",value:"off",description:"变量名必须是 camelcase 风格的",category:"",badExample:"",goodExample:"",reason:"很多 api 或文件名都不是 camelcase 风格的"},"vue/comment-directive":{name:"vue/comment-directive",value:"error",description:"支持在模版中使用 eslint-disable-next-line 等注释",category:"",badExample:"",goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!-- eslint-disable-next-line vue/eqeqeq --\x3e</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:attr</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo == 1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/component-definition-name-casing":{name:"vue/component-definition-name-casing",value:["error","PascalCase"],description:"组件的 name 属性必须符合 PascalCase",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string"><mark class="eslint-error" data-tip="Property name &amp;quot;foo-bar&amp;quot; is not PascalCase.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/component-definition-name-casing)</span>">\'foo-bar\'</mark></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'FooBar\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',reason:"这是官方建议的规范"},"vue/component-name-in-template-casing":{name:"vue/component-name-in-template-casing",value:"off",description:"限制组件名的风格",category:"",badExample:"",goodExample:""},"vue/component-tags-order":{name:"vue/component-tags-order",value:["error",{order:["script","template","style"]}],description:"组件中必须按照 <script>, <template>, <style> 排序",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>\n<mark class="eslint-error" data-tip="The &amp;lt;script&amp;gt; should be above the &amp;lt;style&amp;gt; on line 1.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/component-tags-order)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></mark>\n<mark class="eslint-error" data-tip="The &amp;lt;template&amp;gt; should be above the &amp;lt;style&amp;gt; on line 1.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/component-tags-order)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span></mark>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>',reason:"这是官方建议的顺序"},"vue/eqeqeq":{name:"vue/eqeqeq",value:["error","always"],description:"必须使用 === 或 !==，禁止使用 == 或 !=",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:attr</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo <mark class="eslint-error" data-tip="Expected &amp;apos;===&amp;apos; and instead saw &amp;apos;==&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/eqeqeq)</span>">==</mark> 1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:attr</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo === 1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/jsx-uses-vars":{name:"vue/jsx-uses-vars",value:"error",description:"修复 no-unused-vars 不检查 jsx 的问题",category:"",badExample:"",goodExample:""},"vue/match-component-file-name":{name:"vue/match-component-file-name",value:"off",description:"组件名称必须和文件名一致",category:"",badExample:"",goodExample:""},"vue/name-property-casing":{name:"vue/name-property-casing",value:"off",description:"限制组件的 name 属性的值的风格",category:"",badExample:"",goodExample:""},"vue/no-async-in-computed-properties":{name:"vue/no-async-in-computed-properties",value:"error",description:"计算属性禁止包含异步方法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function-variable function">foo</span><span class="token punctuation">:</span> <mark class="eslint-error" data-tip="Unexpected async function declaration in &amp;quot;foo&amp;quot; computed property.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-async-in-computed-properties)</span>"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Unexpected await operator in &amp;quot;foo&amp;quot; computed property.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-async-in-computed-properties)</span>"><span class="token keyword">await</span> <span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span></mark><span class="token punctuation">,</span>\n        <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Unexpected Promise object in &amp;quot;bar&amp;quot; computed property.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-async-in-computed-properties)</span>"><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <mark class="eslint-error" data-tip="Unexpected timed function in &amp;quot;baz&amp;quot; computed property.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-async-in-computed-properties)</span>"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">someFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/no-boolean-default":{name:"vue/no-boolean-default",value:"off",description:"禁止给布尔值 props 添加默认值",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"vue/no-deprecated-scope-attribute":{name:"vue/no-deprecated-scope-attribute",value:"error",description:"禁用已废弃的 scope 属性",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name"><mark class="eslint-error" data-tip="`scope` attributes are deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-deprecated-scope-attribute)</span>">scope</mark></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-deprecated-slot-attribute":{name:"vue/no-deprecated-slot-attribute",value:"error",description:"使用 v-slot 替代已废弃的 slot",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><mark class="eslint-error" data-tip="`slot` attributes are deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-deprecated-slot-attribute)</span>">slot</mark></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>name</span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-deprecated-slot-scope-attribute":{name:"vue/no-deprecated-slot-scope-attribute",value:"error",description:"禁用已废弃的 slot-scope",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><mark class="eslint-error" data-tip="`slot-scope` are deprecated.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-deprecated-slot-scope-attribute)</span>">slot-scope</mark></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListComponent</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            {{ props.title }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListComponent</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-dupe-keys":{name:"vue/no-dupe-keys",value:"error",description:"禁止重复的键名",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        foo<span class="token punctuation">:</span> String\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Duplicated key &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-dupe-keys)</span>">foo</mark><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Duplicated key &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-dupe-keys)</span>">foo</mark><span class="token punctuation">:</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function"><mark class="eslint-error" data-tip="Duplicated key &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-dupe-keys)</span>">foo</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        foo1<span class="token punctuation">:</span> String\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        foo2<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        foo3<span class="token punctuation">:</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">foo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/no-duplicate-attributes":{name:"vue/no-duplicate-attributes",value:["error",{allowCoexistClass:!1,allowCoexistStyle:!1}],description:"禁止出现重复的属性",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Duplicate attribute &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-duplicate-attributes)</span>"><span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>def<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Duplicate attribute &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-duplicate-attributes)</span>"><span class="token attr-name">:foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>def<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Duplicate attribute &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-duplicate-attributes)</span>"><span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>def<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:foo.a</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Duplicate attribute &amp;apos;foo&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-duplicate-attributes)</span>"><span class="token attr-name">:foo.b</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>def<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Duplicate attribute &amp;apos;class&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-duplicate-attributes)</span>"><span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>def<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:foo.a</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-empty-pattern":{name:"vue/no-empty-pattern",value:"error",description:"禁止解构赋值中出现空 {} 或 []",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>\n            () => {\n                const <mark class="eslint-error" data-tip="Unexpected empty object pattern.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-empty-pattern)</span>">{}</mark> = foo;\n            }\n        <span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>\n            () => {\n                const { bar } = foo;\n            }\n        <span class="token punctuation">"</span></span>\n    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-irregular-whitespace":{name:"vue/no-irregular-whitespace",value:["error",{skipStrings:!0,skipComments:!1,skipRegExps:!0,skipTemplates:!0,skipHTMLTextContents:!0}],description:"禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式、模版字符串中或 HTML 内容中",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> foo<mark class="eslint-error" data-tip="Irregular whitespace not allowed.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-irregular-whitespace)</span>">　</mark><span class="token operator">=</span> <span class="token string">\'\'</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<mark class="eslint-error" data-tip="Irregular whitespace not allowed.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-irregular-whitespace)</span>">　</mark>bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'　\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token regex">/　/</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token template-string"><span class="token string">`　`</span></span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>　<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-parsing-error":{name:"vue/no-parsing-error",value:"error",description:"禁止出现语法错误",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ message. <mark class="eslint-error" data-tip="Parsing error: Unexpected end of expression.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-parsing-error)</span>">}</mark>}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-reserved-component-names":{name:"vue/no-reserved-component-names",value:"error",description:"组件的 name 属性静止使用保留字",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string"><mark class="eslint-error" data-tip="Name &amp;quot;div&amp;quot; is reserved.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-reserved-component-names)</span>">\'div\'</mark></span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'FooBar\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/no-reserved-keys":{name:"vue/no-reserved-keys",value:"error",description:"禁止覆盖保留字",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Key &amp;apos;$el&amp;apos; is reserved.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-reserved-keys)</span>">$el</mark><span class="token punctuation">:</span> String\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Key &amp;apos;$on&amp;apos; is reserved.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-reserved-keys)</span>">$on</mark><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Keys starting with with &amp;apos;_&amp;apos; are reserved in &amp;apos;_foo&amp;apos; group.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-reserved-keys)</span>">_foo</mark><span class="token punctuation">:</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function"><mark class="eslint-error" data-tip="Key &amp;apos;$nextTick&amp;apos; is reserved.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-reserved-keys)</span>">$nextTick</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        $element<span class="token punctuation">:</span> String\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        $listen<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n            <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        foo<span class="token punctuation">:</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">$next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/no-restricted-syntax":{name:"vue/no-restricted-syntax",value:"off",description:"禁止使用指定的语法",category:"",badExample:"",goodExample:""},"vue/no-shared-component-data":{name:"vue/no-shared-component-data",value:"off",description:"组件的 data 属性的值必须是一个函数",category:"",badExample:"",goodExample:""},"vue/no-side-effects-in-computed-properties":{name:"vue/no-side-effects-in-computed-properties",value:"off",description:"禁止在计算属性中对属性修改",category:"",badExample:"",goodExample:""},"vue/no-static-inline-styles":{name:"vue/no-static-inline-styles",value:"off",description:"禁止使用 style 属性",category:"",badExample:"",goodExample:""},"vue/no-template-key":{name:"vue/no-template-key",value:"off",description:"禁止 <template> 使用 key 属性",category:"",badExample:"",goodExample:""},"vue/no-template-shadow":{name:"vue/no-template-shadow",value:"off",description:"模版中的变量名禁止与前一个作用域重名",category:"",badExample:"",goodExample:""},"vue/no-textarea-mustache":{name:"vue/no-textarea-mustache",value:"error",description:"禁止在 <textarea> 中出现模版语法 {{message}}",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span><span class="token punctuation">></span></span><mark class="eslint-error" data-tip="Unexpected mustache. Use &amp;apos;v-model&amp;apos; instead.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-textarea-mustache)</span>">{{ message }}</mark><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-unsupported-features":{name:"vue/no-unsupported-features",value:"off",description:"当你的 vue 版本较老时，禁用还未支持的语法",category:"",badExample:"",goodExample:""},"vue/no-unused-components":{name:"vue/no-unused-components",value:"error",description:"禁止定义在 components 中的组件未使用",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'components/Foo.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="The &amp;quot;Foo&amp;quot; component has been registered but not used.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-unused-components)</span>">Foo</mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Bar</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> Foo <span class="token keyword">from</span> <span class="token string">\'components/Foo.vue\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        Foo\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Foo</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-unused-vars":{name:"vue/no-unused-vars",value:"error",description:"模版中已定义的变量必须使用",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><mark class="eslint-error" data-tip="&amp;apos;item&amp;apos; is defined but never used.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-unused-vars)</span>">item</mark> in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello {{ item.message }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-use-v-if-with-v-for":{name:"vue/no-use-v-if-with-v-for",value:"error",description:"禁止在同一个元素上使用 v-if 和 v-for 指令",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TodoItem</span> <mark class="eslint-error" data-tip="This &amp;apos;v-if&amp;apos; should be moved to the wrapper element.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/no-use-v-if-with-v-for)</span>"><span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>complete<span class="token punctuation">"</span></span></mark> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>complete<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TodoItem</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/no-v-html":{name:"vue/no-v-html",value:"off",description:"禁止使用 v-html",category:"",badExample:"",goodExample:""},"vue/order-in-components":{name:"vue/order-in-components",value:"error",description:"组件的属性必须为一定的顺序",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            foo<span class="token punctuation">:</span> <span class="token string">\'Hello\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="The &amp;quot;props&amp;quot; property should be above the &amp;quot;data&amp;quot; property on line 3.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/order-in-components)</span>">props</mark><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> Number\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="The &amp;quot;name&amp;quot; property should be above the &amp;quot;props&amp;quot; property on line 8.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/order-in-components)</span>">name</mark><span class="token punctuation">:</span> <span class="token string">\'World\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token punctuation">:</span> <span class="token string">\'World\'</span><span class="token punctuation">,</span>\n    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        bar<span class="token punctuation">:</span> Number\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            foo<span class="token punctuation">:</span> <span class="token string">\'Hello\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/padding-line-between-blocks":{name:"vue/padding-line-between-blocks",value:"off",description:"<template> <script> <style> 之间必须由空行",category:"",badExample:"",goodExample:"",reason:"代码格式问题，最好由 Prettier 解决"},"vue/prop-name-casing":{name:"vue/prop-name-casing",value:"off",description:"props 必须用驼峰式",category:"",badExample:"",goodExample:""},"vue/require-component-is":{name:"vue/require-component-is",value:"error",description:"<component> 必须有绑定的组件",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><mark class="eslint-error" data-tip="Expected &amp;apos;&amp;lt;component&amp;gt;&amp;apos; elements to have &amp;apos;v-bind:is&amp;apos; attribute.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/require-component-is)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token punctuation">/></span></mark></span>\n    <span class="token tag"><mark class="eslint-error" data-tip="Expected &amp;apos;&amp;lt;component&amp;gt;&amp;apos; elements to have &amp;apos;v-bind:is&amp;apos; attribute.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/require-component-is)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>currentComponnet<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></mark></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>currentComponnet<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>currentComponnet<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/require-default-prop":{name:"vue/require-default-prop",value:"off",description:"props 如果不是 required 的字段，必须有默认值",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"vue/require-direct-export":{name:"vue/require-direct-export",value:"off",description:"必须直接使用 export default 导出组件",category:"",badExample:"",goodExample:""},"vue/require-name-property":{name:"vue/require-name-property",value:"off",description:"组件必须包含 name 属性",category:"",badExample:"",goodExample:""},"vue/require-prop-type-constructor":{name:"vue/require-prop-type-constructor",value:"off",description:"props 的取值必须是基本类型的构造函数，而不是字符串",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"vue/require-prop-types":{name:"vue/require-prop-types",value:"off",description:"prop 必须有类型限制",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"vue/require-render-return":{name:"vue/require-render-return",value:"error",description:"render 函数必须有返回值",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function"><mark class="eslint-error" data-tip="Expected to return a value in render function.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/require-render-return)</span>">render</mark></span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">,</span> <span class="token string">\'hello\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/require-v-for-key":{name:"vue/require-v-for-key",value:"error",description:"v-for 指令的元素必须有 v-bind:key",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><mark class="eslint-error" data-tip="Elements in iteration expect to have &amp;apos;v-bind:key&amp;apos; directives.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/require-v-for-key)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></mark></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/require-valid-default-prop":{name:"vue/require-valid-default-prop",value:"off",description:"prop 的默认值必须匹配它的类型",category:"",badExample:"",goodExample:"",reason:"类型相关的约束交给 TypeScript"},"vue/return-in-computed-property":{name:"vue/return-in-computed-property",value:"error",description:"计算属性必须有返回值",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">foo</span><mark class="eslint-error" data-tip="Expected to return a value in &amp;quot;foo&amp;quot; computed property.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/return-in-computed-property)</span>"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>baz<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>'},"vue/sort-keys":{name:"vue/sort-keys",value:"off",description:"props 的键名必须排好序",category:"",badExample:"",goodExample:""},"vue/static-class-names-order":{name:"vue/static-class-names-order",value:"off",description:"class 的值必须按字母排序",category:"",badExample:"",goodExample:""},"vue/this-in-template":{name:"vue/this-in-template",value:"error",description:"禁止在模版中用 this",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><mark class="eslint-error" data-tip="Unexpected usage of &amp;apos;this&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/this-in-template)</span>">this</mark>.url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ <mark class="eslint-error" data-tip="Unexpected usage of &amp;apos;this&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/this-in-template)</span>">this</mark>.text }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">:href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ text }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/use-v-on-exact":{name:"vue/use-v-on-exact",value:"error",description:"当一个节点上出现两个 v-on:click 时，其中一个必须为 exact",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><mark class="eslint-error" data-tip="Consider to use &amp;apos;.exact&amp;apos; modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/use-v-on-exact)</span>"><span class="token namespace">v-on:</span>click</mark></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.ctrl</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.exact</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-on:</span>click.ctrl</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/v-bind-style":{name:"vue/v-bind-style",value:"error",description:"使用缩写的 : 而不是 v-bind:",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="Unexpected &amp;apos;v-bind&amp;apos; before &amp;apos;:&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/v-bind-style)</span>"><span class="token attr-name"><span class="token namespace">v-bind:</span>foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/v-on-function-call":{name:"vue/v-on-function-call",value:"error",description:"禁止在 v-on 的值中调用函数",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><mark class="eslint-error" data-tip="Method calls without arguments inside of &amp;apos;v-on&amp;apos; directives must not have parentheses.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/v-on-function-call)</span>">closeModal()</mark><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Close\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>closeModal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        Close\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/v-on-style":{name:"vue/v-on-style",value:"error",description:"使用缩写的 @click 而不是 v-on:click",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="Expected &amp;apos;@&amp;apos; instead of &amp;apos;v-on:&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/v-on-style)</span>"><span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/v-slot-style":{name:"vue/v-slot-style",value:"off",description:"使用缩写的 #one 而不是 v-slot:one",category:"",badExample:"",goodExample:""},"vue/valid-template-root":{name:"vue/valid-template-root",value:"error",description:"template 的根节点必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <mark class="eslint-error" data-tip="The template root requires exactly one element.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-template-root)</span>"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></mark>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-bind":{name:"vue/valid-v-bind",value:"error",description:"v-bind 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-bind&amp;apos; directives require an attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind)</span>">v-bind</mark></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-bind&amp;apos; directives require an attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind)</span>">:aaa</mark></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-bind&amp;apos; directives don&amp;apos;t support the modifier &amp;apos;bbb&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind)</span>"><span class="token namespace">v-bind:</span>aaa.bbb</mark></span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:aaa.prop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-bind-sync":{name:"vue/valid-v-bind-sync",value:"error",description:"v-bind:foo.sync 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers require the attribute value which is valid as LHS.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name"><span class="token namespace">v-bind:</span>aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo + bar<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers require the attribute value which is valid as LHS.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name">:aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo + bar<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers aren&amp;apos;t supported on &amp;lt;input&amp;gt; non Vue-components.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name"><span class="token namespace">v-bind:</span>aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers aren&amp;apos;t supported on &amp;lt;input&amp;gt; non Vue-components.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name">:aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers cannot update the iteration variable &amp;apos;todo&amp;apos; itself.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name"><span class="token namespace">v-bind:</span>aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <mark class="eslint-error" data-tip="&amp;apos;.sync&amp;apos; modifiers cannot update the iteration variable &amp;apos;todo&amp;apos; itself.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-bind-sync)</span>"><span class="token attr-name">:aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">:aaa.sync</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-cloak":{name:"vue/valid-v-cloak",value:"error",description:"v-cloak 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-cloak&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-cloak)</span>"><span class="token namespace">v-cloak:</span>aaa</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-cloak&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-cloak)</span>">v-cloak.bbb</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-cloak&amp;apos; directives require no attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-cloak)</span>"><span class="token attr-name">v-cloak</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ccc<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-cloak</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-else":{name:"vue/valid-v-else",value:"error",description:"v-else 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require being preceded by the element which has a &amp;apos;v-if&amp;apos; or &amp;apos;v-else-if&amp;apos; directive.<br/><span class=\'eslint-error-rule-id\'><mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require no attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else)</span>">eslint(vue/v</mark>alid-v-else)</span>"><span class="token attr-name">v-else</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require being preceded by the element which has a &amp;apos;v-if&amp;apos; or &amp;apos;v-else-if&amp;apos; directive.<br/><span class=\'eslint-error-rule-id\'><mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else)</span>">eslint(vue</mark>/valid-v-else)</span>"><span class="token namespace">v-else:</span>aaa</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require being preceded by the element which has a &amp;apos;v-if&amp;apos; or &amp;apos;v-else-if&amp;apos; directive.<br/><span class=\'eslint-error-rule-id\'><mark class="eslint-error" data-tip="&amp;apos;v-else&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else)</span>">eslint(vue</mark>/valid-v-else)</span>">v-else.bbb</mark></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-else-if":{name:"vue/valid-v-else-if",value:"error",description:"v-else-if 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-else-if&amp;apos; directives require being preceded by the element which has a &amp;apos;v-if&amp;apos; or &amp;apos;v-else-if&amp;apos; directive.<br/><span class=\'eslint-error-rule-id\'><mark class="eslint-error" data-tip="&amp;apos;v-else-if&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else-if)</span>">eslint(vu</mark>e/valid-v-else-if)</span>">v-else-if</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-else-if&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else-if)</span>"><span class="token attr-name"><span class="token namespace">v-else-if:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-else-if&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-else-if)</span>"><span class="token attr-name">v-else-if.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-for":{name:"vue/valid-v-for",value:"error",description:"v-for 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-for&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>">v-for</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-for&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>"><span class="token attr-name"><span class="token namespace">v-for:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-for&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>"><span class="token attr-name">v-for.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><mark class="eslint-error" data-tip="Custom elements in iteration require &amp;apos;v-bind:key&amp;apos; directives.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token attr-name">is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyComponent<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></mark></span>\n    <span class="token tag"><mark class="eslint-error" data-tip="Custom elements in iteration require &amp;apos;v-bind:key&amp;apos; directives.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></mark></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <mark class="eslint-error" data-tip="Expected &amp;apos;v-bind:key&amp;apos; directive to use the variables which are defined by the &amp;apos;v-for&amp;apos; directive.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-for)</span>"><span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyComponent<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.id<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-html":{name:"vue/valid-v-html",value:"error",description:"v-html 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-html&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-html)</span>">v-html</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-html&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-html)</span>"><span class="token attr-name"><span class="token namespace">v-html:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-html&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-html)</span>"><span class="token attr-name">v-html.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-if":{name:"vue/valid-v-if",value:"error",description:"v-if 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-if&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-if)</span>">v-if</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-if&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-if)</span>"><span class="token attr-name"><span class="token namespace">v-if:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-if&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-if)</span>"><span class="token attr-name">v-if.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-if&amp;apos; and &amp;apos;v-else&amp;apos; directives can&amp;apos;t exist on the same element. You may want &amp;apos;v-else-if&amp;apos; directives.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-if)</span>"><span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token attr-name">v-else</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-if&amp;apos; and &amp;apos;v-else-if&amp;apos; directives can&amp;apos;t exist on the same element.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-if)</span>"><span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bar<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-else</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-model":{name:"vue/valid-v-model",value:"error",description:"v-model 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>">v-model</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>"><span class="token attr-name"><span class="token namespace">v-model:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives don&amp;apos;t support the modifier &amp;apos;bbb&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>"><span class="token attr-name">v-model.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives require the attribute value which is valid as LHS.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>"><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo + bar<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives aren&amp;apos;t supported on &amp;lt;div&amp;gt; elements.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>"><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <mark class="eslint-error" data-tip="&amp;apos;v-model&amp;apos; directives cannot update the iteration variable &amp;apos;todo&amp;apos; itself.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-model)</span>"><span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model.lazy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MyComponent</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo in todos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>todo.name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-on":{name:"vue/valid-v-on",value:"error",description:"v-on 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-on&amp;apos; directives require a value or verb modifier (like &amp;apos;stop&amp;apos; or &amp;apos;prevent&amp;apos;).<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-on)</span>">v-on</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-on&amp;apos; directives require a value or verb modifier (like &amp;apos;stop&amp;apos; or &amp;apos;prevent&amp;apos;).<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-on)</span>"><span class="token namespace">v-on:</span>click</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-on&amp;apos; directives don&amp;apos;t support the modifier &amp;apos;aaa&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-on)</span>"><span class="token attr-name"><span class="token namespace">v-on:</span>click.aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-on&amp;apos; directives require a value or verb modifier (like &amp;apos;stop&amp;apos; or &amp;apos;prevent&amp;apos;).<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-on)</span>">@click</mark></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click.left</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click.prevent</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@click.stop</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-once":{name:"vue/valid-v-once",value:"error",description:"v-once 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-once&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-once)</span>"><span class="token namespace">v-once:</span>aaa</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-once&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-once)</span>">v-once.bbb</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-once&amp;apos; directives require no attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-once)</span>"><span class="token attr-name">v-once</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ccc<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-once</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-pre":{name:"vue/valid-v-pre",value:"error",description:"v-pre 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-pre&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-pre)</span>"><span class="token namespace">v-pre:</span>aaa</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-pre&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-pre)</span>">v-pre.bbb</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-pre&amp;apos; directives require no attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-pre)</span>"><span class="token attr-name">v-pre</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ccc<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-pre</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-show":{name:"vue/valid-v-show",value:"error",description:"v-show 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-show&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-show)</span>">v-show</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-show&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-show)</span>"><span class="token attr-name"><span class="token namespace">v-show:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-show&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-show)</span>"><span class="token attr-name">v-show.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-slot":{name:"vue/valid-v-slot",value:"error",description:"v-slot 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-slot&amp;apos; directive must be owned by a custom element, but &amp;apos;div&amp;apos; is not.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-slot)</span>"><span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span></mark><span class="token punctuation">></span></span>\n        {{ data }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <mark class="eslint-error" data-tip="Named slots must use &amp;apos;&amp;lt;template&amp;gt;&amp;apos; on a custom element.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-slot)</span>"><span class="token attr-name"><span class="token namespace">v-slot:</span>one</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span></mark><span class="token punctuation">></span></span>\n        {{ data }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <mark class="eslint-error" data-tip="Default slot must use &amp;apos;&amp;lt;template&amp;gt;&amp;apos; on a custom element when there are other named slots.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-slot)</span>"><span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span></mark><span class="token punctuation">></span></span>\n        {{ data }}\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>one</span><span class="token punctuation">></span></span>\n            one\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-slot&amp;apos; directive must be owned by a custom element, but &amp;apos;div&amp;apos; is not.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-slot)</span>"><span class="token namespace">v-slot:</span>one</mark></span><span class="token punctuation">></span></span>\n            one\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        {{ data }}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>default</span><span class="token punctuation">></span></span>\n            default\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>one</span><span class="token punctuation">></span></span>\n            one\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'},"vue/valid-v-text":{name:"vue/valid-v-text",value:"error",description:"v-text 指令必须合法",category:"",badExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><mark class="eslint-error" data-tip="&amp;apos;v-text&amp;apos; directives require that attribute value.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-text)</span>">v-text</mark></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-text&amp;apos; directives require no argument.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-text)</span>"><span class="token attr-name"><span class="token namespace">v-text:</span>aaa</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <mark class="eslint-error" data-tip="&amp;apos;v-text&amp;apos; directives require no modifier.<br/><span class=\'eslint-error-rule-id\'>eslint(vue/valid-v-text)</span>"><span class="token attr-name">v-text.bbb</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span></mark> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>',goodExample:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>'}};
},{}],"T925":[function(require,module,exports) {
module.exports={"@typescript-eslint/adjacent-overload-signatures":{name:"@typescript-eslint/adjacent-overload-signatures",value:"error",description:"重载的函数必须写在一起",category:"",badExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> NSFoo1 <span class="token punctuation">{</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &amp;apos;foo&amp;apos; signatures should be adjacent.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/adjacent-overload-signatures)</span>"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TypeFoo1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &amp;apos;foo&amp;apos; signatures should be adjacent.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/adjacent-overload-signatures)</span>"><span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IFoo1</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &amp;apos;foo&amp;apos; signatures should be adjacent.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/adjacent-overload-signatures)</span>"><span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> NSFoo2 <span class="token punctuation">{</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TypeFoo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IFoo2</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"增加可读性"},"@typescript-eslint/array-type":{name:"@typescript-eslint/array-type",value:"off",description:"限制数组类型必须使用 Array<T> 或 T[]",category:"",badExample:"",goodExample:"",reason:"允许灵活运用两者"},"@typescript-eslint/await-thenable":{name:"@typescript-eslint/await-thenable",value:"off",description:"禁止对没有 then 方法的对象使用 await",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/ban-ts-comment":{name:"@typescript-eslint/ban-ts-comment",value:"off",description:"禁止使用 // @ts-ignore // @ts-nocheck // @ts-check",category:"",badExample:"",goodExample:"",reason:"这种注释本身就是对特殊代码的说明"},"@typescript-eslint/ban-types":{name:"@typescript-eslint/ban-types",value:"off",description:"禁止使用指定的类型",category:"",badExample:"",goodExample:""},"@typescript-eslint/consistent-type-assertions":{name:"@typescript-eslint/consistent-type-assertions",value:["error",{assertionStyle:"as",objectLiteralTypeAssertions:"never"}],description:"类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）",category:"",badExample:'<span class="token keyword">let</span> bar1<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use &amp;apos;as string&amp;apos; instead of &amp;apos;&amp;lt;string&amp;gt;&amp;apos;.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/consistent-type-assertions)</span>"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span>bar1</mark><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> baz1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Always prefer const x: T = { ... }.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/consistent-type-assertions)</span>"><span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span> <span class="token keyword">as</span> object</mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> bar2<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo2 <span class="token operator">=</span> bar2 <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> baz2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span>',reason:"<Type> 容易被理解为 jsx"},"@typescript-eslint/consistent-type-definitions":{name:"@typescript-eslint/consistent-type-definitions",value:["error","interface"],description:"优先使用 interface 而不是 type",category:"",badExample:'<span class="token keyword">type</span> <mark class="eslint-error" data-tip="Use an `interface` instead of a `type`<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/consistent-type-definitions)</span>">Foo1</mark> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"interface 可以 implement, extend 和 merge"},"@typescript-eslint/default-param-last":{name:"@typescript-eslint/default-param-last",value:"off",description:"有默认值或可选的参数必须放到最后",category:"",badExample:"",goodExample:""},"@typescript-eslint/explicit-function-return-type":{name:"@typescript-eslint/explicit-function-return-type",value:"off",description:"函数返回值必须与声明的类型一致",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/explicit-member-accessibility":{name:"@typescript-eslint/explicit-member-accessibility",value:"error",description:"必须设置类的成员的可访问性",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on class property foo.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token keyword">static</span> foo <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on method definition getFoo.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token keyword">static</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on method definition constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on class property bar.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>">bar <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on method definition getBar.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on get property accessor baz.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on set property accessor baz.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/explicit-member-accessibility)</span>"><span class="token keyword">set</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> foo <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> bar <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">set</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好"},"@typescript-eslint/explicit-module-boundary-types":{name:"@typescript-eslint/explicit-module-boundary-types",value:"off",description:"导出的函数或类中的 public 方法必须定义输入输出参数的类型",category:"",badExample:"",goodExample:""},"@typescript-eslint/member-ordering":{name:"@typescript-eslint/member-ordering",value:["error",{default:["public-static-field","protected-static-field","private-static-field","static-field","public-static-method","protected-static-method","private-static-method","static-method","public-instance-field","protected-instance-field","private-instance-field","public-field","protected-field","private-field","instance-field","field","constructor","public-instance-method","protected-instance-method","private-instance-method","public-method","protected-method","private-method","instance-method","method"]}],description:"指定类成员的排序规则",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Member getBar2 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">protected</span> <span class="token function">getBar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member getBar1 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">public</span> <span class="token function">getBar1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member constructor should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">public</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo1<span class="token punctuation">.</span><span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member bar3 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">private</span> bar3 <span class="token operator">=</span> <span class="token string">\'bar3\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member bar2 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">protected</span> bar2 <span class="token operator">=</span> <span class="token string">\'bar2\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member bar1 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">public</span> bar1 <span class="token operator">=</span> <span class="token string">\'bar1\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member getFoo3 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo1<span class="token punctuation">.</span>foo3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member getFoo2 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token function">getFoo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member getFoo1 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Member foo3 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">private</span> <span class="token keyword">static</span> foo3 <span class="token operator">=</span> <span class="token string">\'foo3\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member foo2 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">protected</span> <span class="token keyword">static</span> foo2 <span class="token operator">=</span> <span class="token string">\'foo2\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member foo1 should be declared before all private instance method definitions.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/member-ordering)</span>"><span class="token keyword">public</span> <span class="token keyword">static</span> foo1 <span class="token operator">=</span> <span class="token string">\'foo1\'</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> foo1 <span class="token operator">=</span> <span class="token string">\'foo1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> foo2 <span class="token operator">=</span> <span class="token string">\'foo2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> foo3 <span class="token operator">=</span> <span class="token string">\'foo3\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token function">getFoo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> bar1 <span class="token operator">=</span> <span class="token string">\'bar1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> bar2 <span class="token operator">=</span> <span class="token string">\'bar2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> bar3 <span class="token operator">=</span> <span class="token string">\'bar3\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo2<span class="token punctuation">.</span><span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token function">getBar1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token function">getBar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">private</span> <span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private"},"@typescript-eslint/naming-convention":{name:"@typescript-eslint/naming-convention",value:"off",description:"限制各种变量或类型的命名规则",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-array-constructor":{name:"@typescript-eslint/no-array-constructor",value:"off",description:"禁止使用 Array 构造函数",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-dupe-class-members":{name:"@typescript-eslint/no-dupe-class-members",value:"off",description:"禁止重复定义类的成员",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"@typescript-eslint/no-dynamic-delete":{name:"@typescript-eslint/no-dynamic-delete",value:"off",description:"禁止 delete 时传入的 key 是动态的",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-empty-function":{name:"@typescript-eslint/no-empty-function",value:"off",description:"不允许有空函数",category:"",badExample:"",goodExample:"",reason:"有时需要将一个空函数设置为某个项的默认值"},"@typescript-eslint/no-empty-interface":{name:"@typescript-eslint/no-empty-interface",value:"error",description:"禁止定义空的接口",category:"",badExample:'<span class="token keyword">interface</span> <span class="token class-name"><mark class="eslint-error" data-tip="An empty interface is equivalent to `{}`.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-empty-interface)</span>">Foo1</mark></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-explicit-any":{name:"@typescript-eslint/no-explicit-any",value:"off",description:"禁止使用 any",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-extra-non-null-assertion":{name:"@typescript-eslint/no-extra-non-null-assertion",value:"off",description:"禁止多余的 non-null 断言",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-extraneous-class":{name:"@typescript-eslint/no-extraneous-class",value:"off",description:"禁止定义没必要的类，比如只有静态方法的类",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-floating-promises":{name:"@typescript-eslint/no-floating-promises",value:"off",description:"禁止调用 Promise 时没有处理异常情况",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-for-in-array":{name:"@typescript-eslint/no-for-in-array",value:"off",description:"禁止对 array 使用 for in 循环",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-implied-eval":{name:"@typescript-eslint/no-implied-eval",value:"off",description:"禁止使用 eval",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-inferrable-types":{name:"@typescript-eslint/no-inferrable-types",value:"error",description:"禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="Type number trivially inferred from a number literal, remove type annotation.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-inferrable-types)</span>">foo1<span class="token punctuation">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <mark class="eslint-error" data-tip="Type string trivially inferred from a string literal, remove type annotation.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-inferrable-types)</span>">bar1<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">\'\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar2 <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>',reason:"可以简化代码"},"@typescript-eslint/no-magic-numbers":{name:"@typescript-eslint/no-magic-numbers",value:"off",description:"禁止使用 magic numbers",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-misused-new":{name:"@typescript-eslint/no-misused-new",value:"off",description:"禁止在接口中定义 constructor，或在类中定义 new",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-misused-promises":{name:"@typescript-eslint/no-misused-promises",value:"off",description:"避免错误的使用 Promise",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-namespace":{name:"@typescript-eslint/no-namespace",value:["error",{allowDeclarations:!0,allowDefinitionFiles:!0}],description:"禁止使用 namespace 来定义命名空间",category:"",badExample:'<mark class="eslint-error" data-tip="ES2015 module syntax is preferred over custom TypeScript modules and namespaces.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-namespace)</span>"><span class="token keyword">namespace</span> foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span>',reason:"使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间"},"@typescript-eslint/no-non-null-asserted-optional-chain":{name:"@typescript-eslint/no-non-null-asserted-optional-chain",value:"error",description:"禁止在 optional chaining 之后使用 non-null 断言（感叹号）",category:"",badExample:'<span class="token keyword">let</span> foo1<span class="token punctuation">:</span> <span class="token punctuation">{</span> bar<span class="token punctuation">:</span> <span class="token punctuation">{</span> baz<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">|</span> undefined<span class="token punctuation">;</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Optional chain expressions can return undefined by design - using a non-null assertion is unsafe and wrong.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-non-null-asserted-optional-chain)</span>">foo1<span class="token operator">?</span><span class="token punctuation">.</span>bar</mark><span class="token operator">!</span><span class="token punctuation">.</span>baz<span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo2<span class="token punctuation">:</span> <span class="token punctuation">{</span> bar<span class="token punctuation">:</span> <span class="token punctuation">{</span> baz<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">|</span> undefined<span class="token punctuation">;</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo2<span class="token operator">?</span><span class="token punctuation">.</span>bar<span class="token punctuation">.</span>baz<span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"optional chaining 后面的属性一定是非空的"},"@typescript-eslint/no-non-null-assertion":{name:"@typescript-eslint/no-non-null-assertion",value:"off",description:"禁止使用 non-null 断言（感叹号）",category:"",badExample:"",goodExample:"",reason:"使用 non-null 断言时就已经清楚了风险"},"@typescript-eslint/no-parameter-properties":{name:"@typescript-eslint/no-parameter-properties",value:"error",description:"禁止给类的构造函数的参数添加修饰符",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token parameter"><mark class="eslint-error" data-tip="Property name cannot be declared in the constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-parameter-properties)</span>"><span class="token keyword">private</span> name<span class="token punctuation">:</span> <span class="token builtin">string</span></mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-require-imports":{name:"@typescript-eslint/no-require-imports",value:"error",description:"禁止使用 require",category:"",badExample:'<span class="token keyword">const</span> fs <span class="token operator">=</span> <mark class="eslint-error" data-tip="A `require()` style import is forbidden.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-require-imports)</span>"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>',reason:"统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入"},"@typescript-eslint/no-this-alias":{name:"@typescript-eslint/no-this-alias",value:["error",{allowDestructuring:!0}],description:"禁止将 this 赋值给其他变量，除非是解构赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <mark class="eslint-error" data-tip="Unexpected aliasing of &amp;apos;this&amp;apos; to local variable.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-this-alias)</span>">self</mark> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        self<span class="token punctuation">.</span><span class="token function">doWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-throw-literal":{name:"@typescript-eslint/no-throw-literal",value:"off",description:"禁止 throw 字面量，必须 throw 一个 Error 对象",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-type-alias":{name:"@typescript-eslint/no-type-alias",value:"off",description:"禁止使用类型别名",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-unnecessary-boolean-literal-compare":{name:"@typescript-eslint/no-unnecessary-boolean-literal-compare",value:"off",description:"测试表达式中的布尔类型禁止与 true 或 false 直接比较",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unnecessary-condition":{name:"@typescript-eslint/no-unnecessary-condition",value:"off",description:"条件表达式禁止是永远为真（或永远为假）的",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unnecessary-qualifier":{name:"@typescript-eslint/no-unnecessary-qualifier",value:"off",description:"在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unnecessary-type-arguments":{name:"@typescript-eslint/no-unnecessary-type-arguments",value:"off",description:"禁止范型的类型有默认值时，将范型设置为该默认值",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-unnecessary-type-assertion":{name:"@typescript-eslint/no-unnecessary-type-assertion",value:"off",description:"禁止无用的类型断言",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unused-expressions":{name:"@typescript-eslint/no-unused-expressions",value:["error",{allowShortCircuit:!0,allowTernary:!0,allowTaggedTemplates:!0}],description:"禁止无用的表达式",category:"",badExample:'<span class="token keyword">declare</span> <span class="token keyword">const</span> foo1<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> bar1<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> baz1<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>"><span class="token number">1</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>">foo1<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>"><span class="token punctuation">(</span><span class="token string">\'foo1\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>">foo1 <span class="token operator">&amp;&amp;</span> bar1<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>">foo1 <span class="token operator">||</span> bar1<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>">foo1 <span class="token operator">?</span> bar1 <span class="token punctuation">:</span> baz1<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-unused-expressions)</span>"><span class="token template-string"><span class="token string">`bar1`</span></span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token string">\'use strict\'</span><span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> foo2<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> bar2<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token keyword">declare</span> <span class="token keyword">const</span> baz2<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\nfoo2 <span class="token operator">&amp;&amp;</span> <span class="token function">bar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo2 <span class="token operator">||</span> <span class="token function">bar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo2 <span class="token operator">?</span> <span class="token function">bar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">baz2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo2<span class="token template-string"><span class="token string">`bar2`</span></span><span class="token punctuation">;</span>'},"@typescript-eslint/no-unused-vars":{name:"@typescript-eslint/no-unused-vars",value:"off",description:"已定义的变量必须使用",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/no-unused-vars-experimental":{name:"@typescript-eslint/no-unused-vars-experimental",value:"off",description:"禁止已定义的变量未使用",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-use-before-define":{name:"@typescript-eslint/no-use-before-define",value:"off",description:"禁止在定义变量之前就使用它",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/no-useless-constructor":{name:"@typescript-eslint/no-useless-constructor",value:"error",description:"禁止出现没必要的 constructor",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-useless-constructor)</span>"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Bar1</span> <span class="token keyword">extends</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/no-useless-constructor)</span>"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Bar2</span> <span class="token keyword">extends</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-var-requires":{name:"@typescript-eslint/no-var-requires",value:"off",description:"禁止使用 require 来引入模块",category:"",badExample:"",goodExample:"",reason:"no-require-imports 规则已经约束了 require"},"@typescript-eslint/prefer-as-const":{name:"@typescript-eslint/prefer-as-const",value:"off",description:"使用 as const 替代 as 'bar'",category:"",badExample:"",goodExample:"",reason:"as const 是新语法，不是很常见"},"@typescript-eslint/prefer-for-of":{name:"@typescript-eslint/prefer-for-of",value:"error",description:"使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环",category:"",badExample:'<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<mark class="eslint-error" data-tip="Expected a `for-of` loop instead of a `for` loop with this simple iteration<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/prefer-for-of)</span>"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// i is used to write to arr, so for-of could not be used.</span>\n    arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// i is used independent of arr, so for-of could not be used.</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"for of 循环更加易读"},"@typescript-eslint/prefer-function-type":{name:"@typescript-eslint/prefer-function-type",value:"error",description:"使用函数类型别名替代包含函数调用声明的接口",category:"",badExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Interface has only a call signature - use &amp;apos;type Foo1 = () =&amp;gt; string;&amp;apos; instead.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/prefer-function-type)</span>"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">type</span> <span class="token function-variable function">Foo2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">string</span><span class="token punctuation">;</span>'},"@typescript-eslint/prefer-includes":{name:"@typescript-eslint/prefer-includes",value:"off",description:"使用 includes 而不是 indexOf",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-namespace-keyword":{name:"@typescript-eslint/prefer-namespace-keyword",value:"error",description:"禁止使用 module 来定义命名空间",category:"",badExample:'<mark class="eslint-error" data-tip="Use &amp;apos;namespace&amp;apos; instead of &amp;apos;module&amp;apos; to declare custom TypeScript modules.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/prefer-namespace-keyword)</span>"><span class="token keyword">module</span> Foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">namespace</span> Foo2 <span class="token punctuation">{</span><span class="token punctuation">}</span>',reason:"module 已成为 js 的关键字"},"@typescript-eslint/prefer-nullish-coalescing":{name:"@typescript-eslint/prefer-nullish-coalescing",value:"off",description:"使用 ?? 替代 ||",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-optional-chain":{name:"@typescript-eslint/prefer-optional-chain",value:"error",description:"使用 optional chaining 替代 &&",category:"",badExample:'<span class="token keyword">let</span> foo1<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Prefer using an optional chain expression instead, as it&amp;apos;s more concise and easier to read.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/prefer-optional-chain)</span>">foo1 <span class="token operator">&amp;&amp;</span> foo1<span class="token punctuation">.</span>a <span class="token operator">&amp;&amp;</span> foo1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b <span class="token operator">&amp;&amp;</span> foo1<span class="token punctuation">.</span>a<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c</mark><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo2<span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo2<span class="token operator">?</span><span class="token punctuation">.</span>a<span class="token operator">?</span><span class="token punctuation">.</span>b<span class="token operator">?</span><span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>'},"@typescript-eslint/prefer-readonly":{name:"@typescript-eslint/prefer-readonly",value:"off",description:"私有变量如果没有在构造函数外被赋值，则必须设为 readonly",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-regexp-exec":{name:"@typescript-eslint/prefer-regexp-exec",value:"off",description:"使用 RegExp#exec 而不是 String#match",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-string-starts-ends-with":{name:"@typescript-eslint/prefer-string-starts-ends-with",value:"off",description:"使用 String#startsWith 而不是其他方式",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/promise-function-async":{name:"@typescript-eslint/promise-function-async",value:"off",description:"async 函数的返回值必须是 Promise",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/require-array-sort-compare":{name:"@typescript-eslint/require-array-sort-compare",value:"off",description:"使用 sort 时必须传入比较函数",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/require-await":{name:"@typescript-eslint/require-await",value:"off",description:"async 函数中必须存在 await 语句",category:"",badExample:"",goodExample:""},"@typescript-eslint/restrict-plus-operands":{name:"@typescript-eslint/restrict-plus-operands",value:"off",description:"使用加号时，两者必须同为数字或同为字符串",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/restrict-template-expressions":{name:"@typescript-eslint/restrict-template-expressions",value:"off",description:"模版字符串中的变量类型必须是字符串",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/return-await":{name:"@typescript-eslint/return-await",value:"off",description:"async 函数必须返回 await",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/strict-boolean-expressions":{name:"@typescript-eslint/strict-boolean-expressions",value:"off",description:"条件判断必须传入布尔值",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/switch-exhaustiveness-check":{name:"@typescript-eslint/switch-exhaustiveness-check",value:"off",description:"使用联合类型作为 switch 的对象时，必须包含每一个类型的 case",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/triple-slash-reference":{name:"@typescript-eslint/triple-slash-reference",value:["error",{path:"never",types:"always",lib:"always"}],description:"禁止使用三斜杠导入文件",category:"",badExample:'<span class="token comment"><mark class="eslint-error" data-tip="Do not use a triple slash reference for ./Animal, use `import` style instead.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/triple-slash-reference)</span>">/// &lt;reference path="./Animal"></mark></span>',goodExample:'<span class="token keyword">import</span> Animal <span class="token keyword">from</span> <span class="token string">\'./Animal\'</span><span class="token punctuation">;</span>',reason:"三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的"},"@typescript-eslint/typedef":{name:"@typescript-eslint/typedef",value:["error",{arrayDestructuring:!1,arrowParameter:!1,memberVariableDeclaration:!1,objectDestructuring:!1,parameter:!1,propertyDeclaration:!0,variableDeclaration:!1}],description:"interface 和 type 定义时必须声明成员的类型",category:"",badExample:'<span class="token keyword">type</span> Foo1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="expected bar to have a type annotation<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/typedef)</span>">bar<span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="expected baz to have a type annotation<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/typedef)</span>">baz<span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">type</span> Foo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n    baz<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"@typescript-eslint/unbound-method":{name:"@typescript-eslint/unbound-method",value:"off",description:"方法调用时需要绑定到正确的 this 上",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/unified-signatures":{name:"@typescript-eslint/unified-signatures",value:"error",description:"函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter"><mark class="eslint-error" data-tip="These overloads can be combined into one signature taking `number | string`.<br/><span class=\'eslint-error-rule-id\'>eslint(@typescript-eslint/unified-signatures)</span>">x<span class="token punctuation">:</span> <span class="token builtin">string</span></mark></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">any</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">any</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}};
},{}],"ltE3":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("../package.json"));function n(){return"\n/**\n * ".concat(t.default.description,"\n * ").concat(t.default.homepage,"\n *\n * 贡献者：\n *     ").concat(t.default.author,"\n *     ").concat(t.default.contributors.join("\n *     "),"\n *\n * 依赖版本：\n *     ").concat(["eslint","babel-eslint","eslint-plugin-react","vue-eslint-parser","eslint-plugin-vue","@typescript-eslint/parser","@typescript-eslint/eslint-plugin"].map(function(e){return"".concat(e," ").concat(t.default.devDependencies[e])}).join("\n *     "),"\n *\n * 此文件是由脚本 scripts/build.ts 自动生成\n *\n * @reason 为什么要开启（关闭）此规则\n */\n")}exports.NAMESPACE_CONFIG={base:{exampleExtension:"js",prismLanguage:"js",rulePrefix:"",ruleConfig:require("./rules/base.json"),getDocsUrl:function(e){return"https://eslint.org/docs/rules/".concat(e)},pluginName:void 0},react:{exampleExtension:"js",prismLanguage:"jsx",rulePrefix:"react/",ruleConfig:require("./rules/react.json"),getDocsUrl:function(e){return"https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/".concat(e.replace(/.*\//,""),".md")},pluginName:"eslint-plugin-react"},vue:{exampleExtension:"vue",prismLanguage:"html",rulePrefix:"vue/",ruleConfig:require("./rules/vue.json"),getDocsUrl:function(e){return"https://eslint.vuejs.org/rules/".concat(e.replace(/.*\//,""),".html")},pluginName:"eslint-plugin-vue"},typescript:{exampleExtension:"ts",prismLanguage:"ts",rulePrefix:"@typescript-eslint/",ruleConfig:require("./rules/typescript.json"),getDocsUrl:function(e){return"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/".concat(e.replace(/.*\//,""),".md")},pluginName:"@typescript-eslint/eslint-plugin"}},exports.NAMESPACES=Object.keys(exports.NAMESPACE_CONFIG),exports.buildEslintrcMeta=n;
},{"../package.json":"EHrm","./rules/base.json":"gMFa","./rules/react.json":"Ke6N","./rules/vue.json":"Gkzn","./rules/typescript.json":"T925"}],"FgP5":[function(require,module,exports) {
module.exports={"__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它":"__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它","__proto__ 是已废弃的语法":"__proto__ 是已废弃的语法","<></> 不需要额外引入 Fragment 组件":"<></> 不需要额外引入 Fragment 组件","<button> 必须有 type 属性":'Forbid "button" element without an explicit "type" attribute',"<component> 必须有绑定的组件":"require `v-bind:is` of `<component>` elements","<Type> 容易被理解为 jsx":"<Type> 容易被理解为 jsx","async 函数中必须存在 await 语句":"Disallow async functions which have no `await` expression","async 函数的返回值必须是 Promise":"Requires any function or method that returns a Promise to be marked async","Buffer 构造函数是已废弃的语法":"Buffer 构造函数是已废弃的语法","callback 中的 err 必须被处理":"require error handling in callbacks","callback 之后必须立即 return":"require `return` statements after callbacks","constructor 中必须有 super":"require `super()` calls in constructors","defaultProps 必须按字母排序":"Enforce default props alphabetical sorting","else 中使用 return 可以使代码结构更清晰":"else 中使用 return 可以使代码结构更清晰","finally 中的语句会在 try 之前执行":"finally 中的语句会在 try 之前执行","for in 内部必须有 hasOwnProperty":"require `for-in` loops to include an `if` statement","for of 循环更加易读":"for of 循环更加易读","generator 函数内必须有 yield":"require generator functions to contain `yield`","getter 必须有返回值，并且禁止返回空":"enforce `return` statements in getters","handler 的名称必须是 onXXX 或 handleXXX":"Enforce event handler naming conventions in JSX","hasOwnProperty 比较常用":"hasOwnProperty 比较常用","https://en.wikipedia.org/wiki/Cyclomatic_complexity":"https://en.wikipedia.org/wiki/Cyclomatic_complexity","img, br 标签中禁止有 children":"Prevent passing of children to void DOM elements (e.g. <br />).","interface 可以 implement, extend 和 merge":"interface 可以 implement, extend 和 merge","interface 和 type 定义时必须声明成员的类型":"Requires type annotations to exist","jsx 中禁止使用 bind":"Prevents usage of Function.prototype.bind and arrow functions in React component props","module 已成为 js 的关键字":"module 已成为 js 的关键字","new 后面的类名必须首字母大写":"require constructor names to begin with a capital letter","new 应该作为创建一个类的实例的方法，所以不能不赋值":"new 应该作为创建一个类的实例的方法，所以不能不赋值","no-require-imports 规则已经约束了 require":"no-require-imports 规则已经约束了 require","parseInt 必须传入第二个参数":"enforce the consistent use of the radix argument when using `parseInt()`","Promise 的 reject 中必须传入 Error 对象，而不是字面量":"require using Error objects as Promise rejection reasons","prop 必须有类型限制":"require type definitions in props","prop 的默认值必须匹配它的类型":"enforce props default values to be valid","props 如果不是 required 的字段，必须有默认值":"require default value for props","props 必须按字母排序":"Enforce props alphabetical sorting","props 必须用驼峰式":"enforce specific casing for the Prop name in Vue components","props 的取值必须是基本类型的构造函数，而不是字符串":"require prop type to be a constructor","props, state, context 必须用解构赋值":"Enforce consistent usage of destructuring assignment of props, state, and context","propTypes 的属性必须按照字母排序":"Enforce propTypes declarations alphabetical sorting","public 方法必须定义输入输出参数的类型":"Requires that all public method arguments and return type will be explicitly typed","render 函数必须有返回值":"enforce render function to always return value","render 方法中必须有返回值":"Enforce ES5 or ES6 class for returning value in render function","require 必须在全局作用域下":"require `require()` calls to be placed at top-level module scope","setter 必须有对应的 getter，getter 可以没有对应的 setter":"enforce getter and setter pairs in objects and classes","style 属性的取值必须是 object":"Enforce style prop value is an object","switch 的 case 内必须有 break, return 或 throw，空的 case 除外":"disallow fallthrough of `case` statements","switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块":"disallow lexical declarations in case clauses","switch 语句必须有 default":"require `default` cases in `switch` statements","template 的根节点必须合法":"enforce valid template root","typeof 表达式比较的对象必须是 'undefined', 'object', 'boolean', 'number', 'string', 'function', 'symbol', 或 'bigint'":"enforce comparing `typeof` expressions against valid strings","v-bind 指令必须合法":"enforce valid `v-bind` directives","v-cloak 指令必须合法":"enforce valid `v-cloak` directives","v-else 指令必须合法":"enforce valid `v-else` directives","v-else-if 指令必须合法":"enforce valid `v-else-if` directives","v-for 指令必须合法":"enforce valid `v-for` directives","v-for 指令的元素必须有 v-bind:key":"require `v-bind:key` with `v-for` directives","v-html 指令必须合法":"enforce valid `v-html` directives","v-if 指令必须合法":"enforce valid `v-if` directives","v-model 指令必须合法":"enforce valid `v-model` directives","v-on 指令必须合法":"enforce valid `v-on` directives","v-once 指令必须合法":"enforce valid `v-once` directives","v-pre 指令必须合法":"enforce valid `v-pre` directives","v-show 指令必须合法":"enforce valid `v-show` directives","v-slot 指令必须合法":"enforce valid `v-slot` directives","v-text 指令必须合法":"enforce valid `v-text` directives","var 必须在作用域的最前面":"require `var` declarations be placed at the top of their containing scope","一个 defaultProps 必须有对应的 propTypes":'Enforce all defaultProps are defined and not "required" in propTypes.',"三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的":"三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的","不允许有空函数":"disallow empty functions","不同平台下的路径符号不一致，建议使用 path 处理平台差异性":"不同平台下的路径符号不一致，建议使用 path 处理平台差异性","不强制要求写 displayName":"不强制要求写 displayName","代码块嵌套的深度禁止超过 5 层":"enforce a maximum depth that blocks can be nested","优先使用 interface 而不是 type":"Consistent with type definition either `interface` or `type`","优先使用正则表达式字面量，而不是 RegExp 构造函数":"disallow use of the `RegExp` constructor in favor of regular expression literals","优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private":"优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private","使用 ES2018 中的正则表达式命名组":"enforce using named capture group in regular expression","使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间":"使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间","使用 Flow 时，props 必须设置为只读的":"Require read-only props.","使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环":"Prefer a ‘for-of’ loop over a standard ‘for’ loop if the index is only used to access the array being iterated","使用 includes 而不是 indexOf":"Enforce `includes` method over `indexOf` method","使用 let 就已经解决了这个问题了":"使用 let 就已经解决了这个问题了","使用 non-null 断言时就已经清楚了风险":"使用 non-null 断言时就已经清楚了风险","使用 RegExp#exec 而不是 String#match":"Prefer RegExp#exec() over String#match() if no global flag is provided","使用 sort 时必须传入比较函数":"Enforce giving `compare` argument to `Array#sort`","使用 String#startsWith 而不是其他方式":"Enforce the use of `String#startsWith` and `String#endsWith` instead of other equivalent methods of checking substrings","使用加号时，两者必须同为数字或同为字符串":"When adding two variables, operands must both be of type number or of type string","使用缩写的 : 而不是 v-bind:":"enforce `v-bind` directive style","使用缩写的 @click 而不是 v-on:click":"enforce `v-on` directive style","使用缩写的 #one 而不是 v-slot:one":"enforce `v-slot` directive style","修复 no-unused-vars 不检查 jsx 的问题":"prevent variables used in JSX to be marked as unused","修复 React 被误报为未使用的变量的问题（仅在开启 no-unused-vars 时有效）":"Prevent React to be marked as unused","修改原生对象可能会与将来版本的 js 冲突":"修改原生对象可能会与将来版本的 js 冲突","允许灵活运用两者":"允许灵活运用两者","几乎不会遇到这种场景":"几乎不会遇到这种场景","出现 jsx 的地方必须导入 React":"Prevent missing React when using JSX","出现这种情况时，一般不需要使用 new Promise 实现异步了":"出现这种情况时，一般不需要使用 new Promise 实现异步了","函数必须有名字":"require or disallow named `function` expressions","函数的参数禁止超过 3 个":"enforce a maximum number of parameters in function definitions","函数赋值给变量的时候，函数名必须与变量名一致":"require function names to match the name of the variable or property to which they are assigned","函数返回值必须与声明的类型一致":"Require explicit return types on functions and class methods","函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明":"Warns for any two overloads that could be unified into one by using a union or an optional/rest parameter","创建 Symbol 时必须传入参数":"require symbol descriptions","单独的 if 可以把逻辑表达的更清楚":"单独的 if 可以把逻辑表达的更清楚","单行注释必须写在上一行":"enforce position of line comments","参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数":"参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数","变量名必须是 camelcase 风格的":"Enforce camelCase naming convention","变量必须先定义后使用":"disallow the use of variables before they are defined","变量必须在定义的时候赋值":"require or disallow initialization in variable declarations","变量申明必须排好序":"require variables within the same declaration block to be sorted","只允许在 class 中使用 this":"只允许在 class 中使用 this","使用函数类型别名替代包含函数调用声明的接口":"Use function types instead of interfaces with call signatures","可以简化代码":"可以简化代码","同构应用需要在 didMount 里使用 setState":"同构应用需要在 didMount 里使用 setState","后者表达的更清晰":"后者表达的更清晰","否定的表达式可以把逻辑表达的更清楚":"否定的表达式可以把逻辑表达的更清楚","回调函数嵌套禁止超过 3 层，多了请用 async await 替代":"enforce a maximum depth that callbacks can be nested","在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀":"Warns when a namespace qualifier is unnecessary","在类的非静态方法中，必须存在对 this 的引用":"enforce that class methods utilize `this`","增加可读性":"增加可读性","它们是已废弃的语法":"它们是已废弃的语法","它是已废弃的语法":"它是已废弃的语法","它是通过字符串匹配来判断函数参数 err 的，不准确":"它是通过字符串匹配来判断函数参数 err 的，不准确","对象字面量的键名必须排好序":"require object keys to be sorted","导入必须按规则排序":"enforce sorted import declarations within modules","将 var 定义的变量视为块作用域，禁止在块外使用":"enforce the use of variables within the scope they are defined","将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好":"将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好","已定义的 state 必须使用":"Prevent definition of unused state fields","已定义的变量必须使用":"disallow unused variables","已有 private 修饰符了，没必要限制变量名":"已有 private 修饰符了，没必要限制变量名","已经在 no-undef 中限制了":"已经在 no-undef 中限制了","已经禁止使用 componentWillUpdate 了":"已经禁止使用 componentWillUpdate 了","已经禁止使用 label 了":"已经禁止使用 label 了","已经禁止使用 var 了":"已经禁止使用 var 了","布尔值的属性必须显式的声明值为 true":"Enforce boolean attributes notation in JSX","布尔值类型的 propTypes 的 name 必须为 is 或 has 开头":"Enforces consistent naming for boolean props","当一个节点上出现两个 v-on:click 时，其中一个必须为 exact":"enforce usage of `exact` modifier on `v-on`","当需要写一系列属性的时候，可以更统一":"当需要写一系列属性的时候，可以更统一","很多 api 或文件名都不是 camelcase 风格的":"很多 api 或文件名都不是 camelcase 风格的","很多时候函数的形参和传参是同名的":"很多时候函数的形参和传参是同名的","循环内必须对循环条件中的变量有修改":"disallow unmodified loop conditions","必须使用 !a 替代 a ? false : true":"disallow ternary operators when simpler alternatives exist","必须使用 ... 而不是 apply，比如 foo(...args)":"require spread operators instead of `.apply()`","必须使用 ... 而不是 Object.assign，除非 Object.assign 的第一个参数是一个变量":"disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead.","必须使用 ...args 而不是 arguments":"require rest parameters instead of `arguments`","必须使用 <></> 而不是 React.Fragment":"Enforce shorthand or standard form for React fragments","必须使用 === 或 !==，禁止使用 == 或 !=":"require the use of `===` and `!==`","必须使用 0b11111011 而不是 parseInt()":"disallow `parseInt()` and `Number.parseInt()` in favor of binary, octal, and hexadecimal literals","必须使用 a = {b} 而不是 a = {b: b}":"require or disallow method and property shorthand syntax for object literals","必须使用 Class 的形式创建组件":"Enforce ES5 or ES6 class for React Components","必须使用 if (foo === 5) 而不是 if (5 === foo)":'require or disallow "Yoda" conditions',"必须使用 isNaN(foo) 而不是 foo === NaN":"require calls to `isNaN()` when checking for `NaN`","必须使用 x = x + y 而不是 x += y":"require or disallow assignment operator shorthand where possible","必须使用函数式组件":"Enforce stateless components to be written as a pure function","必须使用模版字符串而不是字符串连接":"require template literals instead of string concatenation","必须使用解构赋值":"require destructuring from arrays and/or objects","必须只使用函数声明或只使用函数表达式":"enforce the consistent use of either `function` declarations or expressions","必须在构造函数中初始化 state":"State initialization in an ES6 class component should be in a constructor","必须直接使用 export default 导出组件":"require the component to be directly exported","必须设置类的成员的可访问性":"Require explicit accessibility modifiers on class properties and methods","指定类成员的排序规则":"Require a consistent member declaration order","接口名称必须以 I 开头":"Require that interface names should or should not prefixed with `I`","支持在模版中使用 eslint-disable-next-line 等注释":"support comment-directives in `<template>`","数组中的 jsx 必须有 key":"Report missing `key` props in iterators/collection literals","数组的方法除了 forEach 之外，回调函数必须有返回值":"enforce `return` statements in callbacks of array methods","方法调用时需要绑定到正确的 this 上":"Enforces unbound methods are called with their expected scope","既然已经使用注释来忽略编译错误了，说明已经清楚可能带来的后果":"既然已经使用注释来忽略编译错误了，说明已经清楚可能带来的后果","是否允许使用 // @ts-ignore 来忽略编译错误":"Bans “// @ts-ignore” comments from being used","有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181":"有一个 bug：https://github.com/yannickcr/eslint-plugin-react/issues/1181","有些场景下还是需要用到这个":"有些场景下还是需要用到这个","有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难":"有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难","有时为了紧凑需要挨在一起，有时为了可读性需要空一行":"有时为了紧凑需要挨在一起，有时为了可读性需要空一行","有时后者可以使代码结构更清晰":"有时后者可以使代码结构更清晰","有时需要将一个空函数设置为某个项的默认值":"有时需要将一个空函数设置为某个项的默认值","有默认值的参数必须放在函数参数的末尾":"enforce default parameters to be last","条件判断必须传入布尔值":"Restricts the types allowed in boolean expressions","条件表达式禁止是永远为真（或永远为假）的":"Prevents conditionals where the type is always truthy or always falsy","某些特殊字符很难看出差异，最好不要在正则中使用":"某些特殊字符很难看出差异，最好不要在正则中使用","标签属性必须按规则排序":"enforce order of attributes","模块化之后，不会出现这种在全局作用域下定义变量的情况":"模块化之后，不会出现这种在全局作用域下定义变量的情况","模版中已定义的变量必须使用":"disallow unused variable definitions of v-for directives or scope attributes","模版中的变量名禁止与前一个作用域重名":"disallow variable declarations from shadowing variables declared in the outer scope","模版字符串中的变量类型必须是字符串":"Enforce template literal expressions to be of string type","正则表达式中必须要加上 u 标志":"enforce the use of `u` flag on RegExp","正则表达式已经较难理解了，没必要强制加上命名组":"正则表达式已经较难理解了，没必要强制加上命名组","没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93":"没有官方文档，并且存在很多 bug：https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&type=Issues&utf8=%E2%9C%93","注释的斜线或 * 后必须有空格":"enforce consistent spacing after the `//` or `/*` in a comment","注释的首字母必须大写":"enforce or disallow capitalization of the first letter of a comment","申明后不再被修改的变量必须使用 const 来申明":"require `const` declarations for variables that are never reassigned after declared","相同类型的 require 必须放在一起":"disallow `require` calls to be mixed with regular variable declarations","禁止 <template> 使用 key 属性":"disallow `key` attribute on `<template>`","禁止 delete 时传入的 key 是动态的":"Bans usage of the delete operator with computed key expressions","禁止 else 中只有一个单独的 if":"disallow `if` statements as the only statement in `else` blocks","禁止 if 里有否定的表达式":"disallow negated conditions","禁止 jsx 中使用无用的引号":"Disallow unnecessary JSX expressions when literals alone are sufficient or enfore JSX expressions on literals in JSX children or attributes","禁止 label 名称与已定义的变量重复":"disallow labels that share a name with a variable","禁止 throw 字面量，必须 throw 一个 Error 对象":"disallow throwing literals as exceptions","禁止不必要的布尔类型转换":"disallow unnecessary boolean casts","禁止与负零进行比较":"disallow comparing against -0","禁止使用 __iterator__":"disallow the use of the `__iterator__` property","禁止使用 __proto__":"disallow the use of the `__proto__` property","禁止使用 'strict';":"require or disallow strict mode directives","禁止使用 {...props}":"Prevent JSX prop spreading","禁止使用 \\ 来换行字符串":"disallow multiline strings","禁止使用 ++ 或 --":"disallow the unary operators `++` and `--`","禁止使用 ~+ 等难以理解的类型转换，仅允许使用 !!":"disallow shorthand type conversions","禁止使用 0 开头的数字表示八进制数":"disallow octal literals","禁止使用 alert":"disallow the use of `alert`, `confirm`, and `prompt`","禁止使用 any":"Disallow usage of the `any` type","禁止使用 Array 构造函数":"disallow `Array` constructors","禁止使用 Array 构造函数时传入的参数超过一个":"disallow `Array` constructors","禁止使用 caller 或 callee":"disallow the use of `arguments.caller` or `arguments.callee`","禁止使用 console":"disallow the use of `console`","禁止使用 continue":"disallow `continue` statements","禁止使用 dangerouslySetInnerHTML":"Prevent usage of dangerous JSX props","禁止使用 debugger":"disallow the use of `debugger`","禁止使用 eval":"disallow the use of `eval()`","禁止使用 findDOMNode":"Prevent usage of findDOMNode","禁止使用 foo == null，必须使用 foo === null":"disallow `null` comparisons without type-checking operators","禁止使用 foo['bar']，必须写成 foo.bar":"enforce dot notation whenever possible","禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable":"disallow calling some `Object.prototype` methods directly on objects","禁止使用 isMounted":"Prevent usage of isMounted","禁止使用 label":"disallow labeled statements","禁止使用 magic numbers":"Disallows magic numbers","禁止使用 module 来定义命名空间":"Require the use of the `namespace` keyword instead of the `module` keyword to declare custom TypeScript modules","禁止使用 namespace 来定义命名空间":"Disallow the use of custom TypeScript modules and namespaces","禁止使用 new Function":"disallow `new` operators with the `Function` object","禁止使用 new 来生成 String, Number 或 Boolean":"disallow `new` operators with the `String`, `Number`, and `Boolean` objects","禁止使用 new 来生成 Symbol":"disallow `new` operators with the `Symbol` object","禁止使用 node 中的同步的方法，比如 fs.readFileSync":"disallow synchronous methods","禁止使用 non-null 断言（感叹号）":"Disallows non-null assertions using the `!` postfix operator","组件的名称必须符合 PascalCase":"Enforce PascalCase for user-defined JSX components","禁止使用 process.env.NODE_ENV":"disallow the use of `process.env`","禁止使用 process.exit(0)":"disallow the use of `process.exit()`","禁止使用 PropTypes.any PropTypes.array 和 PropTypes.object":"Forbid certain propTypes","禁止使用 ReactDOM.render 的返回值":"Prevent usage of the return value of React.render","禁止使用 require":"Disallows invocation of `require()`","禁止使用 require 来引入模块":"Disallows the use of require statements except in import statements","禁止使用 setState":"Prevent usage of setState",'禁止使用 target="_blank"':'Forbid target="_blank" attribute without rel="noopener noreferrer"',"禁止使用 undefined":"disallow the use of `undefined` as an identifier","禁止使用 v-html":"disallow use of v-html to prevent XSS attack","禁止使用 var":"require `let` or `const` instead of `var`","禁止使用 void":"disallow `void` operators","禁止使用 with":"disallow `with` statements","禁止使用三元表达式":"disallow ternary operators","禁止使用三斜杠导入文件":"Sets preference level for triple slash directives versus ES6-style import declarations","禁止使用不安全的生命周期方法 componentWillMount, componentWillReceiveProps, componentWillUpdate":"Prevent usage of unsafe lifecycle methods","禁止使用位运算":"disallow bitwise operators","禁止使用保留字作为变量名":"disallow identifiers from shadowing restricted names","禁止使用八进制的转义符":"disallow octal escape sequences in string literals","禁止使用另一个组件的 propTypes":"Forbid using another component's propTypes","禁止使用字符串 ref":"Prevent string definitions for references and prevent referencing this.refs","禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e":"disallow nested ternary expressions","禁止使用已废弃的 api":"Prevent usage of deprecated methods","禁止使用指定的全局变量":"disallow specified global variables","禁止使用指定的对象属性":"disallow certain properties on certain objects","禁止使用指定的标识符":"disallow specified identifiers","禁止使用指定的模块":"disallow specified modules when loaded by `require`","禁止使用指定的类型":"Bans specific types from being used","禁止使用指定的组件":"Forbid certain elements","禁止使用指定的语法":"disallow specified syntax","禁止使用数组的索引作为 key":"Prevent usage of Array index in keys","禁止使用未定义的变量":"disallow the use of undeclared variables","禁止使用未定义的组件":"Disallow undeclared variables in JSX","禁止使用没必要的 {} 作为代码块":"disallow unnecessary nested blocks","禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中":"disallow irregular whitespace","禁止使用类型别名":"Disallow the use of type aliases","禁止使用逗号操作符":"disallow comma operators","禁止修改原生对象":"disallow extending native types","禁止出现 HTML 中的属性，如 class":"Prevent usage of unknown DOM property","禁止出现 location.href = 'javascript:void(0)';":"disallow `javascript:` urls","禁止出现未使用的 propTypes":"Prevent definitions of unused prop types","禁止出现没必要的 bind":"disallow unnecessary calls to `.bind()`","禁止出现没必要的 call 或 apply":"disallow unnecessary calls to `.call()` and `.apply()`","禁止出现没必要的 constructor":"disallow unnecessary constructors","禁止出现没必要的 label":"disallow unnecessary labels","禁止出现没必要的字符串连接":"disallow unnecessary concatenation of literals or template literals","禁止出现没必要的计算键名":"disallow unnecessary computed property keys in object literals","禁止出现没必要的转义":"disallow unnecessary escape characters","禁止出现没用到的 label":"disallow unused labels","禁止出现空代码块，允许 catch 为空代码块":"disallow empty block statements","禁止出现语法错误":"disallow parsing errors in `<template>`","禁止出现重复的 props":"Enforce no duplicate props","禁止出现重复的属性":"disallow duplication of attributes","禁止函数在不同分支返回不同类型的值":"require `return` statements to either always or never specify values","禁止函数的循环复杂度超过 20":"enforce a maximum cyclomatic complexity allowed in a program","禁止变量名出现下划线":"disallow dangling underscores in identifiers","禁止变量申明时用逗号一次申明多个":"enforce variables to be declared either together or separately in functions","禁止在 <textarea> 中出现模版语法 {{message}}":"disallow mustaches in `<textarea>`","禁止在 catch 中仅仅只是把错误 throw 出去":"disallow unnecessary `catch` clauses","禁止在 componentDidMount 里使用 setState":"Prevent usage of setState in componentDidMount","禁止在 componentDidUpdate 里使用 setState":"Prevent usage of setState in componentDidUpdate","禁止在 componentWillUpdate 中使用 setState":"Prevent usage of setState in componentWillUpdate","禁止在 dom 组件中使用指定的 props":"Forbid certain props on DOM Nodes","禁止在 else 内使用 return，必须改为提前结束":"disallow `else` blocks after `return` statements in `if` statements","禁止在 finally 中出现 return, throw, break 或 continue":"disallow control flow statements in `finally` blocks","禁止在 if 代码块内出现函数声明":"disallow variable or `function` declarations in nested blocks","禁止在 in 或 instanceof 操作符的左侧变量前使用感叹号":"disallow negating the left operand of relational operators","禁止在 jsx 中使用像注释的字符串":"Comments inside children section of tag should be placed inside braces","禁止在 jsx 中出现字符串":"Prevent using string literals in React component definition","禁止在 React.PureComponent 中使用 shouldComponentUpdate":"Flag shouldComponentUpdate when extending PureComponent","禁止在 RegExp 构造函数中出现非法的正则表达式":"disallow invalid regular expression strings in `RegExp` constructors","禁止在 return 语句里使用 await":"disallow unnecessary `return await`","禁止在 return 语句里赋值":"disallow assignment operators in `return` statements","禁止在 return, throw, break 或 continue 之后还有代码":"disallow unreachable code after `return`, `throw`, `continue`, and `break` statements","禁止在 setState 中使用 this.state":"Reports when this.state is accessed within setState","禁止在 setTimeout 或 setInterval 中传入字符串":"disallow the use of `eval()`-like methods","禁止在 super 被调用之前使用 this 或 super":"disallow `this`/`super` before calling `super()` in constructors","禁止在 switch 语句中出现重复测试表达式的 case":"disallow duplicate case labels","禁止在 v-on 的值中调用函数":"enforce or forbid parentheses after method calls without arguments in `v-on` directives","禁止在一个文件创建两个组件":"Prevent multiple component definition per file","禁止在代码后添加单行注释":"disallow inline comments after code","禁止在使用了 dangerouslySetInnerHTML 的组件内添加 children":"Report when a DOM element is using both children and dangerouslySetInnerHTML","禁止在全局作用域下定义变量或申明函数":"disallow variable and `function` declarations in the global scope","禁止在函数参数中出现重复名称的参数":"disallow duplicate arguments in `function` definitions","禁止在函数组件中使用 this":'Report "this" being used in stateless components',"禁止在同一个元素上使用 v-if 和 v-for 指令":"disallow use v-if on the same element as v-for","禁止在定义变量之前就使用它":"Disallow the use of variables before they are defined","禁止在对象字面量中出现重复的键名":"disallow duplicate keys in object literals","禁止在循环内的函数内部出现循环体条件语句中定义的变量":"disallow function declarations that contain unsafe references inside loop statements","禁止在接口中定义 constructor，或在类中定义 new":"Enforce valid definition of `new` and `constructor`","禁止在数组中出现连续的逗号":"disallow sparse arrays","禁止在普通字符串中出现模版字符串里的变量形式":"disallow template literal placeholder syntax in regular strings","禁止在模版中用 this":"disallow usage of `this` in template","禁止在正则表达式中使用空的字符集 []":"disallow empty character classes in regular expressions","禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/":"disallow control characters in regular expressions","禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/":"disallow division operators explicitly at the beginning of regular expressions","禁止在正则表达式中出现连续的空格":"disallow multiple spaces in regular expressions","禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了":"disallow assignment operators in conditional expressions","禁止在类之外的地方使用 this":"disallow `this` keywords outside of classes or class-like objects","禁止在组件的内部存在未转义的 >, \", ' 或 }":"Detect unescaped HTML entities, which might represent malformed tags","禁止在自定义组件中使用指定的 props":"Forbid certain props on components","禁止在计算属性中对属性修改":"disallow side effects in computed properties","禁止定义在 components 中的组件未使用":"disallow registering components that are not used inside templates","禁止定义没必要的类，比如只有静态方法的类":"Forbids the use of classes as namespaces","禁止定义空的接口":"Disallow the declaration of empty interfaces","禁止对 __dirname 或 __filename 使用字符串连接":"disallow string concatenation with `__dirname` and `__filename`","禁止对 array 使用 for in 循环":"Disallow iterating over an array with a for-in loop","禁止对一个变量使用 delete":"disallow deleting variables","禁止对使用 const 定义的常量重新赋值":"disallow reassigning `const` variables","禁止对全局变量赋值":"disallow assignments to native objects or read-only global variables","禁止对函数的参数重新赋值":"disallow reassigning `function` parameters","禁止对导入的模块进行赋值":"disallow assigning to imported bindings","禁止对已定义的 class 重新赋值":"disallow reassigning class members","禁止对没有 then 方法的对象使用 await":"Disallows awaiting a value that is not a Thenable","禁止导入指定的模块":"disallow specified modules when loaded by `import`","禁止将 async 函数做为 new Promise 的回调函数":"disallow using an async function as a Promise executor","禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了":"disallow `await` inside of loops","禁止将 await 或 yield 的结果做为运算符的后面项":"disallow assignments that can lead to race conditions due to usage of `await` or `yield`","禁止将 catch 的第一个参数 error 重新赋值":"disallow reassigning exceptions in `catch` clauses","禁止将 children 作为一个 prop":"Prevent passing of children as props.","禁止将 Math, JSON 或 Reflect 直接作为函数调用":"disallow calling global object properties as functions","禁止将 this 赋值给其他变量，除非是解构赋值":"Disallow aliasing `this`","禁止将 undefined 赋值给变量":"disallow initializing variables to `undefined`","禁止将一个函数声明重新赋值":"disallow reassigning `function` declarations","禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式":"disallow constant expressions in conditions","禁止将自己与自己比较":"disallow comparisons where both sides are exactly the same","禁止将自己赋值给自己":"disallow assignments where both sides are exactly the same","禁止方向错误的 for 循环":'enforce "for" loop update clause moving the counter in the right direction.',"禁止无意义的 Fragment 组件":"Disallow unnecessary fragments","禁止无用的类型断言":"Warns if a type assertion does not change the type of an expression","禁止无用的表达式":"Disallow unused expressions","禁止正则表达式中使用肉眼无法区分的特殊字符":"disallow characters which are made with multiple code points in character class syntax","禁止没必要的 return":"disallow redundant return statements","禁止注释中出现 TODO 和 FIXME":"disallow specified warning terms in comments","禁止直接 new Object":"disallow `Object` constructors","禁止直接 new require('foo')":"disallow `new` operators with calls to `require`","禁止直接 new 一个类而不赋值":"disallow `new` operators outside of assignments or comparisons","禁止直接使用 Buffer":"disallow use of the `Buffer()` constructor","禁止直接修改 this.state":"Prevent direct mutation of this.state","禁止组件的属性或生命周期大小写错误":"Prevent common typos","禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型":"Disallows explicit type declarations for variables or parameters initialized to a number, string, or boolean","禁止给布尔值 props 添加默认值":"disallow boolean defaults","禁止给类的构造函数的参数添加修饰符":"Disallow the use of parameter properties in class constructors","禁止范型的类型有默认值时，将范型设置为该默认值":"Warns if an explicitly specified type argument is the default for that type parameter","禁止覆盖保留字":"disallow overwriting reserved keys","禁止解构赋值中出现空 {} 或 []":"disallow empty destructuring patterns","禁止解构赋值时出现同样名字的的重命名，比如 let { foo: foo } = bar;":"disallow renaming import, export, and destructured assignments to the same name","禁止调用 Promise 时没有处理异常情况":"Requires Promise-like values to be handled appropriately.","禁止连续赋值，比如 foo = bar = 1":"disallow use of chained assignment expressions","禁止重复定义变量":"disallow variable redeclaration","禁止重复定义类的成员":"disallow duplicate class members","禁止重复导入模块":"disallow duplicate module imports","禁止重复的键名":"disallow duplication of field names","禁用 var 之后，编译阶段就会报错了":"禁用 var 之后，编译阶段就会报错了","禁用已废弃的 scope 属性":"disallow deprecated `scope` attribute (in Vue.js 2.5.0+)","私有变量如果没有在构造函数外被赋值，则必须设为 readonly":"Requires that private members are marked as `readonly` if they're never modified outside of the constructor","私有成员必须以 _ 开头":"Enforces naming conventions for class members by visibility","类名与接口名必须为 PascalCase":"Require PascalCased class and interface names","类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）":"Enforces consistent usage of type assertions.","类型相关的约束交给 TypeScript":"类型相关的约束交给 TypeScript","类的成员之间是否需要空行":"require or disallow an empty line between class members","类的静态属性必须使用 static 关键字定义":"Defines where React component static properties should be positioned.","约束多行注释的格式":"enforce a particular style for multiline comments","约束泛型的命名规则":"Enforces naming of generic type variables","组件内方法必须按照一定规则排序":"Enforce component methods order","组件内没有 children 时，必须使用自闭和写法":"Prevent extra closing tags for components without children","组件名称必须和文件名一致":"require component name property to match its file name","组件必须写 propTypes":"Prevent missing props validation in a React component definition","组件必须有 displayName 属性":"Prevent missing displayName in a React component definition","组件必须有 shouldComponentUpdate":"Enforce React components to have a shouldComponentUpdate method","组件的 data 属性的值必须是一个函数":"enforce component's data property to be a function","组件的属性必须为一定的顺序":"enforce order of properties in components","统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入":"统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入","统一关闭 requires type information 的规则":"统一关闭 requires type information 的规则","编译阶段就会报错了":"编译阶段就会报错了","编译阶段检查就足够了":"编译阶段检查就足够了","缺少 TypeScript 的支持，类型判断是不准确的":"缺少 TypeScript 的支持，类型判断是不准确的","能写注释已经不容易了，不需要限制太多":"能写注释已经不容易了，不需要限制太多","要求太严格了，有时需要在循环中写 await":"要求太严格了，有时需要在循环中写 await","计算属性必须有返回值":"enforce that a return statement is present in computed property","计算属性禁止包含异步方法":"disallow asynchronous actions in computed properties","转义可以使代码更易懂":"转义可以使代码更易懂","这和 eval 是等价的":"这和 eval 是等价的","这样会导致不符合预期的结果\nhttps://github.com/eslint/eslint/issues/11899\n在上面 issue 修复之前，关闭此规则":"这样会导致不符合预期的结果\nhttps://github.com/eslint/eslint/issues/11899\nOff this rule until the issue above is resolved","这样的 catch 是没有意义的，等价于直接执行 try 里的代码":"这样的 catch 是没有意义的，等价于直接执行 try 里的代码","避免错误的使用 Promise":"Avoid using promises in places not designed to handle them","重载的函数必须写在一起":"Require that member overloads be consecutive","限制 jsx 层级":"Validate JSX maximum depth","限制 this 的别名":"enforce consistent naming when capturing the current execution context","限制一个文件中类的数量":"enforce a maximum number of classes per file","限制一个文件最多的行数":"enforce a maximum number of lines per file","限制一行中的语句数量":"enforce a maximum number of statements allowed per line","限制函数块中的代码行数":"enforce a maximum number of line of code in a function","限制函数块中的语句数量":"enforce a maximum number of statements allowed in function blocks","限制变量名必须匹配指定的正则表达式":"require identifiers to match a specified regular expression","限制变量名长度":"enforce minimum and maximum identifier lengths","限制数组类型必须使用 Array<T> 或 T[]":"Requires using either `T[]` or `Array<T>` for arrays","限制文件后缀":"Restrict file extensions that may contain JSX","限制组件名的风格":"enforce specific casing for the component naming style in template","限制组件的 name 属性的值的风格":"enforce specific casing for the name property in Vue components","限制自定义组件的属性风格":"enforce attribute naming style on custom components in template","限制语句之间的空行规则，比如变量定义完之后必须要空行":"require or disallow padding lines between statements","非 required 的 prop 必须有 defaultProps":"Enforce a defaultProps definition for every prop that is not a required prop.","隐藏已禁用的规则":"Hide disabled rules","规则说明":"Rule Description","错误的示例":"Incorrect Example","正确的示例":"Correct Example","配置：":"Options:","setter 和 getter 必须写在一起":"Require grouped accessor pairs in object literals and classes","禁止在构造函数中返回值":"Disallow returning value in constructor","禁止 if else 的条件判断中出现重复的条件":"Disallow duplicate conditions in `if-else-if` chains","禁止 setter 有返回值":"Disallow returning values from setters","禁止变量名与上层作用域内的已定义的变量重复":"Disallow variable declarations from shadowing variables declared in the outer scope","使用 ES2016 的语法 ** 替代 Math.pow":"Disallow the use of `Math.pow` in favor of the `**` operator","禁止多余的 non-null 断言":"Disallow extra non-null assertion","禁止已定义的变量未使用":"Disallow unused variables and arguments","使用 ?? 替代 ||":"Enforce the usage of the nullish coalescing operator instead of logical chaining","使用 optional chaining 替代 &&":"Prefer using concise optional chain expressions instead of chained logical ands","async 函数必须返回 await":"Rules for awaiting returned promises","组件的 name 属性必须符合 PascalCase":"Enforce `PascalCase` for component definition `name`","这是官方建议的规范":"Officially recommended","组件中必须按照 <script>, <template>, <style> 排序":"Enforce order of component top-level elements to be `<script>`, `<template>` and `<style>`","这是官方建议的顺序":"Officially recommended","使用 v-slot 替代已废弃的 slot":"Use `v-slot` instead of `slot`","禁用已废弃的 slot-scope":"Disallow deprecated `slot-scope` attribute","禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式、模版字符串中或 HTML 内容中":"Disallow irregular whitespace","组件的 name 属性静止使用保留字":"Disallow the use of reserved names in component definitions","禁止使用 style 属性":"Disallow static inline `style` attributes","当你的 vue 版本较老时，禁用还未支持的语法":"Disallow unsupported Vue.js syntax on the specified version","组件必须包含 name 属性":"Require a `name` property in Vue components","class 的值必须按字母排序":"Enforce static class names order to be alphabetical","v-bind:foo.sync 指令必须合法":"This rule checks whether every `.sync` modifier on `v-bind` directives is valid","限制函数式组件的函数形式（函数声明、函数表达式或箭头函数）":"Standardize the way function component get defined (fixable)","一些场景还不能覆盖，如 export default function，自动修复功能在 ts 中有些问题":"There are some unfixable patterns such as `export default function`, and autofixer is somewhat constrained for TypeScript users",'禁止出现 href="javascript:void(0)"':"Forbid `javascript:` URLs","React 已经有 warning 了，并且会在将来禁止此类属性值":"Any URLs starting with `javascript:` scheme log a warning in React, in a future major release, React will throw an error if it encounters a `javascript:` URL","两个 inline 元素之间必须有空格，否则视觉上它们就贴在一起了":"Prevent adjacent inline elements not separated by whitespace","这是样式的问题，不应该由空格约束":"This is a styling issue","<template> <script> <style> 之间必须由空行":"There should be blank lines between `<template>` `<script>` `<style>`","代码格式问题，最好由 Prettier 解决":"This is a coding style issue, should solved by Prettier","props 的键名必须排好序":"enforce sort-keys in a manner that is compatible with order-in-components","禁止使用 // @ts-ignore // @ts-nocheck // @ts-check":"`// @ts-ignore` `// @ts-nocheck` `// @ts-check` is forbidden","这种注释本身就是对特殊代码的说明":"This kind of comments is a specific explain for code itself","有默认值或可选的参数必须放到最后":"Enforce default parameters to be last","导出的函数或类中的 public 方法必须定义输入输出参数的类型":"Require explicit return and argument types on exported functions' and classes' public class methods","限制各种变量或类型的命名规则":"Enforces naming conventions for everything across a codebase","禁止在 optional chaining 之后使用 non-null 断言（感叹号）":"Disallows using a non-null assertion after an optional chain expression","optional chaining 后面的属性一定是非空的":"properties after optional chaining is definitely non-null","测试表达式中的布尔类型禁止与 true 或 false 直接比较":"Flags unnecessary equality comparisons against boolean literals","使用 as const 替代 as 'bar'":"Prefer usage of `as const` over literal type","as const 是新语法，不是很常见":"`as const` is a new grammar which is not common used","使用联合类型作为 switch 的对象时，必须包含每一个类型的 case":"Exhaustiveness checking in switch with union type"};
},{}],"hhYk":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("./locale/en-US.json"));exports.avaliableLanguages=["en-US","zh-CN"],exports.languageOptions={"en-US":"English","zh-CN":"简体中文"},exports.locale={"en-US":t.default,"zh-CN":{}};
},{"./locale/en-US.json":"FgP5"}],"TPIp":[function(require,module,exports) {
"use strict";function e(e){for(var r in e)exports.hasOwnProperty(r)||(exports[r]=e[r])}Object.defineProperty(exports,"__esModule",{value:!0}),e(require("./build")),e(require("./i18n"));
},{"./build":"ltE3","./i18n":"hhYk"}],"q9NT":[function(require,module,exports) {
"use strict";var t=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});var e=t(require("react"));exports.GitHubCorner=function(t){var r=t.href,o='<a href="'.concat(r,'" class="github-corner" aria-label="View source on Github"><svg width="80" height="80" viewBox="0 0 250 250" style="fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;" aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px 106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>');return e.default.createElement("div",{dangerouslySetInnerHTML:{__html:o}})};
},{"react":"n8MK"}],"oWqx":[function(require,module,exports) {
var global = arguments[3];
var define;
var o,e=arguments[3];!function(n){var r="object"==typeof exports&&exports&&!exports.nodeType&&exports,t="object"==typeof module&&module&&!module.nodeType&&module,u="object"==typeof e&&e;u.global!==u&&u.window!==u&&u.self!==u||(n=u);var i,f,c=2147483647,l=36,s=1,p=26,a=38,d=700,h=72,v=128,g="-",w=/^xn--/,x=/[^\x20-\x7E]/,y=/[\x2E\u3002\uFF0E\uFF61]/g,m={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},C=l-s,b=Math.floor,j=String.fromCharCode;function A(o){throw new RangeError(m[o])}function I(o,e){for(var n=o.length,r=[];n--;)r[n]=e(o[n]);return r}function E(o,e){var n=o.split("@"),r="";return n.length>1&&(r=n[0]+"@",o=n[1]),r+I((o=o.replace(y,".")).split("."),e).join(".")}function F(o){for(var e,n,r=[],t=0,u=o.length;t<u;)(e=o.charCodeAt(t++))>=55296&&e<=56319&&t<u?56320==(64512&(n=o.charCodeAt(t++)))?r.push(((1023&e)<<10)+(1023&n)+65536):(r.push(e),t--):r.push(e);return r}function O(o){return I(o,function(o){var e="";return o>65535&&(e+=j((o-=65536)>>>10&1023|55296),o=56320|1023&o),e+=j(o)}).join("")}function S(o,e){return o+22+75*(o<26)-((0!=e)<<5)}function T(o,e,n){var r=0;for(o=n?b(o/d):o>>1,o+=b(o/e);o>C*p>>1;r+=l)o=b(o/C);return b(r+(C+1)*o/(o+a))}function L(o){var e,n,r,t,u,i,f,a,d,w,x,y=[],m=o.length,C=0,j=v,I=h;for((n=o.lastIndexOf(g))<0&&(n=0),r=0;r<n;++r)o.charCodeAt(r)>=128&&A("not-basic"),y.push(o.charCodeAt(r));for(t=n>0?n+1:0;t<m;){for(u=C,i=1,f=l;t>=m&&A("invalid-input"),((a=(x=o.charCodeAt(t++))-48<10?x-22:x-65<26?x-65:x-97<26?x-97:l)>=l||a>b((c-C)/i))&&A("overflow"),C+=a*i,!(a<(d=f<=I?s:f>=I+p?p:f-I));f+=l)i>b(c/(w=l-d))&&A("overflow"),i*=w;I=T(C-u,e=y.length+1,0==u),b(C/e)>c-j&&A("overflow"),j+=b(C/e),C%=e,y.splice(C++,0,j)}return O(y)}function M(o){var e,n,r,t,u,i,f,a,d,w,x,y,m,C,I,E=[];for(y=(o=F(o)).length,e=v,n=0,u=h,i=0;i<y;++i)(x=o[i])<128&&E.push(j(x));for(r=t=E.length,t&&E.push(g);r<y;){for(f=c,i=0;i<y;++i)(x=o[i])>=e&&x<f&&(f=x);for(f-e>b((c-n)/(m=r+1))&&A("overflow"),n+=(f-e)*m,e=f,i=0;i<y;++i)if((x=o[i])<e&&++n>c&&A("overflow"),x==e){for(a=n,d=l;!(a<(w=d<=u?s:d>=u+p?p:d-u));d+=l)I=a-w,C=l-w,E.push(j(S(w+I%C,0))),a=b(I/C);E.push(j(S(a,0))),u=T(n,m,r==t),n=0,++r}++n,++e}return E.join("")}if(i={version:"1.4.1",ucs2:{decode:F,encode:O},decode:L,encode:M,toASCII:function(o){return E(o,function(o){return x.test(o)?"xn--"+M(o):o})},toUnicode:function(o){return E(o,function(o){return w.test(o)?L(o.slice(4).toLowerCase()):o})}},"function"==typeof o&&"object"==typeof o.amd&&o.amd)o("punycode",function(){return i});else if(r&&t)if(module.exports==r)t.exports=i;else for(f in i)i.hasOwnProperty(f)&&(r[f]=i[f]);else n.punycode=i}(this);
},{}],"YsIc":[function(require,module,exports) {
"use strict";module.exports={isString:function(n){return"string"==typeof n},isObject:function(n){return"object"==typeof n&&null!==n},isNull:function(n){return null===n},isNullOrUndefined:function(n){return null==n}};
},{}],"J6GP":[function(require,module,exports) {
"use strict";function r(r,e){return Object.prototype.hasOwnProperty.call(r,e)}module.exports=function(t,n,o,a){n=n||"&",o=o||"=";var s={};if("string"!=typeof t||0===t.length)return s;var p=/\+/g;t=t.split(n);var u=1e3;a&&"number"==typeof a.maxKeys&&(u=a.maxKeys);var c=t.length;u>0&&c>u&&(c=u);for(var i=0;i<c;++i){var y,l,f,v,b=t[i].replace(p,"%20"),d=b.indexOf(o);d>=0?(y=b.substr(0,d),l=b.substr(d+1)):(y=b,l=""),f=decodeURIComponent(y),v=decodeURIComponent(l),r(s,f)?e(s[f])?s[f].push(v):s[f]=[s[f],v]:s[f]=v}return s};var e=Array.isArray||function(r){return"[object Array]"===Object.prototype.toString.call(r)};
},{}],"bvhO":[function(require,module,exports) {
"use strict";var n=function(n){switch(typeof n){case"string":return n;case"boolean":return n?"true":"false";case"number":return isFinite(n)?n:"";default:return""}};module.exports=function(o,u,c,a){return u=u||"&",c=c||"=",null===o&&(o=void 0),"object"==typeof o?r(t(o),function(t){var a=encodeURIComponent(n(t))+c;return e(o[t])?r(o[t],function(e){return a+encodeURIComponent(n(e))}).join(u):a+encodeURIComponent(n(o[t]))}).join(u):a?encodeURIComponent(n(a))+c+encodeURIComponent(n(o)):""};var e=Array.isArray||function(n){return"[object Array]"===Object.prototype.toString.call(n)};function r(n,e){if(n.map)return n.map(e);for(var r=[],t=0;t<n.length;t++)r.push(e(n[t],t));return r}var t=Object.keys||function(n){var e=[];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.push(r);return e};
},{}],"fk5h":[function(require,module,exports) {
"use strict";exports.decode=exports.parse=require("./decode"),exports.encode=exports.stringify=require("./encode");
},{"./decode":"J6GP","./encode":"bvhO"}],"Mej7":[function(require,module,exports) {
"use strict";var t=require("punycode"),s=require("./util");function h(){this.protocol=null,this.slashes=null,this.auth=null,this.host=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.query=null,this.pathname=null,this.path=null,this.href=null}exports.parse=b,exports.resolve=O,exports.resolveObject=d,exports.format=q,exports.Url=h;var e=/^([a-z0-9.+-]+:)/i,a=/:[0-9]*$/,r=/^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,o=["<",">",'"',"`"," ","\r","\n","\t"],n=["{","}","|","\\","^","`"].concat(o),i=["'"].concat(n),l=["%","/","?",";","#"].concat(i),p=["/","?","#"],c=255,u=/^[+a-z0-9A-Z_-]{0,63}$/,f=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,m={javascript:!0,"javascript:":!0},v={javascript:!0,"javascript:":!0},g={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,"http:":!0,"https:":!0,"ftp:":!0,"gopher:":!0,"file:":!0},y=require("querystring");function b(t,e,a){if(t&&s.isObject(t)&&t instanceof h)return t;var r=new h;return r.parse(t,e,a),r}function q(t){return s.isString(t)&&(t=b(t)),t instanceof h?t.format():h.prototype.format.call(t)}function O(t,s){return b(t,!1,!0).resolve(s)}function d(t,s){return t?b(t,!1,!0).resolveObject(s):s}h.prototype.parse=function(h,a,o){if(!s.isString(h))throw new TypeError("Parameter 'url' must be a string, not "+typeof h);var n=h.indexOf("?"),b=-1!==n&&n<h.indexOf("#")?"?":"#",q=h.split(b);q[0]=q[0].replace(/\\/g,"/");var O=h=q.join(b);if(O=O.trim(),!o&&1===h.split("#").length){var d=r.exec(O);if(d)return this.path=O,this.href=O,this.pathname=d[1],d[2]?(this.search=d[2],this.query=a?y.parse(this.search.substr(1)):this.search.substr(1)):a&&(this.search="",this.query={}),this}var j=e.exec(O);if(j){var x=(j=j[0]).toLowerCase();this.protocol=x,O=O.substr(j.length)}if(o||j||O.match(/^\/\/[^@\/]+@[^@\/]+/)){var A="//"===O.substr(0,2);!A||j&&v[j]||(O=O.substr(2),this.slashes=!0)}if(!v[j]&&(A||j&&!g[j])){for(var C,I,w=-1,U=0;U<p.length;U++){-1!==(k=O.indexOf(p[U]))&&(-1===w||k<w)&&(w=k)}-1!==(I=-1===w?O.lastIndexOf("@"):O.lastIndexOf("@",w))&&(C=O.slice(0,I),O=O.slice(I+1),this.auth=decodeURIComponent(C)),w=-1;for(U=0;U<l.length;U++){var k;-1!==(k=O.indexOf(l[U]))&&(-1===w||k<w)&&(w=k)}-1===w&&(w=O.length),this.host=O.slice(0,w),O=O.slice(w),this.parseHost(),this.hostname=this.hostname||"";var N="["===this.hostname[0]&&"]"===this.hostname[this.hostname.length-1];if(!N)for(var R=this.hostname.split(/\./),S=(U=0,R.length);U<S;U++){var $=R[U];if($&&!$.match(u)){for(var z="",H=0,L=$.length;H<L;H++)$.charCodeAt(H)>127?z+="x":z+=$[H];if(!z.match(u)){var Z=R.slice(0,U),_=R.slice(U+1),E=$.match(f);E&&(Z.push(E[1]),_.unshift(E[2])),_.length&&(O="/"+_.join(".")+O),this.hostname=Z.join(".");break}}}this.hostname.length>c?this.hostname="":this.hostname=this.hostname.toLowerCase(),N||(this.hostname=t.toASCII(this.hostname));var P=this.port?":"+this.port:"",T=this.hostname||"";this.host=T+P,this.href+=this.host,N&&(this.hostname=this.hostname.substr(1,this.hostname.length-2),"/"!==O[0]&&(O="/"+O))}if(!m[x])for(U=0,S=i.length;U<S;U++){var B=i[U];if(-1!==O.indexOf(B)){var D=encodeURIComponent(B);D===B&&(D=escape(B)),O=O.split(B).join(D)}}var F=O.indexOf("#");-1!==F&&(this.hash=O.substr(F),O=O.slice(0,F));var G=O.indexOf("?");if(-1!==G?(this.search=O.substr(G),this.query=O.substr(G+1),a&&(this.query=y.parse(this.query)),O=O.slice(0,G)):a&&(this.search="",this.query={}),O&&(this.pathname=O),g[x]&&this.hostname&&!this.pathname&&(this.pathname="/"),this.pathname||this.search){P=this.pathname||"";var J=this.search||"";this.path=P+J}return this.href=this.format(),this},h.prototype.format=function(){var t=this.auth||"";t&&(t=(t=encodeURIComponent(t)).replace(/%3A/i,":"),t+="@");var h=this.protocol||"",e=this.pathname||"",a=this.hash||"",r=!1,o="";this.host?r=t+this.host:this.hostname&&(r=t+(-1===this.hostname.indexOf(":")?this.hostname:"["+this.hostname+"]"),this.port&&(r+=":"+this.port)),this.query&&s.isObject(this.query)&&Object.keys(this.query).length&&(o=y.stringify(this.query));var n=this.search||o&&"?"+o||"";return h&&":"!==h.substr(-1)&&(h+=":"),this.slashes||(!h||g[h])&&!1!==r?(r="//"+(r||""),e&&"/"!==e.charAt(0)&&(e="/"+e)):r||(r=""),a&&"#"!==a.charAt(0)&&(a="#"+a),n&&"?"!==n.charAt(0)&&(n="?"+n),h+r+(e=e.replace(/[?#]/g,function(t){return encodeURIComponent(t)}))+(n=n.replace("#","%23"))+a},h.prototype.resolve=function(t){return this.resolveObject(b(t,!1,!0)).format()},h.prototype.resolveObject=function(t){if(s.isString(t)){var e=new h;e.parse(t,!1,!0),t=e}for(var a=new h,r=Object.keys(this),o=0;o<r.length;o++){var n=r[o];a[n]=this[n]}if(a.hash=t.hash,""===t.href)return a.href=a.format(),a;if(t.slashes&&!t.protocol){for(var i=Object.keys(t),l=0;l<i.length;l++){var p=i[l];"protocol"!==p&&(a[p]=t[p])}return g[a.protocol]&&a.hostname&&!a.pathname&&(a.path=a.pathname="/"),a.href=a.format(),a}if(t.protocol&&t.protocol!==a.protocol){if(!g[t.protocol]){for(var c=Object.keys(t),u=0;u<c.length;u++){var f=c[u];a[f]=t[f]}return a.href=a.format(),a}if(a.protocol=t.protocol,t.host||v[t.protocol])a.pathname=t.pathname;else{for(var m=(t.pathname||"").split("/");m.length&&!(t.host=m.shift()););t.host||(t.host=""),t.hostname||(t.hostname=""),""!==m[0]&&m.unshift(""),m.length<2&&m.unshift(""),a.pathname=m.join("/")}if(a.search=t.search,a.query=t.query,a.host=t.host||"",a.auth=t.auth,a.hostname=t.hostname||t.host,a.port=t.port,a.pathname||a.search){var y=a.pathname||"",b=a.search||"";a.path=y+b}return a.slashes=a.slashes||t.slashes,a.href=a.format(),a}var q=a.pathname&&"/"===a.pathname.charAt(0),O=t.host||t.pathname&&"/"===t.pathname.charAt(0),d=O||q||a.host&&t.pathname,j=d,x=a.pathname&&a.pathname.split("/")||[],A=(m=t.pathname&&t.pathname.split("/")||[],a.protocol&&!g[a.protocol]);if(A&&(a.hostname="",a.port=null,a.host&&(""===x[0]?x[0]=a.host:x.unshift(a.host)),a.host="",t.protocol&&(t.hostname=null,t.port=null,t.host&&(""===m[0]?m[0]=t.host:m.unshift(t.host)),t.host=null),d=d&&(""===m[0]||""===x[0])),O)a.host=t.host||""===t.host?t.host:a.host,a.hostname=t.hostname||""===t.hostname?t.hostname:a.hostname,a.search=t.search,a.query=t.query,x=m;else if(m.length)x||(x=[]),x.pop(),x=x.concat(m),a.search=t.search,a.query=t.query;else if(!s.isNullOrUndefined(t.search)){if(A)a.hostname=a.host=x.shift(),(k=!!(a.host&&a.host.indexOf("@")>0)&&a.host.split("@"))&&(a.auth=k.shift(),a.host=a.hostname=k.shift());return a.search=t.search,a.query=t.query,s.isNull(a.pathname)&&s.isNull(a.search)||(a.path=(a.pathname?a.pathname:"")+(a.search?a.search:"")),a.href=a.format(),a}if(!x.length)return a.pathname=null,a.search?a.path="/"+a.search:a.path=null,a.href=a.format(),a;for(var C=x.slice(-1)[0],I=(a.host||t.host||x.length>1)&&("."===C||".."===C)||""===C,w=0,U=x.length;U>=0;U--)"."===(C=x[U])?x.splice(U,1):".."===C?(x.splice(U,1),w++):w&&(x.splice(U,1),w--);if(!d&&!j)for(;w--;w)x.unshift("..");!d||""===x[0]||x[0]&&"/"===x[0].charAt(0)||x.unshift(""),I&&"/"!==x.join("/").substr(-1)&&x.push("");var k,N=""===x[0]||x[0]&&"/"===x[0].charAt(0);A&&(a.hostname=a.host=N?"":x.length?x.shift():"",(k=!!(a.host&&a.host.indexOf("@")>0)&&a.host.split("@"))&&(a.auth=k.shift(),a.host=a.hostname=k.shift()));return(d=d||a.host&&x.length)&&!N&&x.unshift(""),x.length?a.pathname=x.join("/"):(a.pathname=null,a.path=null),s.isNull(a.pathname)&&s.isNull(a.search)||(a.path=(a.pathname?a.pathname:"")+(a.search?a.search:"")),a.auth=t.auth||a.auth,a.slashes=a.slashes||t.slashes,a.href=a.format(),a},h.prototype.parseHost=function(){var t=this.host,s=a.exec(t);s&&(":"!==(s=s[0])&&(this.port=s.substr(1)),t=t.substr(0,t.length-s.length)),t&&(this.hostname=t)};
},{"punycode":"oWqx","./util":"YsIc","querystring":"fk5h"}],"PEEL":[function(require,module,exports) {
"use strict";exports.parse=n,exports.serialize=o;var e=decodeURIComponent,t=encodeURIComponent,r=/; */,i=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function n(t,i){if("string"!=typeof t)throw new TypeError("argument str must be a string");for(var n={},o=i||{},s=t.split(r),p=o.decode||e,f=0;f<s.length;f++){var u=s[f],m=u.indexOf("=");if(!(m<0)){var c=u.substr(0,m).trim(),l=u.substr(++m,u.length).trim();'"'==l[0]&&(l=l.slice(1,-1)),null==n[c]&&(n[c]=a(l,p))}}return n}function o(e,r,n){var o=n||{},a=o.encode||t;if("function"!=typeof a)throw new TypeError("option encode is invalid");if(!i.test(e))throw new TypeError("argument name is invalid");var s=a(r);if(s&&!i.test(s))throw new TypeError("argument val is invalid");var p=e+"="+s;if(null!=o.maxAge){var f=o.maxAge-0;if(isNaN(f))throw new Error("maxAge should be a Number");p+="; Max-Age="+Math.floor(f)}if(o.domain){if(!i.test(o.domain))throw new TypeError("option domain is invalid");p+="; Domain="+o.domain}if(o.path){if(!i.test(o.path))throw new TypeError("option path is invalid");p+="; Path="+o.path}if(o.expires){if("function"!=typeof o.expires.toUTCString)throw new TypeError("option expires is invalid");p+="; Expires="+o.expires.toUTCString()}if(o.httpOnly&&(p+="; HttpOnly"),o.secure&&(p+="; Secure"),o.sameSite)switch("string"==typeof o.sameSite?o.sameSite.toLowerCase():o.sameSite){case!0:p+="; SameSite=Strict";break;case"lax":p+="; SameSite=Lax";break;case"strict":p+="; SameSite=Strict";break;case"none":p+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return p}function a(e,t){try{return t(e)}catch(r){return e}}
},{}],"UnXq":[function(require,module,exports) {
"use strict";function e(e,a){return n(e)||r(e,a)||t()}function t(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function r(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,a=!1,o=void 0;try{for(var c,u=e[Symbol.iterator]();!(n=(c=u.next()).done)&&(r.push(c.value),!t||r.length!==t);n=!0);}catch(i){a=!0,o=i}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}}function n(e){if(Array.isArray(e))return e}var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var o=a(require("url")),c=a(require("cookie")),u=a(require("querystring")),i=require("../config");function l(e){var t=f(),r=e.replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/\n/g,"<br/>");if("zh-CN"===t)return r.replace(/[a-zA-Z0-9\(\)\[\]\{\}\\\/'"_\-\+\?\.\*!=\&\@\#%~:; ]+/g,function(e){var t=e.match(/^( *)(.*?)( *)$/);return null===t?"<code>".concat(e,"</code>"):t[2].startsWith("http")?"".concat(t[1],'<a href="').concat(t[2],'" target="_blank">').concat(t[2],"</a>").concat(t[3]):"".concat(t[1],"<code>").concat(t[2],"</code>").concat(t[3])}).replace(/禁止/g,'<strong style="color:#db5757; font-weight:600;">$&</strong>').replace(/必须/g,'<strong style="color:#267fd9; font-weight:600;">$&</strong>');var n=!1;return r.split("").map(function(e){return"`"!==e?e:(n=!n)?"<code>":"</code>"}).join("")}function s(e){var t=f();return i.locale[t][e]||e}function f(){var e,t=p().language;return e=Array.isArray(t)?t[t.length-1]:t,i.avaliableLanguages.includes(e)||(e=c.default.parse(document.cookie).language,i.avaliableLanguages.includes(e)||(e=i.avaliableLanguages[0])),g("language",e),e}function p(){return u.default.parse(location.search.replace(/^\?/,""))}function g(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:365;if(c.default.parse(document.cookie)[e]!==t){var n="";if(r){var a=new Date;a.setTime(a.getTime()+24*r*60*60*1e3),n="; expires="+a.toUTCString()}document.cookie=e+"="+(t||"")+n+"; path=/"}}function d(t){var r=t.path,n=t.query,a=o.default.parse(location.href,!0),c={pathname:a.pathname||"",query:a.query};r&&(c.pathname=o.default.resolve(c.pathname,r)),n&&Object.entries(n).forEach(function(t){var r=e(t,2),n=r[0],a=r[1];!1===a?delete c.query[n]:c.query[n]=!0===a?"1":a});var u={};return Object.entries(c.query).sort(function(t,r){var n=e(t,1)[0],a=e(r,1)[0];return n.localeCompare(a)}).forEach(function(t){var r=e(t,2),n=r[0],a=r[1];u[n]=a}),c.query=u,o.default.format(c)}function v(e,t){history.replaceState({},t||document.title,e)}function h(e,t,r){return void 0===e?t:null===e?t:"number"==typeof e&&isNaN(e)?t:void 0===r||r.includes(e)?e:t}exports.parseDescription=l,exports.t=s,exports.getLanguage=f,exports.getQuery=p,exports.newUrl=d,exports.replaceUrl=v,exports.defaultTo=h;
},{"url":"Mej7","cookie":"PEEL","querystring":"fk5h","../config":"TPIp"}],"fdAQ":[function(require,module,exports) {
"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var a=t(require("react")),l=require("../../config"),n=require("../utils");exports.RuleTable=function(t){var r=t.namespace,o=t.hideOff;return a.default.createElement("div",{className:"container-fluid"},a.default.createElement("div",{className:"flex-left flex-wrap units-gap hide-on-mobile"},a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile site-table-header-text"},n.t("规则说明")),a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile text-danger site-table-header-text"},n.t("错误的示例")),a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile text-success site-table-header-text"},n.t("正确的示例"))),Object.values(l.NAMESPACE_CONFIG[r].ruleConfig).map(function(t){var s=t.name,u=t.value,i=t.description,c=t.reason,m=t.badExample,d=t.goodExample;return a.default.createElement("div",{id:s,key:s,className:"flex-left flex-wrap top-gap-big units-gap site-row ".concat("off"===u?"site-row-off site-row-wide":""),style:"off"===u&&o?{display:"none"}:{}},a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile site-desc"},a.default.createElement("a",{href:l.NAMESPACE_CONFIG[r].getDocsUrl(s)},s),a.default.createElement("a",{className:"site-anchor",href:"#".concat(s)},"#"),a.default.createElement("p",{className:"top-gap-0",dangerouslySetInnerHTML:{__html:n.parseDescription(n.t(i))}}),c&&a.default.createElement("p",{className:"text-muted text-small",style:{marginTop:5},dangerouslySetInnerHTML:{__html:n.parseDescription(c)}}),Array.isArray(u)&&a.default.createElement("div",{className:"text-muted text-small site-rule-value"},n.t("配置："),"object"===e(u[1])?a.default.createElement("pre",null,a.default.createElement("code",null,'["error", '.concat(JSON.stringify(u[1],null,4),"]"))):a.default.createElement("code",null,'["error", '.concat(JSON.stringify(u[1]),"]")))),a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile"},m&&a.default.createElement("pre",{className:"language-".concat(l.NAMESPACE_CONFIG[r].prismLanguage," site-code")},a.default.createElement("code",{dangerouslySetInnerHTML:{__html:m}}))),a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile"},d&&a.default.createElement("pre",{className:"language-".concat(l.NAMESPACE_CONFIG[r].prismLanguage,"  site-code")},a.default.createElement("code",{dangerouslySetInnerHTML:{__html:d}}))))}))};
},{"react":"n8MK","../../config":"TPIp","../utils":"UnXq"}],"HdXq":[function(require,module,exports) {
"use strict";function e(e,n){return a(e)||r(e,n)||t()}function t(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function r(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],a=!0,n=!1,u=void 0;try{for(var l,i=e[Symbol.iterator]();!(a=(l=i.next()).done)&&(r.push(l.value),!t||r.length!==t);a=!0);}catch(s){n=!0,u=s}finally{try{a||null==i.return||i.return()}finally{if(n)throw u}}return r}}function a(e){if(Array.isArray(e))return e}var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var u=n(require("react")),l=require("../utils"),i=require("../../config");exports.LanguageSwtich=function(t){var r=t.language,a=[];return Object.entries(i.languageOptions).forEach(function(t,n){var s=e(t,2),o=s[0],c=s[1];o===r?a.push(u.default.createElement("span",{key:o},c)):a.push(u.default.createElement("a",{key:o,className:"site-language",href:l.newUrl({query:{language:o}})},c)),n<Object.keys(i.languageOptions).length-1&&a.push(u.default.createElement("span",{key:o+"-separator",className:"site-language-separator"},"/"))}),u.default.createElement("span",{className:"site-languages"},a)};
},{"react":"n8MK","../utils":"UnXq","../../config":"TPIp"}],"cjTR":[function(require,module,exports) {
"use strict";function e(e,l){return a(e)||r(e,l)||t()}function t(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function r(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],a=!0,l=!1,n=void 0;try{for(var u,i=e[Symbol.iterator]();!(a=(u=i.next()).done)&&(r.push(u.value),!t||r.length!==t);a=!0);}catch(c){l=!0,n=c}finally{try{a||null==i.return||i.return()}finally{if(l)throw n}}return r}}function a(e){if(Array.isArray(e))return e}var l=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var u=l(require("react")),i=n(require("react-tooltip")),c=require("../../config"),o=require("./GitHubCorner"),f=require("./RuleTable"),d=require("./LanguageSwtich"),s=require("../utils");exports.App=function(){var t=s.getQuery(),r=e(u.useState(s.defaultTo(t.rule,c.NAMESPACES[0],c.NAMESPACES)),2),a=r[0],l=r[1],n=e(u.useState("1"===t.hideOff),2),m=n[0],p=n[1],g=s.getLanguage();u.useEffect(function(){document.documentElement.lang=g},[]),u.useEffect(function(){i.default.rebuild()},[a]);var h=u.default.createElement("div",{className:"flex-center"},u.default.createElement("div",{className:"container-fluid"},u.default.createElement("h1",{className:"site-title"},"eslint-config-alloy"),u.default.createElement(d.LanguageSwtich,{language:g}),u.default.createElement("form",{className:"top-gap site-form"},u.default.createElement("select",{value:a,onChange:function(e){l(e.target.value),s.replaceUrl(s.newUrl({query:{rule:e.target.value}}))}},c.NAMESPACES.map(function(e){return u.default.createElement("option",{key:e,value:e},e)})),u.default.createElement("label",null,u.default.createElement("input",{type:"checkbox",checked:m,onChange:function(e){p(e.target.checked),s.replaceUrl(s.newUrl({query:{hideOff:e.target.checked}}))}}),s.t("隐藏已禁用的规则")))));return u.default.createElement(u.default.Fragment,null,u.default.createElement(o.GitHubCorner,{href:"https://github.com/AlloyTeam/eslint-config-alloy"}),h,u.default.createElement(f.RuleTable,{namespace:a,hideOff:m}),u.default.createElement(i.default,{className:"site-react-tooltip",place:"top",type:"error",effect:"solid",delayHide:100,html:!0}))};
},{"react":"n8MK","react-tooltip":"fMCj","../../config":"TPIp","./GitHubCorner":"q9NT","./RuleTable":"fdAQ","./LanguageSwtich":"HdXq","../utils":"UnXq"}],"zo2T":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("react")),r=require("react-dom"),u=require("./components/App");r.render(t.default.createElement(u.App,null),document.getElementById("app"));
},{"react":"n8MK","react-dom":"NKHc","./components/App":"cjTR"}]},{},["zo2T"], null)
//# sourceMappingURL=site.daccef99.js.map